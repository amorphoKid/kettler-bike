(undo-tree-save-format-version . 1)
"6d9465bb4475aeae4caa458e0832b27c983492dd"
[nil nil nil nil (25491 44768 428470 845000) 0 nil]
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t)) . -2767) (undo-tree-id17 . -1) 2768 (2767 . 2768) (2748 . 2749) (#(")" 0 1 (fontified t)) . 2748) (t 25489 1821 972890 966000)) nil (25491 44768 428465 160000) 0 nil])
([nil nil ((#("
(defn update-hr [pars val]
  (dosync (ref-set pars {:mode (:mode @pars) :hr-target (:hr-target @pars)
                         :hr-actual (+ val (:hr-actual @pars))}))) 

(defn kettler-control [pars]
   (let [start-trans {:conditions []
                      :on-success #(println @pars)
                      :transition :start}]
     {:start [{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}]
      :hr-target [{:conditions [#(< (:hr-actual @pars) (:hr-target @pars))]
                   :transition :increase-pw}
                  {:conditions [#(> (:hr-actual @pars) (:hr-target @pars))]
                   :transition :decrease-pw}
                  start-trans]
     :increase-pw [{:conditions []
                    :on-success #(do (println @pars)
                                     (update-hr pars 1))
                    :transition :start}]
     :decrease-pw [{:conditions []
                    :on-success #(do (println @pars)
                                     (update-hr pars -1))
                    :transition :start}]
      }))
" 0 1 (fontified t) 1 2 (fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 16 (face font-lock-function-name-face fontified t) 16 28 (fontified t) 28 31 (fontified t) 31 37 (face font-lock-keyword-face fontified t) 37 53 (fontified t) 53 54 (face clojure-keyword-face fontified t) 54 58 (face clojure-keyword-face fontified t) 58 60 (fontified t) 60 61 (face clojure-keyword-face fontified t) 61 65 (face clojure-keyword-face fontified t) 65 73 (fontified t) 73 74 (face clojure-keyword-face fontified t) 74 83 (face clojure-keyword-face fontified t) 83 85 (fontified t) 85 86 (face clojure-keyword-face fontified t) 86 95 (face clojure-keyword-face fontified t) 95 128 (fontified t) 128 129 (face clojure-keyword-face fontified t) 129 138 (face clojure-keyword-face fontified t) 138 147 (fontified t) 147 148 (face clojure-keyword-face fontified t) 148 157 (face clojure-keyword-face fontified t) 157 171 (fontified t) 171 173 (fontified t) 173 177 (face font-lock-keyword-face fontified t) 177 178 (fontified t) 178 193 (face font-lock-function-name-face fontified t) 193 205 (fontified t) 205 208 (face font-lock-keyword-face fontified t) 208 223 (fontified t) 223 224 (face clojure-keyword-face fontified t) 224 234 (face clojure-keyword-face fontified t) 234 260 (fontified t) 260 261 (face clojure-keyword-face fontified t) 261 271 (face clojure-keyword-face fontified t) 271 311 (fontified t) 311 312 (face clojure-keyword-face fontified t) 312 322 (face clojure-keyword-face fontified t) 322 323 (fontified t) 323 324 (face clojure-keyword-face fontified t) 324 329 (face clojure-keyword-face fontified t) 329 338 (fontified t) 338 339 (face clojure-keyword-face fontified t) 339 344 (face clojure-keyword-face fontified t) 344 347 (fontified t) 347 348 (face clojure-keyword-face fontified t) 348 358 (face clojure-keyword-face fontified t) 358 365 (fontified t) 365 366 (face clojure-keyword-face fontified t) 366 370 (face clojure-keyword-face fontified t) 370 378 (fontified t) 378 389 (face font-lock-string-face fontified t) 389 407 (fontified t) 407 408 (face clojure-keyword-face fontified t) 408 418 (face clojure-keyword-face fontified t) 418 419 (fontified t) 419 420 (face clojure-keyword-face fontified t) 420 429 (face clojure-keyword-face fontified t) 429 438 (fontified t) 438 439 (face clojure-keyword-face fontified t) 439 448 (face clojure-keyword-face fontified t) 448 451 (fontified t) 451 452 (face clojure-keyword-face fontified t) 452 462 (face clojure-keyword-face fontified t) 462 469 (fontified t) 469 470 (face clojure-keyword-face fontified t) 470 479 (face clojure-keyword-face fontified t) 479 488 (fontified t) 488 489 (face clojure-keyword-face fontified t) 489 498 (face clojure-keyword-face fontified t) 498 499 (fontified t) 499 508 (fontified t) 508 527 (fontified t) 527 528 (face clojure-keyword-face fontified t) 528 538 (face clojure-keyword-face fontified t) 538 539 (fontified t) 539 540 (face clojure-keyword-face fontified t) 540 551 (face clojure-keyword-face fontified t) 551 572 (fontified t) 572 573 (face clojure-keyword-face fontified t) 573 583 (face clojure-keyword-face fontified t) 583 590 (fontified t) 590 591 (face clojure-keyword-face fontified t) 591 600 (face clojure-keyword-face fontified t) 600 609 (fontified t) 609 610 (face clojure-keyword-face fontified t) 610 619 (face clojure-keyword-face fontified t) 619 648 (fontified t) 648 649 (face clojure-keyword-face fontified t) 649 659 (face clojure-keyword-face fontified t) 659 660 (fontified t) 660 661 (face clojure-keyword-face fontified t) 661 671 (face clojure-keyword-face fontified t) 671 672 (fontified t face clojure-keyword-face) 672 710 (fontified t) 710 711 (fontified t face clojure-keyword-face) 711 722 (fontified t face clojure-keyword-face) 722 725 (fontified t) 725 726 (fontified t face clojure-keyword-face) 726 736 (fontified t face clojure-keyword-face) 736 760 (fontified t) 760 761 (fontified t face clojure-keyword-face) 761 771 (fontified t face clojure-keyword-face) 771 774 (fontified t) 774 776 (fontified t face font-lock-keyword-face) 776 870 (fontified t) 870 871 (fontified t face clojure-keyword-face) 871 881 (fontified t face clojure-keyword-face) 881 882 (fontified t) 882 883 (fontified t face clojure-keyword-face) 883 888 (fontified t face clojure-keyword-face) 888 896 (fontified t) 896 897 (fontified t face clojure-keyword-face) 897 908 (fontified t face clojure-keyword-face) 908 911 (fontified t) 911 912 (fontified t face clojure-keyword-face) 912 922 (fontified t face clojure-keyword-face) 922 946 (fontified t) 946 947 (fontified t face clojure-keyword-face) 947 957 (fontified t face clojure-keyword-face) 957 960 (fontified t) 960 962 (fontified t face font-lock-keyword-face) 962 1008 (fontified t) 1008 1037 (fontified t) 1037 1057 (fontified t) 1057 1058 (fontified t face clojure-keyword-face) 1058 1068 (fontified t face clojure-keyword-face) 1068 1069 (fontified t) 1069 1070 (fontified t face clojure-keyword-face) 1070 1075 (fontified t face clojure-keyword-face) 1075 1088 (fontified t)) . 2751) (undo-tree-id14 . -15) (undo-tree-id15 . 1072) (undo-tree-id16 . -15)) nil (25491 44768 428453 402000) 0 nil])
([nil nil ((2753 . 2755) (#("  " 0 2 (fontified nil)) . 2752) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (2752 . 2755) (#("  " 0 2 (fontified nil)) . 2751) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (2751 . 2754) (#("  " 0 2 (fontified nil)) . 2750) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (2750 . 2753) (#("  " 0 2 (fontified nil)) . 2749) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (2748 . 2752)) nil (25491 44768 428437 218000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2751 . 2752) (#("
" 0 1 (fontified nil)) . -2929) (2749 . 2930)) nil (25491 44768 428404 221000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t)) . -101) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 102 (100 . 102)) nil (25491 44768 428396 888000) 0 nil])
([nil nil ((2920 . 2924) (2854 . 2856) (2852 . 2854) (2834 . 2836) (#("," 0 1 (fontified t)) . -2834) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2835 (2834 . 2835) (#("," 0 1 (fontified t)) . -2834) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 2835 (2832 . 2835)) nil (25491 44768 428376 131000) 0 nil])
([nil nil ((2903 . 2904) (#("4" 0 1 (cider-locals ("args" "sm" "pars" "_") help-echo cider--help-echo fontified t)) . 2903) (t 25491 44768 789606 334000)) nil (25491 44856 314873 774000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t cider-locals ("args" "sm" "pars") face font-lock-type-face)) . 2852) (t 25491 44856 324154 950000)) nil (25491 45383 773965 192000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args" "sm" "pars") face font-lock-type-face)) . 2852)) nil (25491 45383 773960 155000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args" "sm" "pars") face font-lock-type-face)) . 2852)) nil (25491 45383 773955 822000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args" "sm" "pars"))) . 2852)) nil (25491 45383 773951 692000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2332) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2333) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 2334 (2333 . 2334) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2333) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 2334 (2333 . 2334) (2331 . 2334) (2331 . 2332)) nil (25491 45383 773943 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2332 . 2333) (nil fontified nil 2332 . 2333) (2332 . 2333)) nil (25491 45383 773874 880000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2333 . 2334) (#("
" 0 1 (fontified nil)) . -3249) (2333 . 3250) 2332) nil (25491 45383 773866 380000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals nil face font-lock-function-name-face)) . 2332)) nil (25491 45383 773850 454000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2332 . 2333) (#("
" 0 1 (cider-locals nil fontified nil)) . -2502) (2332 . 2503) (t 25491 45383 780084 619000)) nil (25491 45445 526574 629000) 0 nil])
([nil nil ((3989 . 3990) (#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-trans" "args" "sm" "pars" "_"))) . 3989) (t 25491 45445 538329 943000)) nil (25491 45507 255932 501000) 0 nil])
([nil nil ((3988 . 3989) (#("1" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-trans" "args" "sm" "pars" "_"))) . 3988) (undo-tree-id7 . -1) (t 25491 45507 266752 794000)) nil (25491 45609 316716 685000) 0 nil])
([nil current ((3710 . 3711) (#("5" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-trans" "args" "_"))) . 3710) (t 25491 45609 334434 771000)) nil (25491 45634 419750 348000) 0 nil])
nil
