(undo-tree-save-format-version . 1)
"d2e0c6266230bc53e4ee5adc6c4479ecfe0fcfc9"
[nil nil nil nil (25525 61308 552318 854000) 0 nil]
([nil nil ((nil rear-nonsticky nil 40 . 41) (#("
" 0 1 (fontified nil)) . -922) (40 . 923) (t 25524 42773 339400 72000)) nil (25525 61308 552313 687000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -923) (undo-tree-id17 . -1) 924 (923 . 924) (923 . 924)) nil (25525 61308 552306 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 923 . 924) (#("
" 0 1 (fontified nil)) . -1826) (923 . 1827)) nil (25525 61308 552295 909000) 0 nil])
([nil nil ((#("#(< (:hr @pars) (:hr-target @pars))" 0 5 (fontified t) 5 6 (fontified t face clojure-keyword-face) 6 8 (fontified t face clojure-keyword-face) 8 17 (fontified t) 17 18 (fontified t face clojure-keyword-face) 18 27 (fontified t face clojure-keyword-face) 27 35 (fontified t)) . 1216)) nil (25525 61308 552290 780000) 0 nil])
([nil nil ((#("#(> (:hr @pars) (:hr-target @pars))" 0 5 (fontified t) 5 6 (fontified t face clojure-keyword-face) 6 8 (fontified t face clojure-keyword-face) 8 17 (fontified t) 17 18 (fontified t face clojure-keyword-face) 18 27 (fontified t face clojure-keyword-face) 27 35 (fontified t)) . 1295)) nil (25525 61308 552287 58000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1441)) nil (25525 61308 552283 410000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 1441)) nil (25525 61308 552279 539000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1441)) nil (25525 61308 552275 817000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1441)) nil (25525 61308 552272 39000) 0 nil])
([nil nil ((#("(update-hr pars 1)" 0 18 (fontified t)) . 1494)) nil (25525 61308 552268 151000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1494)) nil (25525 61308 552264 151000) 0 nil])
([nil nil ((#("                                     
" 0 37 (fontified t) 37 38 (fontified t)) . 1457) (undo-tree-id16 . -36) 1493) nil (25525 61308 552259 336000) 0 nil])
([nil nil ((#("                                     (update-hr pars -1))
" 0 58 (fontified t)) . 1586) (undo-tree-id15 . -33) 1619) nil (25525 61308 552250 521000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1566)) nil (25525 61308 552242 447000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 1566)) nil (25525 61308 552238 614000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1566)) nil (25525 61308 552234 318000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1566)) nil (25525 61308 552230 355000) 0 nil])
([nil nil ((1505 . 1514) (#("f" 0 1 (fontified t face clojure-keyword-face)) . -1505) (undo-tree-id7 . -1) (#("a" 0 1 (fontified t face clojure-keyword-face)) . -1506) (undo-tree-id8 . -1) (#("t" 0 1 (fontified t face clojure-keyword-face)) . -1507) (undo-tree-id9 . -1) 1508 (1502 . 1508) (#("w" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("p" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("-" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("e" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("s" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("a" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("e" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("r" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("c" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("e" 0 1 (fontified t face clojure-keyword-face)) . 1502) (#("d" 0 1 (fontified t face clojure-keyword-face)) . 1502) (1379 . 1388) (#("c" 0 1 (fontified t face clojure-keyword-face)) . -1379) (undo-tree-id10 . -1) (#("h" 0 1 (fontified t face clojure-keyword-face)) . -1380) (undo-tree-id11 . -1) (#("e" 0 1 (fontified t face clojure-keyword-face)) . -1381) (undo-tree-id12 . -1) (#("c" 0 1 (fontified t face clojure-keyword-face)) . -1382) (undo-tree-id13 . -1) (#("k" 0 1 (fontified t face clojure-keyword-face)) . -1383) (undo-tree-id14 . -1) 1384 (1379 . 1384) (#("w" 0 1 (fontified t face clojure-keyword-face)) . 1379) (#("p" 0 1 (fontified t face clojure-keyword-face)) . 1379) (#("-" 0 1 (fontified t face clojure-keyword-face)) . 1379) (#("w" 0 1 (fontified t face clojure-keyword-face)) . 1379) (#("c" 0 1 (fontified t face clojure-keyword-face)) . 1379) (1379 . 1381) (#("increase" 0 8 (fontified t face clojure-keyword-face)) . 1379)) nil (25525 61308 552213 818000) 0 nil])
([nil nil ((#("     :get-state [{:conditions []
                    :on-success #(println @pars)
                    :transition :start}]
" 0 5 (fontified t) 5 6 (fontified t face clojure-keyword-face) 6 15 (fontified t face clojure-keyword-face) 15 18 (fontified t) 18 19 (fontified t face clojure-keyword-face) 19 29 (fontified t face clojure-keyword-face) 29 33 (fontified t) 33 53 (fontified t) 53 54 (fontified t face clojure-keyword-face) 54 64 (fontified t face clojure-keyword-face) 64 66 (fontified t) 66 82 (fontified t) 82 102 (fontified t) 102 103 (fontified t face clojure-keyword-face) 103 113 (fontified t face clojure-keyword-face) 113 114 (fontified t) 114 115 (fontified t face clojure-keyword-face) 115 120 (fontified t face clojure-keyword-face) 120 122 (fontified t) 122 123 (fontified t)) . 1373) (undo-tree-id0 . -86) (undo-tree-id1 . -86) (undo-tree-id2 . 118) (undo-tree-id3 . -4) (undo-tree-id4 . -86) (undo-tree-id5 . -4) (undo-tree-id6 . -86) 1459) nil (25525 61308 552166 467000) 0 nil])
([nil nil ((#("increase" 0 8 (fontified t face clojure-keyword-face)) . 1250)) nil (25525 61308 552102 5000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face clojure-keyword-face)) . 1250)) nil (25525 61308 552435 92000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1252 . 1253) (nil fontified nil 1251 . 1253) (1251 . 1253) 1250) nil (25525 61423 428916 390000) 0 nil] [nil nil ((#("pw" 0 2 (fontified t face clojure-keyword-face)) . 1250)) ((1250 . 1252)) (25525 61308 552084 153000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face clojure-keyword-face)) . -1262) (undo-tree-id45 . -1) (1262 . 1263) 1261 (1262 . 1264) (1259 . 1260) (1250 . 1261)) nil (25525 61423 428896 57000) 0 nil])
nil
([nil nil ((#("x" 0 1 (fontified t face clojure-keyword-face)) . 1262) (undo-tree-id44 . 1)) nil (25525 61423 428864 651000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t face clojure-keyword-face)) . 1262) (undo-tree-id43 . 1)) nil (25525 61423 428842 559000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face clojure-keyword-face)) . 1262) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . 1) (undo-tree-id42 . -1)) nil (25525 61423 428819 837000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face clojure-keyword-face)) . 1262) (undo-tree-id37 . -1) (undo-tree-id38 . 1)) nil (25525 61423 428773 654000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t rear-nonsticky t face clojure-keyword-face)) . 1262) (undo-tree-id36 . 1)) nil (25525 61423 428742 211000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face clojure-keyword-face)) . 1262) (undo-tree-id35 . 1)) nil (25525 61423 428719 952000) 0 nil])
([nil nil ((#("{:conditions []
                   :transition :decrease-pw}
                  start-trans]" 0 1 (fontified t) 1 2 (fontified t face clojure-keyword-face) 2 12 (fontified t face clojure-keyword-face) 12 14 (fontified t) 14 16 (fontified t) 16 35 (fontified t) 35 36 (fontified t face clojure-keyword-face) 36 46 (fontified t face clojure-keyword-face) 46 47 (fontified t) 47 48 (fontified t face clojure-keyword-face) 48 59 (fontified t face clojure-keyword-face) 59 72 (fontified t) 72 91 (fontified t)) . 1282) (undo-tree-id31 . -90) (undo-tree-id32 . -90) (undo-tree-id33 . -90) (undo-tree-id34 . -90) 1372) nil (25525 61423 428695 860000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -1283) (undo-tree-id30 . -1) (1283 . 1284) 1264 (1263 . 1264)) nil (25525 61423 428647 10000) 0 nil])
([nil nil ((#("                  
" 0 18 (fontified t) 18 19 (fontified t)) . 1265) (undo-tree-id22 . -18) (undo-tree-id23 . -17) (undo-tree-id24 . 1) (undo-tree-id25 . -18) (undo-tree-id26 . 1) (undo-tree-id27 . -18) (undo-tree-id28 . -18) (undo-tree-id29 . -19) 1282) nil (25525 61423 428613 752000) 0 nil])
([nil nil ((#("   (let [start-trans {:conditions []
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 15 (fontified t) 15 22 (fontified t) 22 23 (fontified t face clojure-keyword-face) 23 33 (fontified t face clojure-keyword-face) 33 37 (fontified t)) . 953) (undo-tree-id21 . -3) 956) nil (25525 61423 428455 350000) 0 nil])
([nil nil ((#("                      :on-success #(println @pars)
" 0 22 (fontified t) 22 23 (fontified t face clojure-keyword-face) 23 33 (fontified t face clojure-keyword-face) 33 50 (fontified t) 50 51 (fontified t)) . 953) (undo-tree-id20 . -3) 956) nil (25525 61423 428418 463000) 0 nil])
([nil nil ((#("                      :transition :start}]
" 0 22 (fontified t) 22 23 (fontified t face clojure-keyword-face) 23 33 (fontified t face clojure-keyword-face) 33 34 (fontified t) 34 35 (fontified t face clojure-keyword-face) 35 40 (fontified t face clojure-keyword-face) 40 42 (fontified t) 42 43 (fontified t)) . 953) (undo-tree-id19 . -3) 956) nil (25525 61423 428385 890000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1268)) nil (25525 61423 428358 576000) 0 nil])
([nil nil ((1267 . 1268) (#(")" 0 1 (fontified t)) . 1267) (undo-tree-id18 . -1)) nil (25525 61423 428333 558000) 0 nil])
([nil nil ((#("println \"Hello, World!\"" 0 8 (fontified t) 8 23 (fontified t face font-lock-string-face)) . 1332) (t 25525 61423 443244 364000)) nil (25525 61485 267934 782000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1331)) nil (25525 61485 267920 597000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1331)) nil (25525 61485 267908 560000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1334 . 1335) (#("
" 0 1 (fontified nil)) . -1681) (1332 . 1682) 1331) nil (25525 61485 267895 153000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1331)) nil (25525 61485 267877 469000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1679) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) nil (25525 61485 267863 432000) 0 nil])
([nil nil ((1679 . 1680)) nil (25525 61485 267832 155000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1677) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(")" 0 1 (fontified t)) . -1678) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(")" 0 1 (fontified t)) . -1679) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 1680) nil (25525 61485 267808 656000) 0 nil])
([nil nil ((1677 . 1681)) nil (25525 61485 267661 68000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-doc-face)) . 1285) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-doc-face)) . 1285) (undo-tree-id62 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-doc-face)) . 1285) (1287 . 1288) (nil fontified nil 1282 . 1284) (#("  " 0 2 (fontified nil)) . 1282) (1284 . 1286) (1286 . 1287) (nil fontified nil 1282 . 1284) (#("  " 0 2 (fontified nil)) . 1282) (1284 . 1286) (1285 . 1286) (t 25525 61485 281179 790000)) nil (25525 61572 446590 148000) 0 nil])
([nil nil ((#("I don't do a whole lot ... yet." 0 31 (fontified t help-echo cider--help-echo cider-locals ("args") face font-lock-doc-face)) . 1285) (undo-tree-id61 . 31)) nil (25525 61572 446561 667000) 0 nil])
([nil nil ((1381 . 1383) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1311 . 1312) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1310 . 1311) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1309 . 1310) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1308 . 1309) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1307 . 1308) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1306 . 1307) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1305 . 1306) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1304 . 1305) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1303 . 1304) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1302 . 1303) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1301 . 1302) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1300 . 1301) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1299 . 1300) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1298 . 1299) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1297 . 1298) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1296 . 1297) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1295 . 1296) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1294 . 1295) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1293 . 1294) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1292 . 1293) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1291 . 1292) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1290 . 1291) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1289 . 1290) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args") face font-lock-doc-face)) . -1289) (undo-tree-id58 . -1) 1290 (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1289 . 1290) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1288 . 1289) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args") face font-lock-doc-face)) . -1288) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("args") face font-lock-doc-face)) . -1289) (undo-tree-id60 . -1) 1290 (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1289 . 1290) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1288 . 1289) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1287 . 1288) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1286 . 1287) (nil fontified nil 1282 . 1284) (nil help-echo cider--help-echo 1282 . 1284) (nil cider-locals ("args") 1282 . 1284) (#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 1282) (1284 . 1286) (1285 . 1286)) nil (25525 61572 446781 624000) 0 nil])
([nil nil ((1381 . 1386) (#("cwhr" 0 2 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 2 4 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face)) . 1381) (undo-tree-id81 . 4)) nil (25525 61639 778176 711000) 0 nil] [nil nil ((#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face)) . 1380)) ((1380 . 1381)) (25525 61572 446216 565000) 0 nil])
([nil nil ((#("     :hr 000
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 8 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 8 13 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id79 . 6) (undo-tree-id80 . -5) 1404) nil (25525 61639 778167 452000) 0 nil])
nil
([nil nil ((#("     :rpm 000
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 7 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 7 9 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 9 13 (help-echo cider--help-echo fontified t cider-locals ("args")) 13 14 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id77 . 14) (undo-tree-id78 . -5) 1404) nil (25525 61639 778155 582000) 0 nil])
([nil nil ((#("     :speed 000
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 11 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 11 15 (help-echo cider--help-echo fontified t cider-locals ("args")) 15 16 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id75 . 16) (undo-tree-id76 . -5) 1404) nil (25525 61639 778142 693000) 0 nil])
([nil nil ((#("     :dist 000
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 10 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 10 14 (help-echo cider--help-echo fontified t cider-locals ("args")) 14 15 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id73 . 15) (undo-tree-id74 . -5) 1404) nil (25525 61639 778131 82000) 0 nil])
([nil nil ((#("     :req-power 025
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 15 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 15 19 (help-echo cider--help-echo fontified t cider-locals ("args")) 19 20 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id71 . 20) (undo-tree-id72 . -5) 1404) nil (25525 61639 778118 212000) 0 nil])
([nil nil ((#("     :energy 0000
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 12 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 12 17 (help-echo cider--help-echo fontified t cider-locals ("args")) 17 18 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id69 . 18) (undo-tree-id70 . -5) 1404) nil (25525 61639 778105 27000) 0 nil])
([nil nil ((#("     :time \"00:00\"
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 10 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 10 11 (help-echo cider--help-echo fontified t cider-locals ("args")) 11 12 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-string-face) 12 17 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-string-face) 17 18 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-string-face) 18 19 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id67 . 19) (undo-tree-id68 . -5) 1404) nil (25525 61639 778087 139000) 0 nil])
([nil nil ((#("     :power 000}
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("args")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 6 11 (help-echo cider--help-echo fontified t cider-locals ("args") face clojure-keyword-face) 11 16 (help-echo cider--help-echo fontified t cider-locals ("args")) 16 17 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1399) (undo-tree-id65 . 17) (undo-tree-id66 . -5) 1404) nil (25525 61639 778074 472000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref" "pars"))) . 1436) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref" "sm" "pars"))) . -1427) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 1428 (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref" "sm" "pars"))) . 1428) (#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref" "sm" "pars"))) . 1428) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref" "sm" "pars"))) . 1428) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref" "sm" "pars"))) . 1428) (1349 . 1350) (1335 . 1340)) nil (25525 61639 778052 214000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref"))) . 1336) (t 25525 61639 776853 133000)) nil (25525 61757 147850 813000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ef"))) . 1336)) nil (25525 61757 147846 165000) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "f"))) . 1336)) nil (25525 61757 147842 54000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "demo_pars"))) . 1336)) nil (25525 61757 147838 240000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "demo_pars"))) . 1335)) nil (25525 61757 147834 258000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 1344)) nil (25525 61757 147830 203000) 0 nil])
([nil nil ((1344 . 1349)) nil (25525 61757 147826 629000) 0 nil])
([nil nil ((1409 . 1410)) nil (25525 61757 147822 647000) 0 nil])
([nil nil ((1408 . 1409)) nil (25525 61757 147818 351000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref"))) . -1410) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 1411) nil (25525 61757 147811 796000) 0 nil])
([nil nil ((1410 . 1411)) nil (25525 61757 147769 556000) 0 nil])
([nil nil ((1284 . 1285) (1220 . 1232) (1207 . 1220) (1208 . 1244) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1207) (undo-tree-id88 . -1) (1208 . 1209) (1224 . 1262) (1190 . 1191) (1222 . 1223) (1205 . 1207) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1205) (undo-tree-id89 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1206) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1207) (undo-tree-id91 . -1) 1208 (1203 . 1208) (t 25525 61757 154083 749000)) nil (25525 61888 196680 676000) 0 nil])
([nil nil ((1271 . 1274) (1192 . 1193) (1139 . 1140) 1169) nil (25525 61888 196635 825000) 0 nil])
([nil nil ((1086 . 1106) 1085) nil (25525 61888 196624 770000) 0 nil])
([nil nil ((1106 . 1123)) nil (25525 61888 196616 862000) 0 nil])
([nil nil ((1123 . 1144)) nil (25525 61888 196610 307000) 0 nil])
([nil nil ((1144 . 1181)) nil (25525 61888 196603 418000) 0 nil])
([nil nil ((1181 . 1188)) nil (25525 61888 196596 641000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1187) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 1188) nil (25525 61888 196587 30000) 0 nil])
([nil nil ((1187 . 1193)) nil (25525 61888 196565 456000) 0 nil])
([nil nil ((1193 . 1195)) nil (25525 61888 196557 938000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1194) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 1195) nil (25525 61888 196547 327000) 0 nil])
([nil nil ((1194 . 1197)) nil (25525 61888 196490 698000) 0 nil])
([nil nil ((1756 . 1763) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars" "_"))) . -1756) (undo-tree-id92 . -1) 1757 (1754 . 1757) (1745 . 1754) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars"))) . -1725) (undo-tree-id93 . -1) 1726 (1725 . 1726) (1738 . 1745) (t 25525 61888 211302 564000)) nil (25525 61938 925001 706000) 0 nil])
([nil nil ((#("      " 0 6 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars" "_"))) . -1770) 1787) nil (25525 61938 924950 522000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1765 . 1766) (#("
" 0 1 (cider-locals ("args") fontified nil)) . -1785) (1763 . 1786) 1745 (t 25525 61938 930285 361000)) nil (25525 61980 829326 767000) 0 nil])
([nil nil ((#("      (thread/delay 500)
" 0 6 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars" "_")) 6 7 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars" "_")) 7 13 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars" "_") face font-lock-type-face) 13 24 (help-echo cider--help-echo fontified t cider-locals ("pars" "args" "sm" "pars" "_")) 24 25 (fontified t help-echo cider--help-echo cider-locals ("pars" "args" "sm" "pars" "_"))) . 1739) (undo-tree-id94 . -25) (undo-tree-id95 . -23) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -2) (undo-tree-id102 . -2) 1741) nil (25525 61980 829317 507000) 0 nil])
([nil nil ((1741 . 1745)) nil (25525 62080 656309 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1135 . 1136) (nil fontified nil 1051 . 1136) (1051 . 1136) 1050 (t 25525 61980 839463 273000)) nil (25525 62121 822651 798000) 0 nil] [nil nil ((nil rear-nonsticky nil 1136 . 1137) (nil fontified nil 1052 . 1137) (1052 . 1137) 1051 (t 25525 61980 839463 273000)) ((#("{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}]" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 16 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 16 17 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 17 19 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 20 24 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 24 32 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 32 43 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 43 46 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 46 61 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 61 62 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 62 72 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 72 73 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 73 74 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 74 83 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 83 84 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 84 85 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1052) (undo-tree-id103 . -84) (undo-tree-id104 . -84) (undo-tree-id105 . -46) (undo-tree-id106 . -84) (nil fontified t 1095 . 1098) (nil fontified t 1084 . 1095) (nil fontified t 1076 . 1084) (nil fontified t 1072 . 1076) (nil fontified t 1071 . 1072) (nil fontified t 1069 . 1071) (nil fontified t 1068 . 1069) (nil fontified t 1064 . 1068) (nil fontified t 1054 . 1064) (nil fontified t 1053 . 1054) (nil fontified t 1052 . 1053) (nil rear-nonsticky t 1136 . 1137)) (25525 62080 655339 5000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1080) (undo-tree-id108 . -1) (1080 . 1081) 1081 (1080 . 1081) (1051 . 1066)) nil (25525 62121 822644 298000) 0 nil])
nil
([nil nil ((#("d#(= (:mode @pars) \"hr-target\")" 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 3 4 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 4 6 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 6 7 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 7 11 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 11 19 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 30 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 30 31 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1080) (undo-tree-id107 . 31)) nil (25525 62121 822632 336000) 0 nil])
([nil nil ((#("hr-target" 0 9 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1110)) nil (25525 62121 822600 947000) 0 nil])
([nil nil ((1110 . 1115)) nil (25525 62121 822589 133000) 0 nil])
([nil nil ((1117 . 1118) (t 25525 62121 826788 721000)) nil (25525 62155 39939 179000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1116)) nil (25525 62155 39927 809000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1116) (undo-tree-id109 . 1)) nil (25525 62178 571085 480000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1124) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 1125 (1124 . 1125) (1117 . 1124) (t 25525 62155 56173 769000) 1115) nil (25525 62260 177713 931000) 0 nil] [nil nil ((1117 . 1124) (t 25525 62155 56173 769000) 1116) ((#("
      " 0 7 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1117)) (25525 62178 570211 144000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 6 7 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1118) (undo-tree-id119 . 1) (undo-tree-id120 . 1)) nil (25525 62260 177682 154000) 0 nil])
nil
([nil nil ((1116 . 1131)) nil (25525 62260 177660 61000) 0 nil])
([nil nil ((1131 . 1134)) nil (25525 62260 177651 747000) 0 nil])
([nil nil ((1134 . 1144)) nil (25525 62260 177643 858000) 0 nil])
([nil nil ((#("ä" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1143) (undo-tree-id118 . -1) 1144) nil (25525 62260 177633 710000) 0 nil])
([nil nil ((1143 . 1145)) nil (25525 62260 177617 81000) 0 nil])
([nil nil ((1145 . 1146)) nil (25525 62260 177609 229000) 0 nil])
([nil nil ((#("ü" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1145) (undo-tree-id117 . -1) 1146) nil (25525 62260 177599 229000) 0 nil])
([nil nil ((1145 . 1153)) nil (25525 62260 177582 581000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1150) (undo-tree-id114 . -1) (#("\"" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . -1151) (undo-tree-id115 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . -1152) (undo-tree-id116 . -1) 1153) nil (25525 62260 177570 174000) 0 nil])
([nil nil ((1150 . 1159)) nil (25525 62260 177537 619000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1158) (undo-tree-id113 . -1) 1159) nil (25525 62260 177527 805000) 0 nil])
([nil nil ((1158 . 1159)) nil (25525 62260 177509 397000) 0 nil])
([nil nil ((1153 . 1154)) nil (25525 62260 177501 768000) 0 nil])
([nil nil ((1159 . 1160)) nil (25525 62260 177493 898000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1161) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 1162) nil (25525 62260 177483 250000) 0 nil])
([nil nil ((1161 . 1162)) nil (25525 62260 177456 806000) 0 nil])
([nil nil ((1115 . 1116)) nil (25525 62260 177448 213000) 0 nil])
([nil nil ((1115 . 1116)) nil (25525 62260 177438 769000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1115) (undo-tree-id110 . -1) (#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1115) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1115)) nil (25525 62260 177419 362000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1130) (1130 . 1131) (#("v" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1130) (undo-tree-id135 . -1) 1131 (1130 . 1131) (1160 . 1161) (#("}" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1160) (#("y" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1160) (1160 . 1161) (t 25525 62260 574247 961000)) nil (25525 62400 706198 590000) 0 nil])
([nil nil ((#(" :on-success #(println \"start\")}" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 15 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 15 22 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 22 23 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 23 30 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 30 32 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1129) (undo-tree-id127 . -31) (undo-tree-id128 . 31) (undo-tree-id129 . -31) (undo-tree-id130 . -31) (undo-tree-id131 . -31) (undo-tree-id132 . -32) (undo-tree-id133 . -31) (undo-tree-id134 . -31) 1160) nil (25525 62400 706170 54000) 0 nil])
([nil nil ((#("               " 0 15 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1082) (undo-tree-id125 . -15) (undo-tree-id126 . -15) 1097 (1082 . 1097) (1082 . 1083) 1097) nil (25525 62400 706115 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1113 . 1114) (nil fontified nil 1082 . 1114) (1082 . 1114)) nil (25525 62400 706090 445000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1113)) nil (25525 62400 706079 853000) 0 nil])
([nil nil ((1147 . 1148)) nil (25525 62400 706072 464000) 0 nil])
([nil nil ((1082 . 1097) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1082) 1142) nil (25525 62400 706063 557000) 0 nil])
([nil nil ((1161 . 1162)) nil (25525 62400 706052 835000) 0 nil])
([nil nil ((#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . -1161) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 1162) nil (25525 62400 706041 354000) 0 nil])
([nil nil ((1162 . 1163)) nil (25525 62400 705982 393000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -1764) (undo-tree-id147 . -1) 1765 (1764 . 1765) (t 25525 62400 731667 725000)) nil (25525 62765 190954 752000) 0 nil])
([nil nil ((#("(let [pars demo_pars
        sm (state-machine  (kettler-control pars) :start)]
    (dotimes [_ 40]
      (Thread/sleep 1000)
      (update-state sm))))" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args")) 1 4 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face font-lock-keyword-face) 4 21 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 21 59 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 59 71 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 71 72 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars") face clojure-keyword-face) 72 77 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars") face clojure-keyword-face) 77 79 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 79 80 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 80 85 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 85 92 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars") face font-lock-keyword-face) 92 100 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 100 101 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 101 102 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 102 106 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 106 107 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 107 113 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_") face font-lock-type-face) 113 125 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 125 126 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 126 150 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars" "_")) 150 151 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args" "sm" "pars")) 151 152 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . 1764) (undo-tree-id160 . -151) (undo-tree-id161 . 152) (undo-tree-id162 . -151) (undo-tree-id163 . -148) (undo-tree-id164 . -19) (undo-tree-id165 . -19) (undo-tree-id166 . -143) (undo-tree-id167 . -100) (undo-tree-id168 . -100)) ((1764 . 1916)) (25525 62767 53795 617000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1616) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 1617 (1616 . 1617) (1763 . 1764) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -1763) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 1764 (1763 . 1764)) nil (25525 62888 225507 179000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1767 . 1768) (nil fontified nil 1616 . 1768) (1616 . 1768)) nil (25525 62888 225477 291000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1767)) nil (25525 62888 225469 161000) 0 nil])
([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . -1648) (undo-tree-id242 . -1) (1648 . 1649) 1649 (1648 . 1650) (#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . -1648) (undo-tree-id243 . -1) (1648 . 1649) 1647 (1634 . 1640) (1635 . 1637) (#("  " 0 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "defn" "let"))) . 1634) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (1636 . 1637) (1634 . 1636) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "defn" "let"))) . 1633) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (1634 . 1635) (1616 . 1634)) nil (25525 62888 225456 550000) 0 nil])
([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id241 . 1)) nil (25525 62888 225410 163000) 0 nil])
([nil nil ((#("k" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id240 . 1)) nil (25525 62888 225398 256000) 0 nil])
([nil nil ((#("[" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "pars"))) . 1648) (undo-tree-id239 . 1)) nil (25525 62888 225386 293000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id238 . 1)) nil (25525 62888 225374 515000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id237 . 1)) nil (25525 62888 225361 516000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id236 . 1)) nil (25525 62888 225168 983000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id235 . 1)) nil (25525 62888 225157 558000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id234 . 1)) nil (25525 62888 225145 836000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id233 . 1)) nil (25525 62888 225134 225000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id232 . 1)) nil (25525 62888 225122 670000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id231 . 1)) nil (25525 62888 225111 337000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id230 . 1)) nil (25525 62888 225099 559000) 0 nil])
([nil nil ((#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id229 . 1)) nil (25525 62888 225087 707000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id228 . 1)) nil (25525 62888 225075 745000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id227 . 1)) nil (25525 62888 225064 319000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id226 . 1)) nil (25525 62888 225052 597000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (undo-tree-id225 . 1)) nil (25525 62888 225041 97000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1647) (undo-tree-id224 . -1)) nil (25525 62894 887285 190000) 0 nil])
([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (1646 . 1647) (1639 . 1642) (#("i " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "parsi")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "parsi"))) . 1639) (1639 . 1641) (#("       " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars")) 2 3 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars")) 3 4 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars")) 4 5 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars")) 5 6 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars")) 6 7 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1648) (1655 . 1656) (1646 . 1647) (#("t
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars") face font-lock-keyword-face) 1 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1646) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1)) ((1646 . 1648) (#("t" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars") face font-lock-keyword-face)) . 1646) (#("[" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars" "sm"))) . 1655) (1648 . 1655) (#("i " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "parsi")) 1 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "parsi"))) . 1639) (1639 . 1641) (#(" sm" 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1639) (#("j" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id252 . -1) (1646 . 1647)) (25525 62897 776789 359000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1640)) nil (25525 62962 319749 456000) 0 nil] [nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id199 . 1)) ((1646 . 1647)) (25525 62894 61284 97000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "m" "pars"))) . 1640)) nil (25525 62962 319745 456000) 0 nil])
([nil nil ((#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id198 . 1)) ((1646 . 1647)) (25525 62893 661345 594000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars"))) . 1639)) nil (25525 62962 319741 531000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id195 . 1) (undo-tree-id196 . -1) (undo-tree-id197 . -1)) ((1646 . 1647)) (25525 62893 141247 406000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm"))) . 1770) (undo-tree-id262 . -1)) nil (25525 62962 319736 809000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id194 . 1)) ((1646 . 1647)) (25525 62892 892967 319000) 0 nil])
([nil nil ((1770 . 1772)) nil (25525 62962 319729 457000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id193 . 1)) ((1646 . 1647)) (25525 62892 708715 851000) 0 nil])
([nil nil ((1634 . 1636) 1633) nil (25525 62962 319725 346000) 0 nil])
([nil nil ((#("[" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id192 . 1)) ((1646 . 1647)) (25525 62892 540552 296000) 0 nil])
([nil nil ((1775 . 1776)) nil (25525 62962 319721 105000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id191 . 1)) ((1646 . 1647)) (25525 62892 406894 971000) 0 nil])
([nil nil ((1845 . 1846) (1938 . 1941) (1923 . 1938) (#("." 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1923) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 1924 (1923 . 1924) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1923) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 1924 (1918 . 1924)) nil (25525 62962 319714 420000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id190 . 1)) ((1646 . 1647)) (25525 62892 189338 188000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args" "ref") face font-lock-variable-name-face)) . 1845) (undo-tree-id257 . 1)) nil (25525 62962 319691 69000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id189 . 1)) ((1646 . 1647)) (25525 62891 997007 766000) 0 nil])
([nil nil ((1845 . 1846) (#("_" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args" "ref") face font-lock-variable-name-face)) . 1845) (undo-tree-id256 . 1)) nil (25525 62962 319680 588000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id188 . 1)) ((1646 . 1647)) (25525 62891 836215 757000) 0 nil])
([nil nil ((1918 . 1920) 1929) nil (25525 62962 319640 292000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id187 . 1)) ((1646 . 1647)) (25525 62891 692519 618000) 0 nil])
([nil nil ((1920 . 1927) (t 25525 62962 336638 211000)) nil (25525 63379 808837 519000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id186 . 1)) ((1646 . 1647)) (25525 62891 532046 714000) 0 nil])
([nil nil ((#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -1924) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -1925) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -1926) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 1927) nil (25525 63379 808829 834000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id185 . 1)) ((1646 . 1647)) (25525 62891 380034 700000) 0 nil])
([nil nil ((1924 . 1928)) nil (25525 63379 808804 816000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id184 . 1)) ((1646 . 1647)) (25525 62891 212571 240000) 0 nil])
([nil nil ((1951 . 1952)) nil (25525 63379 808800 742000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id183 . 1)) ((1646 . 1647)) (25525 62891 36401 655000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -1951) (undo-tree-id263 . -1) (undo-tree-id264 . -1) 1952) nil (25525 63379 808794 446000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id182 . 1)) ((1646 . 1647)) (25525 62890 867784 261000) 0 nil])
([nil nil ((1951 . 1952)) nil (25525 63379 808749 595000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id181 . 1)) ((1646 . 1647)) (25525 62890 716593 692000) 0 nil])
([nil nil ((1953 . 1954) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 1951) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (1952 . 1953) (1772 . 1774) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm"))) . -1772) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_"))) . -1773) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1774) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1775) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("T" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1776) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1777) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1778) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1779) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1780) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1781) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1782) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1783) (undo-tree-id296 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1784) (undo-tree-id297 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1785) (undo-tree-id298 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1786) (undo-tree-id299 . -1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1787) (undo-tree-id300 . -1) 1788 (1784 . 1788) (1775 . 1784) (t 25525 63379 817484 283000)) nil (25525 63559 131191 539000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id180 . 1)) ((1646 . 1647)) (25525 62890 555740 576000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1956 . 1957) (#("
" 0 1 (cider-locals nil fontified nil)) . -2083) (1954 . 2084) 1953) nil (25525 63559 131064 153000) 0 nil])
([nil nil ((#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id179 . 1)) ((1646 . 1647)) (25525 62890 402781 234000) 0 nil])
([nil nil ((#("pars" 0 4 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 1974)) nil (25525 63559 131355 314000) 0 nil])
([nil nil ((#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id178 . 1)) ((1646 . 1647)) (25525 62890 220555 962000) 0 nil])
([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2060) (undo-tree-id421 . -1) (2060 . 2061) 2061 (2060 . 2074) (1981 . 1983) (1974 . 1981)) nil (25525 63673 249661 526000) 0 nil] [nil nil ((#(" {:" 0 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args")) 2 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . 1974)) ((1974 . 1977)) (25525 63559 131044 690000) 0 nil])
([nil nil ((#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id177 . 1)) ((1646 . 1647)) (25525 62890 67736 542000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059)) nil (25525 63673 249651 341000) 0 nil])
nil
([nil nil ((#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id176 . 1)) ((1646 . 1647)) (25525 62889 908802 455000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id420 . 1)) nil (25525 63673 249646 860000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id175 . 1)) ((1646 . 1647)) (25525 62889 755891 613000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id419 . 1)) nil (25525 63673 249639 378000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id174 . 1)) ((1646 . 1647)) (25525 62889 583216 504000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id418 . 1)) nil (25525 63673 249632 82000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id173 . 1)) ((1646 . 1647)) (25525 62889 340133 597000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id417 . 1)) nil (25525 63673 249624 675000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id172 . 1)) ((1646 . 1647)) (25525 62889 176567 214000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id416 . 1)) nil (25525 63673 249617 138000) 0 nil])
([nil nil ((#("k" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id171 . 1)) ((1646 . 1647)) (25525 62888 779979 705000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id415 . 1)) nil (25525 63673 249609 527000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id170 . 1)) ((1646 . 1647)) (25525 62888 225770 43000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id414 . 1)) nil (25525 63673 249602 120000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "pars"))) . 1646) (undo-tree-id169 . 1)) ((1646 . 1647)) (25525 62888 224465 278000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id413 . 1)) nil (25525 63673 249594 583000) 0 nil])
nil
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id412 . 1)) nil (25525 63673 249586 657000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id411 . 1)) nil (25525 63673 249578 861000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id410 . 1)) nil (25525 63673 249570 880000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id409 . 1)) nil (25525 63673 249563 121000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id408 . 1)) nil (25525 63673 249555 380000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id407 . 1)) nil (25525 63673 249547 640000) 0 nil])
([nil nil ((#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . 2059) (undo-tree-id406 . 1)) nil (25525 63673 249540 343000) 0 nil])
([nil nil ((#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id405 . 1)) nil (25525 63673 249532 436000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id404 . 1)) nil (25525 63673 249525 159000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id403 . 1)) nil (25525 63673 249517 788000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id402 . 1)) nil (25525 63673 249510 529000) 0 nil])
([nil nil ((#("+" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face font-lock-function-name-face)) . 2059) (undo-tree-id401 . 1)) nil (25525 63673 249503 159000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id400 . 1)) nil (25525 63673 249495 418000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face font-lock-function-name-face)) . 2059) (undo-tree-id399 . 1)) nil (25525 63673 249487 696000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id398 . 1)) nil (25525 63673 249480 289000) 0 nil])
([nil nil ((#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id397 . 1)) nil (25525 63673 249472 919000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id396 . 1)) nil (25525 63673 249465 178000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id395 . 1)) nil (25525 63673 249457 752000) 0 nil])
([nil nil ((#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . 2059) (undo-tree-id394 . 1)) nil (25525 63673 249450 142000) 0 nil])
([nil nil ((#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id393 . 1)) nil (25525 63673 249442 512000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id392 . 1)) nil (25525 63673 249434 623000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id391 . 1)) nil (25525 63673 249426 975000) 0 nil])
([nil nil ((#("@" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id390 . 1)) nil (25525 63673 249419 346000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id389 . 1)) nil (25525 63673 249411 587000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id388 . 1)) nil (25525 63673 249403 957000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id387 . 1)) nil (25525 63673 249396 69000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2059) (undo-tree-id386 . 1)) nil (25525 63673 249386 958000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2038) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2039) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2040) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2041) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2042) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2043) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2044) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2045) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2046) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2047) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2048) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2049) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2050) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2051) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2052) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2053) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2054) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2055) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2056) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2057) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2058) (undo-tree-id384 . -1) (undo-tree-id385 . -1) 2059) nil (25525 63673 249325 51000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2034) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2035) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2036) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2037) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 2038) nil (25525 63673 249140 944000) 0 nil])
([nil nil ((2034 . 2035)) nil (25525 63673 249108 945000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034) (undo-tree-id329 . 1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034) (undo-tree-id330 . 1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034) (undo-tree-id331 . 1) (#("}" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034) (undo-tree-id332 . 1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034) (undo-tree-id333 . 1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034) (undo-tree-id334 . 1) (#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2034)) nil (25525 63673 249100 834000) 0 nil])
([nil nil ((2034 . 2035)) nil (25525 63673 249075 816000) 0 nil])
([nil nil ((2035 . 2037)) nil (25525 63673 249071 871000) 0 nil])
([nil nil ((#("." 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1978) (undo-tree-id327 . -1) (undo-tree-id328 . -1) 1979) nil (25525 63673 249066 946000) 0 nil])
([nil nil ((1978 . 1979)) nil (25525 63673 249055 946000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1991) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#(":" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1992) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("m" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . -1993) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . -1994) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . -1995) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args") face clojure-keyword-face)) . -1996) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1997) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("@" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1998) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1999) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2000) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2001) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2002) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2003) (undo-tree-id325 . -1) (undo-tree-id326 . -1) 2004) nil (25525 63673 249041 539000) 0 nil])
([nil nil ((1991 . 1998)) nil (25525 63673 248921 23000) 0 nil])
([nil nil ((2023 . 2024) (t 25525 63673 271483 273000)) nil (25525 63706 309680 652000) 0 nil])
([nil nil ((2023 . 2026)) nil (25525 63706 309673 837000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2024) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#("," 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -2025) (undo-tree-id424 . -1) (undo-tree-id425 . -1) 2026) nil (25525 63706 309665 41000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2024)) nil (25525 63706 309611 23000) 0 nil])
([nil nil ((2024 . 2028)) nil (25525 63715 397529 646000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1953) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 1954 (1953 . 1954) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1953) (undo-tree-id435 . -1) (undo-tree-id436 . -1) 1954 (1953 . 1954) (1970 . 1973) (1965 . 1970) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1965) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1966) (undo-tree-id439 . -1) (undo-tree-id440 . -1) 1967 (1962 . 1967) (1956 . 1962) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . -1956) (undo-tree-id441 . -1) 1957 (1953 . 1957) (t 25525 63706 340820 417000)) nil (25525 63777 543800 50000) 0 nil] [nil nil ((2018 . 2074) (#("                                                        " 0 56 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2017) (undo-tree-id426 . -56) (undo-tree-id427 . -56) (2016 . 2074) (t 25525 63706 340820 417000)) ((#("
                                                        
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args")) 1 57 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args")) 57 58 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2016) (undo-tree-id428 . -58) (undo-tree-id429 . -58) (undo-tree-id430 . -58) (2017 . 2073) (#("                                                        " 0 56 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "pars" "sm" "_" "args"))) . 2018) (undo-tree-id431 . -55) (undo-tree-id432 . -55)) (25525 63715 396716 959000) 0 nil])
([nil nil ((1953 . 1954) 1952) nil (25525 63942 930060 71000) 0 nil])
nil
([nil nil ((#("              " 0 14 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1052) (undo-tree-id471 . -14) 1066 (1052 . 1066) (1052 . 1053) 1066 (t 25525 63777 569399 726000)) nil (25525 64164 375350 42000) 0 nil] [nil nil ((nil rear-nonsticky nil 1261 . 1262) (nil fontified nil 1177 . 1262) (1177 . 1262) 1176 (t 25525 63777 569399 726000)) ((#("{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 16 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 16 17 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 17 19 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 20 24 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 24 32 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 32 43 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 43 46 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 46 61 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 61 62 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 62 72 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 72 73 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 73 74 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 74 83 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 83 84 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 84 85 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1177) (undo-tree-id458 . -84) (nil fontified t 1220 . 1223) (nil fontified t 1209 . 1220) (nil fontified t 1201 . 1209) (nil fontified t 1197 . 1201) (nil fontified t 1196 . 1197) (nil fontified t 1194 . 1196) (nil fontified t 1193 . 1194) (nil fontified t 1189 . 1193) (nil fontified t 1179 . 1189) (nil fontified t 1178 . 1179) (nil fontified t 1177 . 1178) (nil rear-nonsticky t 1261 . 1262)) (25525 63942 929203 125000) 0 nil] [nil nil ((nil rear-nonsticky nil 1151 . 1152) (nil fontified nil 1067 . 1152) (1067 . 1152) 1066 (t 25525 63777 569399 726000)) ((#("{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 16 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 16 17 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 17 19 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 20 24 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 24 32 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 32 43 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 43 46 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 46 61 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 61 62 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 62 72 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 72 73 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 73 74 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 74 83 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 83 84 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 84 85 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1067) (undo-tree-id454 . -84) (undo-tree-id455 . -85) (undo-tree-id456 . -85) (undo-tree-id457 . -85) (nil fontified t 1110 . 1113) (nil fontified t 1099 . 1110) (nil fontified t 1091 . 1099) (nil fontified t 1087 . 1091) (nil fontified t 1086 . 1087) (nil fontified t 1084 . 1086) (nil fontified t 1083 . 1084) (nil fontified t 1079 . 1083) (nil fontified t 1069 . 1079) (nil fontified t 1068 . 1069) (nil fontified t 1067 . 1068) (nil rear-nonsticky t 1151 . 1152)) (25525 63932 763030 686000) 0 nil] [nil nil ((nil rear-nonsticky nil 1150 . 1151) (nil fontified nil 1066 . 1151) (1066 . 1151) 1065 (t 25525 63777 569399 726000)) ((#("{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 16 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 16 17 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 17 19 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 20 24 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 24 32 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 32 43 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 43 46 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 46 61 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 61 62 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 62 72 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 72 73 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 73 74 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 74 83 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 83 84 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 84 85 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1066) (undo-tree-id450 . -84) (undo-tree-id451 . -85) (undo-tree-id452 . -85) (undo-tree-id453 . -85) (nil fontified t 1109 . 1112) (nil fontified t 1098 . 1109) (nil fontified t 1090 . 1098) (nil fontified t 1086 . 1090) (nil fontified t 1085 . 1086) (nil fontified t 1083 . 1085) (nil fontified t 1082 . 1083) (nil fontified t 1078 . 1082) (nil fontified t 1068 . 1078) (nil fontified t 1067 . 1068) (nil fontified t 1066 . 1067) (nil rear-nonsticky t 1150 . 1151)) (25525 63927 949834 346000) 0 nil] [nil nil ((nil rear-nonsticky nil 1051 . 1052) (nil fontified nil 967 . 1052) (967 . 1052) 966 (t 25525 63777 569399 726000)) ((#("{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 16 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 16 17 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 17 19 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 20 24 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 24 32 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 32 43 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 43 46 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 46 61 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 61 62 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 62 72 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 72 73 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 73 74 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 74 83 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 83 84 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 84 85 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 967) (undo-tree-id446 . -84) (undo-tree-id447 . -85) (undo-tree-id448 . -85) (undo-tree-id449 . -85) (nil fontified t 1010 . 1013) (nil fontified t 999 . 1010) (nil fontified t 991 . 999) (nil fontified t 987 . 991) (nil fontified t 986 . 987) (nil fontified t 984 . 986) (nil fontified t 983 . 984) (nil fontified t 979 . 983) (nil fontified t 969 . 979) (nil fontified t 968 . 969) (nil fontified t 967 . 968) (nil rear-nonsticky t 1051 . 1052)) (25525 63921 616650 600000) 0 nil] [nil nil ((nil rear-nonsticky nil 1052 . 1053) (nil fontified nil 968 . 1053) (968 . 1053) 967 (t 25525 63777 569399 726000)) ((#("{:conditions [#(= (:mode @pars) \"hr-target\")]
               :transition :hr-target}
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 2 12 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 12 16 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 16 17 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-function-name-face) 17 19 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 20 24 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 24 32 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 32 43 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face) 43 46 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 46 61 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 61 62 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 62 72 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 72 73 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 73 74 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 74 83 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 83 84 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 84 85 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 968) (undo-tree-id442 . -84) (undo-tree-id443 . -85) (undo-tree-id444 . -85) (undo-tree-id445 . -85) (nil fontified t 1011 . 1014) (nil fontified t 1000 . 1011) (nil fontified t 992 . 1000) (nil fontified t 988 . 992) (nil fontified t 987 . 988) (nil fontified t 985 . 987) (nil fontified t 984 . 985) (nil fontified t 980 . 984) (nil fontified t 970 . 980) (nil fontified t 969 . 970) (nil fontified t 968 . 969) (nil rear-nonsticky t 1052 . 1053)) (25525 63917 270173 979000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1136 . 1137) (nil fontified nil 1052 . 1137) (1052 . 1137)) nil (25525 64164 375339 987000) 0 nil])
nil
nil
nil
nil
nil
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1137) (undo-tree-id470 . 1)) nil (25525 64164 375334 24000) 0 nil])
([nil nil ((1085 . 1087) (#("hr" 0 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1085)) nil (25525 64164 375326 691000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1269) (undo-tree-id469 . -1) 1270 (1269 . 1270) (1126 . 1128) (#("hr" 0 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1126)) nil (25525 64164 375320 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1268 . 1269) (#("
" 0 1 (cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") fontified nil)) . -1454) (1262 . 1455) 1254) nil (25525 64164 375310 969000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1653) (undo-tree-id468 . -1) 1654 (1653 . 1654) (1343 . 1345) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1343) (#("h" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1343) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1343) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1343) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1343) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1343) (1343 . 1347) (1270 . 1272) (#("hr" 0 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1270)) nil (25525 64164 375300 765000) 0 nil])
([nil nil ((#("                                      
" 0 21 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 21 39 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1804) (undo-tree-id467 . -5) 1809) nil (25525 64164 375285 210000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1652 . 1653) (#("
" 0 1 (cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") fontified nil)) . -1838) (1646 . 1839) 1645) nil (25525 64164 375276 858000) 0 nil])
([nil nil ((1727 . 1736) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("g" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (#("h" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face font-lock-string-face)) . 1727) (1654 . 1663) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1654) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1654) (#("g" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1654) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1654) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1654) (#("hr-t" 0 4 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1654)) nil (25525 64164 375263 710000) 0 nil])
([nil nil ((#("             
" 0 13 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 13 14 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . 1249) (undo-tree-id463 . 1) (undo-tree-id464 . -13) (undo-tree-id465 . -12) (undo-tree-id466 . -13) 1261) nil (25525 64164 375249 525000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . -965) (undo-tree-id462 . -1) 966 (965 . 966) (1618 . 1621) (#("update" 0 6 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1618)) nil (25525 64164 375231 192000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1361) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1289) (#("   " 0 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 2 3 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1245) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1221) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1178) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1150) (undo-tree-id461 . -3) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1115) (1046 . 1057) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1022) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -955) 1352) nil (25525 64164 375215 767000) 0 nil])
([nil nil ((#("b" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face font-lock-string-face)) . 2410)) nil (25525 64164 375201 175000) 0 nil])
([nil nil ((#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face font-lock-string-face)) . 2410)) nil (25525 64164 375196 601000) 0 nil])
([nil nil ((#("b" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face font-lock-string-face)) . 2410)) nil (25525 64164 375192 638000) 0 nil])
([nil nil ((#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face font-lock-string-face)) . 2410)) nil (25525 64164 375188 138000) 0 nil])
([nil nil ((2416 . 2419) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face font-lock-string-face)) . -2416) (undo-tree-id459 . -1) (undo-tree-id460 . -1) 2417 (2410 . 2417)) nil (25525 64164 375176 656000) 0 nil])
([nil nil ((#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1970) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1946) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1910) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1832) (#("   " 0 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 2 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1782) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1751) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1718) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1646) (#("   " 0 2 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars")) 2 3 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1602) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1574) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1541) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1469) (#("   " 0 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1425) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars"))) . -1394) 2012 (t 25525 64164 421807 954000)) nil (25525 64292 918310 919000) 0 nil])
([nil nil ((1242 . 1245) (1242 . 1243) 1245) nil (25525 64292 918287 123000) 0 nil])
([nil nil ((1426 . 1429) (1426 . 1427) 1428) nil (25525 64292 918276 660000) 0 nil])
([nil nil ((1607 . 1610) (1607 . 1608) 1609) nil (25525 64292 918265 790000) 0 nil])
([nil nil ((1776 . 1779) (1791 . 1794) (1791 . 1792) 1793) nil (25525 64292 918253 938000) 0 nil])
([nil nil ((#(":cfrupdate-power" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 1 4 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 4 11 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face) 11 16 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars") face clojure-keyword-face)) . 1775) (undo-tree-id472 . 15) (undo-tree-id473 . -4)) nil (25525 64292 918238 939000) 0 nil])
([nil nil ((1775 . 1781)) nil (25525 64292 918179 32000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sms"))) . 2005) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "smrs"))) . 2005) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "smars"))) . 2005) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "smpars"))) . 2005) (2004 . 2005) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "smpars"))) . -2004) (undo-tree-id482 . -1) 2005 (2003 . 2005) (t 25525 64292 959317 311000)) nil (25525 64597 58084 324000) 0 nil])
([nil nil ((#(" (state-machine  (kettler-control pars) :start)]" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 1 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 2 3 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 3 4 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 4 5 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 6 7 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 7 8 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 8 9 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 9 10 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 10 11 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 11 12 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 12 13 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 13 14 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 14 15 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 15 16 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 16 17 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 17 18 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 18 19 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 19 20 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 20 21 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 21 40 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 40 41 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm") face clojure-keyword-face) 41 46 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm") face clojure-keyword-face) 46 48 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm"))) . 2017) (undo-tree-id477 . -47) (undo-tree-id478 . 47) (undo-tree-id479 . -47) (undo-tree-id480 . -47) (undo-tree-id481 . -47) 2064) nil (25525 64597 58069 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2304 . 2305) (nil fontified nil 2257 . 2305) (2257 . 2305) 2256) nil (25525 64597 58047 603000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2256) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1)) nil (25525 64597 58040 122000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2256)) nil (25525 64597 58239 134000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . -2309) (undo-tree-id504 . -1) (2307 . 2310) (#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (2307 . 2308) (2289 . 2294)) nil (25525 64657 811639 5000) 0 nil] [nil nil ((#("pars" 0 4 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2289)) ((2289 . 2293)) (25525 64597 57985 494000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307)) nil (25525 64657 811628 801000) 0 nil])
nil
([nil nil ((#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307)) nil (25525 64657 811624 376000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id503 . 1)) nil (25525 64657 811619 820000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id502 . 1)) nil (25525 64657 811611 524000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id501 . 1)) nil (25525 64657 811603 636000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id500 . 1)) nil (25525 64657 811595 395000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id499 . 1)) nil (25525 64657 811587 581000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id498 . 1)) nil (25525 64657 811580 433000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id497 . 1)) nil (25525 64657 811573 25000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id496 . 1)) nil (25525 64657 811565 896000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id495 . 1)) nil (25525 64657 811558 230000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id494 . 1)) nil (25525 64657 811550 822000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . 2307) (undo-tree-id493 . 1)) nil (25525 64657 811542 897000) 0 nil])
([nil nil ((2009 . 2011) (2307 . 2309) (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "args"))) . -2306) (undo-tree-id492 . -1) 2307 (2306 . 2307)) nil (25525 64657 811534 175000) 0 nil])
([nil nil ((#("  dd(let [sm
" 0 4 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm")) 4 5 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm") face font-lock-keyword-face) 6 7 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm") face font-lock-keyword-face) 7 8 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm") face font-lock-keyword-face) 8 9 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 9 10 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 10 11 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 11 12 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm")) 12 13 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm"))) . 2007) (undo-tree-id485 . 9) (undo-tree-id486 . -12) (undo-tree-id487 . 1) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -3) (undo-tree-id491 . -12) 2010) nil (25525 64657 811522 897000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm"))) . 2078)) nil (25525 64657 811497 435000) 0 nil])
([nil nil ((2077 . 2078) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "_"))) . -2077) (undo-tree-id483 . -1) 2078 (2076 . 2077) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "sm" "_"))) . -2076) (undo-tree-id484 . -1) 2077) nil (25525 64657 811491 435000) 0 nil])
([nil nil ((#("  " 0 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "_"))) . -2053) (#("  " 0 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm" "_"))) . -2029) (#("  " 0 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "sm"))) . -2009) 2069) nil (25525 64657 811451 103000) 0 nil])
([nil nil ((2073 . 2074)) nil (25525 64657 811435 752000) 0 nil])
([nil nil ((1982 . 1983) (t 25525 64657 859180 239000)) nil (25525 64662 3298 125000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -2318) (undo-tree-id506 . -1) (undo-tree-id507 . -1) 2319 (2318 . 2319) (t 25525 64662 39049 639000)) nil (25525 64750 273000 998000) 0 nil])
([nil nil ((#("hr" 0 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face)) . 2380)) nil (25525 64775 978908 397000) 0 nil] [nil nil ((#("  " 0 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -2318) (undo-tree-id509 . -2) 2320 (2318 . 2320) (2318 . 2319) 2355) ((#("
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . 2318) (undo-tree-id510 . 1) (#("  " 0 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . 2318) (2318 . 2320)) (25525 64750 272755 524000) 0 nil] [nil nil ((#("  " 0 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -2318) (undo-tree-id505 . -2) 2320 (2318 . 2320) (2318 . 2319) 2332) ((#("
" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . 2318) (undo-tree-id508 . 1) (#("  " 0 2 (help-echo cider--help-echo fontified nil cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . 2318) (2318 . 2320)) (25525 64740 885732 865000) 0 nil])
([nil nil ((2380 . 2387)) nil (25525 64775 978900 138000) 0 nil])
nil
nil
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face)) . -2385) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face)) . -2386) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 2387) nil (25525 64775 978880 880000) 0 nil])
([nil nil ((#("b" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -2398) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 2399 (2398 . 2399) (t 25525 64776 45613 119000)) nil (25525 64796 821579 828000) 0 nil])
([nil nil ((2378 . 2379) (2379 . 2381) (2368 . 2370) (#("hr" 0 2 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face)) . 2368) (t 25525 64796 885008 888000)) nil (25525 64895 867438 138000) 0 nil])
([nil nil ((#("d(xx:pulse-target @demo-pars)" 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args")) 1 4 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args")) 4 5 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face) 5 10 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face) 10 12 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face) 12 17 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args") face clojure-keyword-face) 17 29 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . 2378) (undo-tree-id521 . -22) (undo-tree-id522 . 29) (undo-tree-id523 . -22)) nil (25525 64895 867414 657000) 0 nil])
([nil nil ((2377 . 2379)) nil (25525 64895 867385 177000) 0 nil])
([nil nil ((2377 . 2378)) nil (25525 64895 867378 232000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("state" "on-success" "_" "transition" "transition-list" "pars" "args"))) . -2380) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) 2381) nil (25525 64895 867361 436000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -24) (undo-tree-id13 . -2) (undo-tree-id14 . -2) 26 (24 . 26) (24 . 25) 25 (t 25525 64895 912224 390000)) nil (25526 59 583090 451000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26 . 27) (#("
" 0 1 (fontified nil)) . -106) (24 . 107)) nil (25526 59 583075 358000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24) (undo-tree-id12 . -1)) nil (25526 59 583068 951000) 0 nil])
([nil nil ((#("[serial-killa.statemachine :as stm])" 0 27 (fontified t) 27 28 (face clojure-keyword-face fontified t) 28 30 (face clojure-keyword-face fontified t) 30 36 (fontified t)) . 69) (undo-tree-id5 . -35) (undo-tree-id6 . -35) (undo-tree-id7 . -36) (undo-tree-id8 . -35) (undo-tree-id9 . -36) (undo-tree-id10 . -35) (undo-tree-id11 . -35) 104) nil (25526 59 583494 90000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -37) (undo-tree-id26 . -1) (37 . 38) 38 (53 . 59) (#("sp" 0 1 (fontified t) 1 2 (fontified t)) . 53)) nil (25526 79 169588 677000) 0 nil] [nil nil ((49 . 62) (#(" " 0 1 (fontified nil)) . 49) (48 . 49) (53 . 59) (#("s" 0 1 (fontified t)) . -53) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("p" 0 1 (fontified t)) . -54) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 55 (56 . 57) (#(")" 0 1 (fontified t)) . -55) (undo-tree-id4 . -1) 56 (55 . 56)) ((#(")" 0 1 (fontified nil)) . 55) (55 . 56) (#(")" 0 1 (fontified nil)) . 56) (53 . 55) (#("mockup" 0 6 (fontified nil)) . 53) (#("
" 0 1 (fontified t)) . 48) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (49 . 50) (#("             " 0 13 (fontified t)) . 49) (undo-tree-id18 . -12) (undo-tree-id19 . -12)) (25526 59 582958 953000) 0 nil])
([nil nil ((#("serial" 0 6 (fontified t)) . 37) (undo-tree-id52 . 6)) nil (25526 379 290950 123000) 0 nil] [nil nil ((1 . 2) (1 . 2) (#("(ns state-machine.core
  (:require [serial-port :as mockup]
" 0 1 (fontified t) 1 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 22 (face font-lock-type-face fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (rear-nonsticky t fontified t) 25 26 (fontified t) 26 27 (face clojure-keyword-face fontified t) 27 34 (face clojure-keyword-face fontified t) 34 47 (fontified t) 47 48 (fontified t) 48 49 (face clojure-keyword-face fontified t) 49 51 (face clojure-keyword-face fontified t) 51 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t)) . 1) (undo-tree-id20 . -36) (undo-tree-id21 . 24) (undo-tree-id22 . -23) (undo-tree-id23 . -36) (undo-tree-id24 . -23) (undo-tree-id25 . -36) 37) ((1 . 61) (#("
" 0 1 (fontified nil)) . 1) (undo-tree-id27 . 1) (#("u" 0 1 (fontified t)) . 1)) (25526 79 169331 423000) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t)) . 37) (undo-tree-id51 . 1)) nil (25526 379 290941 771000) 0 nil])
nil
([nil nil ((68 . 69) (37 . 43) (#("port" 0 4 (fontified t)) . 37) (undo-tree-id50 . 4)) nil (25526 379 290933 142000) 0 nil])
([nil nil ((#("            d
" 0 13 (fontified t) 13 14 (fontified t)) . 56) (undo-tree-id42 . -12) (undo-tree-id43 . 1) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12) (undo-tree-id47 . 1) (undo-tree-id48 . -12) (undo-tree-id49 . -12) 68) nil (25526 379 290922 457000) 0 nil])
([nil nil ((2106 . 2107) 2106) nil (25526 379 290894 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2109 . 2110) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -2831) (2107 . 2832)) nil (25526 379 290889 550000) 0 nil])
([nil nil ((#("
" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 2106)) nil (25526 379 290884 32000) 0 nil])
([nil nil ((#("
" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 2106) (undo-tree-id41 . -1)) nil (25526 379 290879 254000) 0 nil])
([nil nil ((#("V" 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . -2111) (undo-tree-id40 . -1) 2112 (2111 . 2112) (2361 . 2363) (2361 . 2362)) nil (25526 379 290870 921000) 0 nil])
([nil nil ((#("  (def sim-pars {
                 :time-inc 0.1
                 :relax-time 7
                 :max-pulse 170
                 :ctrl-treshold 10
                 :pulse-perf-drift 0.08
                 :max-drift 20
                 :rest-pulse 70})
  
  ;; labels taken from serial :pulse :rpm :speed :dist :req-power :energy :time :power
  (def kettler-state (atom {
                            :pulse 70
                            :pulse-target 145
                            :power 80
                            :req-power 80
                            :time 0 
                            :rpm 100
                            :speed 10
                            :dist 0
                            :energy 0}))
" 0 3 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 3 6 (face font-lock-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 6 7 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 7 15 (face font-lock-variable-name-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 15 18 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 18 35 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 35 36 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 36 44 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 44 66 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 66 67 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 67 77 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 77 97 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 97 98 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 98 107 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 107 129 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 129 130 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 130 143 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 143 164 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 164 165 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 165 181 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 181 204 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 204 205 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 205 214 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 214 235 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 235 236 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 236 246 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 246 251 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 251 252 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 252 254 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 254 255 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 255 257 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 257 260 (face font-lock-comment-delimiter-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 260 342 (face font-lock-comment-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 342 345 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 345 348 (face font-lock-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 348 349 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 349 362 (face font-lock-variable-name-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 362 399 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 399 400 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 400 405 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 405 435 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 435 437 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 437 438 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 438 450 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 450 455 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 455 483 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 483 484 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 484 489 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 489 500 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 500 502 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 502 503 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 503 518 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 518 521 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 521 522 (fontified t face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 522 531 (fontified t face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 531 535 (fontified t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo) 535 563 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 563 564 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 564 568 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 568 600 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 600 601 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 601 604 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 604 637 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 637 638 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 638 643 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 643 675 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 675 676 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 676 680 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 680 711 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 711 712 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 712 718 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 718 723 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo) 723 724 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . 2109) (undo-tree-id32 . 722) (undo-tree-id33 . -684) (undo-tree-id34 . -723) (undo-tree-id35 . -1) (undo-tree-id36 . -684) (undo-tree-id37 . -684) (undo-tree-id38 . -1) (undo-tree-id39 . -684) 2793) nil (25526 379 290859 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 957 . 958) (#("
" 0 1 (fontified nil cider-block-dynamic-font-lock t cider-locals nil)) . -1679) (955 . 1680)) nil (25526 379 290828 848000) 0 nil])
([nil nil ((#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1627) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1593) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1557) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1522) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1487) (#("  " 0 2 (fontified t cider-block-dynamic-font-lock t cider-locals nil)) . -1447) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1411) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1367) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1331) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1278) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1193) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1192) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1175) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1146) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1108) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1075) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1045) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -1016) (#("  " 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -987) (#("  " 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 1 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . -956) (undo-tree-id30 . -2) (undo-tree-id31 . -2) 1641) nil (25526 379 291152 804000) 0 nil])
([nil nil ((1640 . 1641)) nil (25526 547 278416 687000) 0 nil] [nil nil ((#("  " 0 2 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1669) (undo-tree-id28 . -2) (undo-tree-id29 . -2) 1671 (1668 . 1671) 1640) ((#("
  " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t) 1 3 (cider-locals ("pars") help-echo cider--help-echo fontified nil)) . 1668) (undo-tree-id53 . -3) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (1669 . 1671)) (25526 379 290784 163000) 0 nil])
([nil nil ((2092 . 2105) (#("pars" 0 4 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . 2092)) nil (25526 547 278411 761000) 0 nil])
nil
([nil nil ((#("pars" 0 4 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . 2285) (undo-tree-id117 . 1)) nil (25526 547 278406 2000) 0 nil])
([nil nil ((2285 . 2293)) nil (25526 547 278398 335000) 0 nil])
([nil nil ((#("." 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . -2292) (undo-tree-id116 . -1) 2293) nil (25526 547 278393 558000) 0 nil])
([nil nil ((2292 . 2297)) nil (25526 547 278385 595000) 0 nil])
([nil nil ((2297 . 2340)) nil (25526 547 278381 391000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2319) (undo-tree-id95 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2320) (undo-tree-id96 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2321) (undo-tree-id97 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2322) (undo-tree-id98 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2323) (undo-tree-id99 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2324) (undo-tree-id100 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2325) (undo-tree-id101 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2326) (undo-tree-id102 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2327) (undo-tree-id103 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2328) (undo-tree-id104 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2329) (undo-tree-id105 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2330) (undo-tree-id106 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2331) (undo-tree-id107 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2332) (undo-tree-id108 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2333) (undo-tree-id109 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2334) (undo-tree-id110 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2335) (undo-tree-id111 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2336) (undo-tree-id112 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2337) (undo-tree-id113 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2338) (undo-tree-id114 . -1) (#(" " 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . -2339) (undo-tree-id115 . -1) 2340) nil (25526 547 278366 225000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2300) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2301) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2302) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2303) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2304) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (cider-locals ("pars") fontified nil help-echo cider--help-echo)) . -2305) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2306) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2307) (undo-tree-id83 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2308) (undo-tree-id84 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2309) (undo-tree-id85 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2310) (undo-tree-id86 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2311) (undo-tree-id87 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2312) (undo-tree-id88 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2313) (undo-tree-id89 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2314) (undo-tree-id90 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2315) (undo-tree-id91 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2316) (undo-tree-id92 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2317) (undo-tree-id93 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2318) (undo-tree-id94 . -1) 2319) nil (25526 547 278271 709000) 0 nil])
([nil nil ((#("a" 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2294) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("t" 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . -2295) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("e" 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2296) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("
" 0 1 (cider-block-dynamic-font-lock t cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2297) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2298) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . -2299) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 2300) nil (25526 547 278170 822000) 0 nil])
([nil nil ((2294 . 2298)) nil (25526 547 278094 157000) 0 nil])
([nil nil ((55 . 56) (t 25526 547 314332 355000)) nil (25526 572 569966 18000) 0 nil])
([nil nil ((#("mockup" 0 6 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . 48) (t 25526 572 613786 35000)) nil (25526 1082 647601 261000) 0 nil])
([nil nil ((48 . 50)) nil (25526 1082 647581 706000) 0 nil])
([nil nil ((55 . 58) (t 25526 1082 952364 901000)) nil (25526 1218 211230 488000) 0 nil])
([nil nil ((55 . 57)) nil (25526 1218 211222 506000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 55) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 55) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 55) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 55) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 55)) nil (25526 1456 104777 502000) 0 nil])
([nil nil ((37 . 38) (t 25526 1218 259043 127000)) nil (25526 1460 196552 151000) 0 nil] [nil nil ((#("  " 0 2 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . -53) (undo-tree-id6 . -2) (undo-tree-id7 . -2) 55 (52 . 55) (t 25526 1218 259043 127000) 37) ((#("
  " 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t) 1 3 (fontified nil help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . 52) (undo-tree-id8 . -3) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (53 . 55)) (25526 1456 103997 131000) 0 nil] [nil nil ((38 . 52) (37 . 38) (t 25526 1218 259043 127000)) ((#("b" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . 37) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("
             " 0 14 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . 38) (undo-tree-id3 . -13) (undo-tree-id4 . -1) (undo-tree-id5 . -13)) (25526 1399 905018 843000) 0 nil])
([nil nil ((37 . 43) (t 25526 1460 243309 119000)) nil (25526 1493 428926 423000) 0 nil])
nil
nil
([nil nil ((43 . 50)) nil (25526 1493 428921 812000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . -48) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . -49) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 50) nil (25526 1493 428914 979000) 0 nil])
([nil nil ((48 . 50)) nil (25526 1493 428863 999000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2232) (#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2232) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("/" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2232) (#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-type-face)) . 2232) (#("m" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-type-face)) . 2232) (2234 . 2236) (2232 . 2234) (2231 . 2233) (#("/" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . -2231) (undo-tree-id36 . -1) 2232 (2230 . 2232) (2231 . 2262) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 2230) (undo-tree-id37 . -1) (2231 . 2232) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2231) (undo-tree-id38 . -1) 2232 (2231 . 2232) (t 25526 1493 462537 737000)) nil (25526 1839 372549 799000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2236 . 2237) (#("
" 0 1 (cider-locals ("args" "n") fontified nil)) . -2276) (2232 . 2277) 2231) nil (25526 1839 372509 449000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2232) (undo-tree-id19 . -1) 2233 (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2272) (undo-tree-id20 . -1) 2273 (2271 . 2273) (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2271) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 2272 (2232 . 2233) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2232) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2233) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2234) (undo-tree-id27 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2235) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars"))) . -2236) (undo-tree-id29 . -1) 2237) nil (25526 1839 372497 282000) 0 nil])
([nil nil ((2388 . 2421) (#("                " 0 16 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2388) (2361 . 2362) (2272 . 2306) (#("                               " 0 31 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . 2272) 2417) nil (25526 1839 372452 691000) 0 nil])
([nil nil ((2387 . 2389)) nil (25526 1839 372445 506000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2388)) nil (25526 1839 372440 765000) 0 nil])
([nil nil ((#("                 " 0 17 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2405) (undo-tree-id15 . -13) (undo-tree-id16 . -13) (undo-tree-id17 . -13) (undo-tree-id18 . -13) 2418) nil (25526 1839 372429 154000) 0 nil])
([nil nil ((2233 . 2236) (t 25526 1839 404656 560000)) nil (25526 1857 754386 997000) 0 nil])
([nil nil ((2231 . 2232) (t 25526 1857 794243 603000)) nil (25526 2258 62677 4000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2231) (undo-tree-id44 . 1)) nil (25526 2258 62665 930000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2231) (undo-tree-id39 . 1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (25526 2258 62647 579000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2389)) nil (25526 2258 62570 747000) 0 nil])
([nil nil ((2569 . 2603) (t 25526 2258 95345 783000)) nil (25526 2277 692480 372000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2640 . 2641) (nil fontified nil 2603 . 2641) (2603 . 2641) 2602) nil (25526 2336 803333 705000) 0 nil] [nil nil ((nil rear-nonsticky nil 2603 . 2604) (nil fontified nil 2603 . 2604) (2603 . 2604) 2602) ((#(")" 0 1 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("pars"))) . 2603) (nil rear-nonsticky t 2603 . 2604)) (25526 2277 692295 561000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2635)) nil (25526 2336 803327 649000) 0 nil])
nil
([nil nil ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2635)) nil (25526 2336 803323 742000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2635)) nil (25526 2336 803319 298000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2635)) nil (25526 2336 803315 242000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2634)) nil (25526 2336 803310 890000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803306 668000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803302 224000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803298 187000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803294 57000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803290 132000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803286 113000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803282 113000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803278 39000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803273 725000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803269 58000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803265 3000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803261 151000) 0 nil])
([nil nil ((#("r" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803257 318000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803253 558000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803249 170000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803245 3000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803240 392000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803235 929000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803231 151000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803227 77000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803222 22000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803217 744000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803213 96000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803208 800000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803204 337000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803200 115000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803195 856000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803191 763000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803187 208000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803183 23000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803178 560000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2603) (undo-tree-id46 . -1)) nil (25526 2336 803173 375000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars"))) . 2603)) nil (25526 2336 803164 245000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . 2603) (undo-tree-id45 . 1)) nil (25526 2336 803157 764000) 0 nil])
([nil current ((2569 . 2570)) nil (25526 2336 803073 359000) 0 nil])
nil
