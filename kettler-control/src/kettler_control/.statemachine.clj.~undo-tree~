(undo-tree-save-format-version . 1)
"b65c91b9d3fc9fee239d623a94b77f80adf0faee"
[nil nil nil nil (25718 22597 799558 670000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil cider-locals nil)) . -36) (1 . 37) (t . -1)) nil (25718 22597 799553 781000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 1) (undo-tree-id8 . -1)) nil (25718 22597 799547 522000) 0 nil])
([nil nil ((#("time-to-value" 0 13 (face font-lock-type-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 21)) nil (25718 22597 799539 578000) 0 nil])
([nil nil ((#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 21) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25718 22597 799534 726000) 0 nil])
([nil nil ((21 . 24)) nil (25718 22597 799524 578000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face font-lock-multiline t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -21) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("a" 0 1 (face font-lock-type-face font-lock-multiline t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -22) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("t" 0 1 (face font-lock-type-face font-lock-multiline t cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -23) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 24) nil (25718 22597 799516 912000) 0 nil])
([nil nil ((21 . 34)) nil (25718 22597 799449 784000) 0 nil])
([nil nil ((34 . 35)) nil (25718 22597 799436 988000) 0 nil])
([nil nil ((34 . 35) (t 25718 22597 799410 137000)) nil (25718 22693 699906 47000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35 . 36) (#("
" 0 1 (fontified nil)) . -1042) (35 . 1043)) nil (25718 22693 699900 676000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1043 . 1044) (#("
" 0 1 (fontified nil cider-locals nil)) . -1137) (1043 . 1138)) nil (25718 22693 699894 417000) 0 nil])
([nil nil ((161 . 162)) nil (25718 22693 699888 862000) 0 nil])
([nil nil ((1138 . 1139)) nil (25718 22693 699876 195000) 0 nil])
([nil nil ((#("" 0 1 (cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1177) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 1178 (1177 . 1178) (1173 . 1177) (1172 . 1173) (1169 . 1172) (1164 . 1169) (1160 . 1164) (#("a" 0 1 (face font-lock-function-name-face cider-locals ("val" "key" "pars") fontified t help-echo cider--help-echo)) . -1160) (undo-tree-id88 . -1) 1161 (1156 . 1161) (1139 . 1156) (#("i" 0 1 (cider-locals ("val" "key" "pars") fontified t help-echo cider--help-echo)) . -1139) (undo-tree-id89 . -1) 1140 (1139 . 1140) (1138 . 1139) (#(" " 0 1 (cider-locals ("val" "key" "pars") fontified nil help-echo cider--help-echo)) . 1137) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (1138 . 1139) (t 25718 22693 697097 559000)) nil (25718 23046 188441 855000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1180 . 1181) (#("
" 0 1 (fontified nil cider-locals ("pars"))) . -1252) (1177 . 1253) 1176) nil (25718 23046 188408 615000) 0 nil])
([nil nil ((#("   
" 0 3 (cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo) 3 4 (cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . 1174) (undo-tree-id83 . -4) (undo-tree-id84 . -2) (undo-tree-id85 . -2) 1176) nil (25718 23046 188401 930000) 0 nil])
([nil nil ((#("target " 0 6 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t) 6 7 (cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . 1181)) nil (25718 23046 188388 912000) 0 nil])
([nil nil ((#(":" 0 1 (cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1243) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("c" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1244) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("h" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1245) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1246) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("c" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1247) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("k" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1248) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 1249 (1243 . 1249) (1240 . 1243) (#("    " 0 4 (cider-locals ("val" "key" "pars" "pars") fontified nil help-echo cider--help-echo)) . -1213) (1243 . 1244) (1233 . 1241) (1230 . 1233) (#("g" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1230) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1231) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1232) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 1233 (1230 . 1233) (#("u" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1230) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("p" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1231) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("d" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1232) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1233) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1234) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1235) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("-" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1236) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("p" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1237) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("o" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1238) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("w" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1239) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1240) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 1241 (#("r" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1241) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 1242 (1178 . 1184) (#("p" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1178) (undo-tree-id76 . -1) (#("w" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1179) (undo-tree-id77 . -1) (#("-" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1180) (undo-tree-id78 . -1) (#("s" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1181) (undo-tree-id79 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1182) (undo-tree-id80 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1183) (undo-tree-id81 . -1) (#("r" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1184) (undo-tree-id82 . -1) 1185 (1182 . 1185) (1181 . 1182)) nil (25718 23046 188367 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1249 . 1250) (nil fontified nil 1243 . 1250) (1243 . 1250) 1242) nil (25718 23046 188206 453000) 0 nil])
([nil nil ((#("   target 
" 0 3 (cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo) 3 9 (cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t) 9 10 (cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo rear-nonsticky t fontified t) 10 11 (cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . 1240) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -9) (undo-tree-id30 . 1) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) 1243) nil (25718 23046 188198 491000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil cider-locals ("val" "key" "pars" "pars"))) . -1306) (1240 . 1307)) nil (25718 23046 188174 232000) 0 nil])
([nil nil ((#("start " 0 5 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t) 5 6 (cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . 1245)) nil (25718 23046 188169 584000) 0 nil])
([nil nil ((#("r" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1299) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 1300 (1299 . 1300) (1245 . 1257)) nil (25718 23046 188164 362000) 0 nil])
([nil nil ((1299 . 1300) (#("c" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . 1299) (undo-tree-id24 . 1)) nil (25718 23046 188152 344000) 0 nil])
([nil nil ((#("wheck" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t) 1 5 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . 1299) (undo-tree-id23 . 4)) nil (25718 23046 188143 862000) 0 nil])
([nil nil ((#("-" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . 1299) (undo-tree-id22 . 1)) nil (25718 23046 188136 511000) 0 nil])
([nil nil ((#("power" 0 5 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . 1299) (undo-tree-id21 . 5)) nil (25718 23046 188128 474000) 0 nil])
([nil nil ((#("v" 0 1 (cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . -1257) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 1258 (1257 . 1258) (1315 . 1321) (1312 . 1315) (1274 . 1292) (#("            " 0 12 (cider-locals ("val" "key" "pars" "pars") fontified nil help-echo cider--help-echo)) . 1274) (1305 . 1306) (1299 . 1303) (#("d" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1299) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1300) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("l" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1301) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1302) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("y" 0 1 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1303) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 1304 (1299 . 1304)) nil (25718 23046 188114 474000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1376 . 1377) (nil fontified nil 1321 . 1377) (1321 . 1377) 1320) nil (25718 23046 188043 828000) 0 nil])
([nil nil ((#("wait" 0 4 (face clojure-keyword-face cider-locals ("val" "key" "pars" "pars") help-echo cider--help-echo fontified t)) . 1370)) nil (25718 23046 188036 828000) 0 nil])
([nil nil ((1370 . 1375)) nil (25718 23046 188032 124000) 0 nil])
([nil nil ((1377 . 1379)) nil (25718 23046 188019 717000) 0 nil])
([nil nil ((#("O" 0 1 (cider-locals ("val" "key" "pars" "pars") fontified t help-echo cider--help-echo)) . -1314) (undo-tree-id98 . -1) 1315 (1314 . 1315) (t 25718 23046 188578 93000)) nil (25718 23164 121110 598000) 0 nil])
([nil nil ((1159 . 1162) (1149 . 1159) (1139 . 1149) (#("d" 0 1 (cider-locals ("val" "key" "pars") fontified t help-echo cider--help-echo)) . -1139) (undo-tree-id95 . -1) (#("e" 0 1 (cider-locals ("val" "key" "pars") fontified t help-echo cider--help-echo)) . -1140) (undo-tree-id96 . -1) (#("f" 0 1 (cider-locals ("val" "key" "pars") fontified t help-echo cider--help-echo)) . -1141) (undo-tree-id97 . -1) 1142 (1139 . 1142) (1138 . 1141) (1312 . 1315) (1312 . 1313) 1313) nil (25718 23164 121084 747000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1170 . 1171) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "control" "sm"))) . -1189) (1162 . 1190) 1161) nil (25718 23164 121041 7000) 0 nil])
([nil nil ((#("  
" 0 2 (cider-locals ("val" "key" "pars" "ms") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("val" "key" "pars" "ms") help-echo cider--help-echo fontified t)) . 1160) (undo-tree-id93 . -3) (undo-tree-id94 . -1) 1161) nil (25718 23164 121025 45000) 0 nil])
([nil nil ((#("100" 0 3 (cider-locals ("val" "key" "pars" "ms") help-echo cider--help-echo fontified t)) . 1182)) nil (25718 23164 120974 286000) 0 nil])
([nil nil ((1182 . 1184)) nil (25718 23164 120965 9000) 0 nil])
([nil nil ((1185 . 1186)) nil (25718 23164 120944 991000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1400) (#(" " 0 1 (fontified t cider-locals ("pars"))) . 1400) (t 25718 23164 125722 986000)) nil (25718 23734 739783 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t cider-locals ("pars"))) . -1392) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1393) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1394) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1395) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1396) (undo-tree-id47 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1397) (undo-tree-id48 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1398) (undo-tree-id49 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1399) (undo-tree-id50 . -1) 1400) nil (25718 23734 739757 673000) 0 nil])
([nil nil ((1392 . 1405)) nil (25718 23734 739706 322000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1327) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1328) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1329) (undo-tree-id30 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1330) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1331) (undo-tree-id32 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1332) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1333) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1334) (undo-tree-id35 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1335) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1336) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1337) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1338) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1339) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1340) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t cider-locals ("pars"))) . -1341) (undo-tree-id42 . -1) 1342) nil (25718 23734 739686 564000) 0 nil])
([nil nil ((1324 . 1342) (#("   " 0 3 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1324) (undo-tree-id27 . -3) 1327) nil (25718 23734 739437 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t cider-locals ("pars"))) . -1323) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1324) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1325) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1326) (undo-tree-id11 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1327) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1328) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1329) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1330) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1331) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1332) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1333) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1334) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1335) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1336) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1337) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1338) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1339) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1340) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1341) (undo-tree-id26 . -1) 1342) nil (25718 23734 739403 922000) 0 nil])
([nil nil ((1323 . 1342)) nil (25718 23734 739208 538000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1223) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1223) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1223) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1223)) nil (25718 23734 739187 446000) 0 nil])
([nil nil ((1246 . 1259) (t 25718 23735 21885 238000)) nil (25718 23845 156176 364000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1246) (undo-tree-id136 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1247) (undo-tree-id137 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1248) (undo-tree-id138 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1249) (undo-tree-id139 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1250) (undo-tree-id140 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1251) (undo-tree-id141 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1252) (undo-tree-id142 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1253) (undo-tree-id143 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1254) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1255) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1256) (undo-tree-id146 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1257) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1258) (undo-tree-id148 . -1) 1259) nil (25718 23845 156164 827000) 0 nil])
([nil nil ((1319 . 1338)) nil (25718 23845 156005 479000) 0 nil])
([nil nil ((1338 . 1341)) nil (25718 23845 156001 738000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1340) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 1341) nil (25718 23845 155996 905000) 0 nil])
([nil nil ((1340 . 1349)) nil (25718 23845 155986 720000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1328) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1329) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1330) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1331) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1332) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1333) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1334) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1335) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1336) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1337) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(":" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1338) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1339) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1340) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1341) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1342) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1343) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1344) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1345) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1346) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1347) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1348) (undo-tree-id132 . -1) (undo-tree-id133 . -1) 1349) nil (25718 23845 155968 739000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1319) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1320) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1321) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1322) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1323) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1324) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1325) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1326) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1327) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 1328) nil (25718 23845 155824 724000) 0 nil])
([nil nil ((1388 . 1401)) nil (25718 23845 155718 264000) 0 nil])
([nil nil ((1401 . 1404)) nil (25718 23845 155714 208000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1403) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 1404) nil (25718 23845 155709 264000) 0 nil])
([nil nil ((1403 . 1405)) nil (25718 23845 155698 616000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1404) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 1405) nil (25718 23845 155692 931000) 0 nil])
([nil nil ((1404 . 1412)) nil (25718 23845 155681 301000) 0 nil])
([nil nil ((1412 . 1418)) nil (25718 23845 155677 283000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1416) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1417) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 1418) nil (25718 23845 155670 746000) 0 nil])
([nil nil ((1416 . 1428)) nil (25718 23845 155627 358000) 0 nil])
([nil nil ((1413 . 1414)) nil (25718 23845 155614 285000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") font-lock-multiline t)) . -1465) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") font-lock-multiline t)) . -1466) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 1467 (1465 . 1467) (t 25718 23845 169213 473000)) nil (25718 24347 57226 881000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1465 . 1466) (#("
" 0 1 (cider-locals nil fontified nil)) . -1706) (1465 . 1707)) nil (25718 24347 57169 994000) 0 nil])
([nil nil ((#("control" 0 7 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "control"))) . 1495)) nil (25718 24347 57157 364000) 0 nil])
([nil nil ((1495 . 1504)) nil (25718 24347 57148 716000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1550) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1551) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1552) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1553) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1554) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1555) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1556) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 1557) nil (25718 24347 57129 161000) 0 nil])
([nil nil ((1550 . 1555)) nil (25718 24347 57024 645000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -1554) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 1555) nil (25718 24347 57012 220000) 0 nil])
([nil nil ((1554 . 1559)) nil (25718 24347 56958 91000) 0 nil])
([nil nil ((1710 . 1711) 1559) nil (25718 24347 56938 18000) 0 nil])
([nil nil ((1319 . 1338) (t 25718 24347 67035 662000)) nil (25718 24603 294441 298000) 0 nil])
([nil nil ((1338 . 1351)) nil (25718 24603 294433 798000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . -1350) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 1351) nil (25718 24603 294425 854000) 0 nil])
([nil nil ((1350 . 1352)) nil (25718 24603 294408 76000) 0 nil])
([nil nil ((1352 . 1358)) nil (25718 24603 294401 669000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1352) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1353) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . -1354) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1355) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1356) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . -1357) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 1358) nil (25718 24603 294386 929000) 0 nil])
([nil nil ((1352 . 1359)) nil (25718 24603 294313 375000) 0 nil])
([nil nil ((1359 . 1365)) nil (25718 24603 294306 782000) 0 nil])
([nil nil ((1359 . 1364)) nil (25718 24603 294300 468000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1363) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 1364) nil (25718 24603 294290 838000) 0 nil])
([nil nil ((1363 . 1365)) nil (25718 24603 294241 191000) 0 nil])
([nil nil ((1371 . 1372)) nil (25718 24603 294224 266000) 0 nil])
([nil nil ((1341 . 1343) (t 25718 24603 300817 198000)) nil (25718 24865 998584 472000) 0 nil])
([nil nil ((#("." 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . 1343)) nil (25718 24865 998573 658000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1341) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 1342) nil (25718 24865 998554 399000) 0 nil])
([nil nil ((1684 . 1693) (t 25718 24866 14441 13000)) nil (25718 25082 345891 580000) 0 nil])
([nil nil ((1693 . 1699)) nil (25718 25082 345882 932000) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -1698) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 1699) nil (25718 25082 345871 339000) 0 nil])
([nil nil ((1698 . 1708)) nil (25718 25288 80626 375000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . 1352) (t 25718 25082 356674 201000)) nil (25718 25735 366274 246000) 0 nil] [nil nil ((1358 . 1363) (1352 . 1358) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1352) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . -1353) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1354) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1355) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . -1356) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1357) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("\"" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1358) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1359) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("h" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1360) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1361) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1362) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("k" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1363) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1364) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1365) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1366) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1367) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1368) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1369) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("\"" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . -1370) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 1371 (t 25718 25082 356674 201000)) ((1352 . 1371) (#("update" 0 6 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1352) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (#("-pars" 0 5 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1358) (undo-tree-id229 . -4) (undo-tree-id230 . -4)) (25718 25288 79025 442000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366269 487000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-function-name-face)) . 1352)) nil (25718 25735 366265 820000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366261 487000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366257 616000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366253 376000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . 1352)) nil (25718 25735 366249 227000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366245 246000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366240 968000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366237 190000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366232 913000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366228 783000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366224 765000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366220 839000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366216 913000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366212 635000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366208 561000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366204 654000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-string-face)) . 1352)) nil (25718 25735 366200 820000) 0 nil])
([nil nil ((1352 . 1385)) nil (25718 25735 366197 302000) 0 nil])
([nil nil ((1355 . 1387) (#("                                " 0 32 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1354) (undo-tree-id252 . -32) (1354 . 1387) (#("                                " 0 32 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1353) (undo-tree-id253 . -32) (1385 . 1386)) nil (25718 25735 366191 858000) 0 nil])
([nil nil ((1352 . 1385)) nil (25718 25735 366179 469000) 0 nil])
([nil nil ((1385 . 1397)) nil (25718 25735 366175 635000) 0 nil])
([nil nil ((1397 . 1405)) nil (25718 25735 366171 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1430 . 1431) (nil fontified nil 1405 . 1431) (1405 . 1431)) nil (25718 25735 366167 98000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431)) nil (25718 25735 366161 339000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431)) nil (25718 25735 366149 784000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1431)) nil (25718 25735 366130 321000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1)) nil (25718 25735 366111 43000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1352)) nil (25718 25735 366055 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1398) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 1399) nil (25718 25735 366042 970000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1398) (undo-tree-id231 . 1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) 1399) nil (25718 25735 366029 44000) 0 nil])
([nil nil ((1398 . 1399)) nil (25718 25735 365800 324000) 0 nil])
([nil nil ((1735 . 1737) (t 25718 25735 367253 534000)) nil (25718 25788 737667 911000) 0 nil])
([nil nil ((#("        (print \"Hallo\")dd
" 0 9 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-state" "pars" "automaton" "sm")) 9 14 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-state" "pars" "automaton" "sm") face font-lock-function-name-face) 14 15 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-state" "pars" "automaton" "sm")) 15 22 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face) 22 25 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-state" "pars" "automaton" "sm")) 25 26 (help-echo cider--help-echo fontified t cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . 1712) (undo-tree-id254 . 1) (undo-tree-id255 . -24) (undo-tree-id256 . -24) 1736) nil (25718 26102 944213 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1264 . 1265) (#("
" 0 1 (cider-locals ("pars") fontified nil)) . -1326) (1246 . 1327) 1245 (t 25718 25788 736794 845000)) nil (25718 26185 179796 205000) 0 nil] [nil nil ((nil rear-nonsticky nil 1303 . 1304) (#("
" 0 1 (cider-locals ("pars") fontified nil)) . -1365) (1285 . 1366) 1259 (t 25718 25788 736794 845000)) ((#("
                  :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars")) 1 18 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 18 19 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("pars")) 19 20 (fontified nil help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 20 30 (fontified nil help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 30 33 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 33 50 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 50 51 (fontified nil help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 51 52 (fontified nil help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 52 53 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 53 54 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 54 60 (fontified nil help-echo cider--help-echo cider-locals ("pars") face font-lock-type-face) 60 78 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 78 79 (rear-nonsticky t fontified nil help-echo cider--help-echo cider-locals ("pars")) 79 80 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 80 81 (cider-locals ("pars") fontified nil)) . 1285) (undo-tree-id257 . -80) (undo-tree-id258 . -1) (undo-tree-id259 . -80) (undo-tree-id260 . -19) (undo-tree-id261 . -1) (undo-tree-id262 . -19) (1365 . 1366) (nil rear-nonsticky t 1303 . 1304)) (25718 26102 943415 416000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1246) (undo-tree-id288 . -1) 1247 (1246 . 1247) (#("." 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1292) (undo-tree-id289 . -1) 1293 (1292 . 1293) (1258 . 1259) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1258) (undo-tree-id290 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1259) (undo-tree-id291 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1260) (undo-tree-id292 . -1) 1261 (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1261) (undo-tree-id293 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1262) (undo-tree-id294 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1263) (undo-tree-id295 . -1) (#(" " 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars"))) . -1264) (undo-tree-id296 . -1) 1265) nil (25718 26185 179783 20000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1362 . 1363) (#("
" 0 1 (cider-locals ("pars") fontified nil)) . -1500) (1360 . 1501)) nil (25718 26185 179745 187000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1363)) nil (25718 26185 179739 928000) 0 nil])
([nil nil ((#("            :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 12 (fontified t help-echo cider--help-echo cider-locals ("pars")) 12 13 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 13 23 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 23 26 (fontified t help-echo cider--help-echo cider-locals ("pars")) 26 43 (fontified t help-echo cider--help-echo cider-locals ("pars")) 43 44 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 44 45 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 45 46 (fontified t help-echo cider--help-echo cider-locals ("pars")) 46 47 (fontified t help-echo cider--help-echo cider-locals ("pars")) 47 53 (fontified t help-echo cider--help-echo cider-locals ("pars") face font-lock-type-face) 53 71 (fontified t help-echo cider--help-echo cider-locals ("pars")) 71 72 (rear-nonsticky t fontified t help-echo cider--help-echo cider-locals ("pars")) 72 73 (fontified t help-echo cider--help-echo cider-locals ("pars")) 73 74 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1387) (undo-tree-id286 . -4) (undo-tree-id287 . -4) 1391) nil (25718 26185 179735 95000) 0 nil])
([nil nil ((1224 . 1226) (1426 . 1429) (1426 . 1427) 1444) nil (25718 26185 179724 2000) 0 nil])
([nil nil ((#("ĉwstart" 0 2 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 2 7 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . 1224) (undo-tree-id285 . 7)) nil (25718 26185 179717 614000) 0 nil])
([nil nil ((1224 . 1228)) nil (25718 26185 179709 836000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1345) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("h" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1346) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1347) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1348) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("k" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1349) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1350) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1351) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1352) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1353) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1354) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -1355) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 1356) nil (25718 26407 817871 21000) 0 nil])
([nil nil ((1345 . 1350)) ((#("start" 0 5 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . 1345) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (t 25718 26185 482255 105000)) (25718 26411 464026 416000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37 . 38) (#("
" 0 1 (cider-locals nil fontified nil)) . -140) (35 . 141) (t 25718 26185 482255 105000)) nil (25718 26519 901167 302000) 0 nil] [nil nil ((1569 . 1570) (1536 . 1569) (1488 . 1489) (t 25718 26185 482255 105000)) ((#("(" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1488) (undo-tree-id304 . 1) (#("
                                " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars")) 1 33 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1536) (undo-tree-id305 . 32) (#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1569)) (25718 26405 975476 619000) 0 nil] [nil nil ((1535 . 1581) (1488 . 1489) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1488) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -1489) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 1490 (1488 . 1490) (t 25718 26185 482255 105000)) ((#("i(" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1488) (1488 . 1490) (#("(" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 1488) (#("
                                             " 0 46 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 1535) (undo-tree-id301 . -45) (undo-tree-id302 . -1) (undo-tree-id303 . -45)) (25718 26360 709898 732000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 35) (undo-tree-id397 . -1)) nil (25718 26519 901160 635000) 0 nil])
nil
nil
([nil nil ((#("             " 0 13 (help-echo cider--help-echo fontified nil cider-locals nil)) . -105) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (89 . 105) (#("  " 0 1 (fontified nil help-echo cider--help-echo cider-locals nil) 1 2 (fontified nil rear-nonsticky t help-echo cider--help-echo cider-locals nil)) . -39) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (35 . 39) 89) nil (25718 26519 901150 969000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals nil)) . -97) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (85 . 97) (#("    " 0 4 (fontified t help-echo cider--help-echo cider-locals nil)) . -35) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) 91) nil (25718 26519 901121 599000) 0 nil])
([nil nil ((#("[kettler-control.statemachine :as sm]" 0 30 (help-echo cider--help-echo fontified t cider-locals nil) 30 31 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 31 33 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 33 37 (help-echo cider--help-echo fontified t cider-locals nil)) . 97)) nil (25718 26519 901095 432000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . 33)) nil (25718 26519 901091 340000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . -33) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 34) nil (25718 26519 901084 747000) 0 nil])
([nil nil ((33 . 36)) nil (25718 26519 901051 470000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil cider-block-dynamic-font-lock t)) . -85) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -86) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -87) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -88) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -89) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -90) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -91) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -92) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -93) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -94) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -95) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -96) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -97) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 98) nil (25718 26519 901032 656000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals nil cider-block-dynamic-font-lock t)) . -85) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -86) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 87) nil (25718 26519 900742 512000) 0 nil])
([nil nil ((85 . 87)) nil (25718 26519 900678 846000) 0 nil])
([nil nil ((1190 . 1192) (t 25718 26519 907477 818000)) nil (25718 26593 574322 48000) 0 nil])
([nil nil ((1191 . 1193)) nil (25718 26593 574313 456000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1191) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1192) (undo-tree-id427 . -1) (undo-tree-id428 . -1) 1193) nil (25718 26593 574303 900000) 0 nil])
([nil nil ((1191 . 1203)) nil (25718 26593 574272 956000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") face font-lock-function-name-face)) . -1202) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 1203) nil (25718 26593 574264 67000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1190) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1191) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1192) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1193) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-keyword-face)) . -1194) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals nil font-lock-multiline t face font-lock-keyword-face)) . -1195) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") font-lock-multiline t)) . -1196) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") face font-lock-function-name-face)) . -1197) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") face font-lock-function-name-face)) . -1198) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") face font-lock-function-name-face)) . -1199) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") face font-lock-function-name-face)) . -1200) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("defn" "defn" "defn") face font-lock-function-name-face)) . -1201) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 1202) nil (25718 26593 574229 642000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 1190)) nil (25718 26593 574050 682000) 0 nil])
([nil nil ((#("                  :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 18 (cider-locals ("pars") help-echo cider--help-echo fontified t) 18 19 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified t) 19 29 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified t) 29 49 (cider-locals ("pars") help-echo cider--help-echo fontified t) 49 50 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified t) 50 51 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified t) 51 53 (cider-locals ("pars") help-echo cider--help-echo fontified t) 53 59 (face font-lock-type-face cider-locals ("pars") help-echo cider--help-echo fontified t) 59 80 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1508) (undo-tree-id0 . -18) (undo-tree-id1 . -18) (undo-tree-id2 . -18) (undo-tree-id3 . -18) (undo-tree-id4 . -80) (undo-tree-id5 . -18) (undo-tree-id6 . -18) (undo-tree-id7 . -18) 1526 (t 25718 26593 586357 993000)) nil (25719 36000 544357 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1449 . 1450) (#("
" 0 1 (fontified nil cider-locals ("pars"))) . -1511) (1431 . 1512) 1430) nil (25719 36065 84553 17000) 0 nil] [nil nil ((nil rear-nonsticky nil 1488 . 1489) (#("
" 0 1 (fontified nil cider-locals ("pars"))) . -1550) (1470 . 1551) 1432) ((#("
                  :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t) 1 18 (cider-locals ("pars") help-echo cider--help-echo fontified nil) 18 19 (cider-locals ("pars") help-echo cider--help-echo rear-nonsticky nil fontified nil) 19 20 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified nil) 20 30 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified nil) 30 50 (cider-locals ("pars") help-echo cider--help-echo fontified nil) 50 51 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified nil) 51 52 (face clojure-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified nil) 52 54 (cider-locals ("pars") help-echo cider--help-echo fontified nil) 54 60 (face font-lock-type-face cider-locals ("pars") help-echo cider--help-echo fontified nil) 60 80 (cider-locals ("pars") help-echo cider--help-echo fontified nil) 80 81 (fontified nil cider-locals ("pars"))) . 1470) (undo-tree-id8 . -19) (undo-tree-id9 . -80) (undo-tree-id10 . -1) (undo-tree-id11 . -80) (undo-tree-id12 . -1) (undo-tree-id13 . -19) (1550 . 1551) (nil rear-nonsticky t 1488 . 1489)) (25719 36000 543895 462000) 0 nil])
([nil nil ((#("                  " 0 17 (cider-locals ("pars") help-echo cider--help-echo fontified nil) 17 18 (cider-locals ("pars") help-echo cider--help-echo rear-nonsticky t fontified nil)) . -1448) (undo-tree-id25 . -18) (undo-tree-id26 . -18) (undo-tree-id27 . -18) (undo-tree-id28 . -18) (undo-tree-id29 . -18) (undo-tree-id30 . -18) (undo-tree-id31 . -18) (undo-tree-id32 . -18) (1432 . 1448) 1450) nil (25719 36065 84544 573000) 0 nil])
nil
([nil nil ((#("                " 0 16 (cider-locals ("pars") help-echo cider--help-echo fontified nil)) . -1444) (1432 . 1444) 1450) nil (25719 36065 84516 277000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1440)) nil (25719 36065 84510 888000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1431) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1432) (undo-tree-id17 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1433) (undo-tree-id18 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1434) (undo-tree-id19 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1435) (undo-tree-id20 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1436) (undo-tree-id21 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1437) (undo-tree-id22 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1438) (undo-tree-id23 . -1) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1439) (undo-tree-id24 . -1) 1440) nil (25719 36065 84500 333000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1431) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1431) (#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1431)) nil (25719 36065 84432 0) 0 nil])
([nil nil ((1433 . 1445) (1408 . 1409) (1431 . 1432)) nil (25719 36065 84416 649000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -1239) (undo-tree-id46 . -1) 1240 (1239 . 1240) (t 25719 36065 378497 262000)) nil (25719 42783 24958 756000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1239 . 1240) (#("
" 0 1 (fontified nil cider-locals nil)) . -1293) (1239 . 1294)) nil (25719 42783 24940 626000) 0 nil])
([nil nil ((#("(def time-to-power (ttv/time-to-value ttv/power-seq))
" 0 1 (cider-locals nil help-echo cider--help-echo fontified t) 1 4 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 4 5 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 5 18 (face font-lock-variable-name-face cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 18 20 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 20 23 (face font-lock-type-face cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 23 38 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 38 41 (face font-lock-type-face cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 41 53 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 53 54 (cider-locals nil help-echo cider--help-echo fontified t)) . 1240) (undo-tree-id33 . -1) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -53) (undo-tree-id38 . 1) (undo-tree-id39 . -53) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) 1247) nil (25719 42783 24925 923000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1239 . 1240) (#("
" 0 1 (fontified nil cider-locals nil)) . -1293) (1239 . 1294)) nil (25719 42783 24807 667000) 0 nil])
([nil nil ((1244 . 1245) (t 25719 42783 49953 147000)) nil (25719 42849 590272 696000) 0 nil])
([nil nil ((#("(defn time-to-power (ttv/time-to-value ttv/power-seq))
" 0 1 (cider-locals nil help-echo cider--help-echo fontified t) 1 5 (face font-lock-keyword-face cider-locals nil help-echo cider--help-echo fontified t) 5 6 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 6 19 (face font-lock-function-name-face cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 19 21 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 21 24 (face font-lock-type-face cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 24 39 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 39 42 (face font-lock-type-face cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 42 54 (cider-locals ("ttv/time-to-value") help-echo cider--help-echo fontified t) 54 55 (cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 1240) (undo-tree-id68 . -24) (undo-tree-id69 . -4) (undo-tree-id70 . -55) (undo-tree-id71 . -55) (undo-tree-id72 . -55) (undo-tree-id73 . -54) (undo-tree-id74 . 53) (undo-tree-id75 . -55) (undo-tree-id76 . -55) (undo-tree-id77 . -55) (undo-tree-id78 . -55) (undo-tree-id79 . -55) (undo-tree-id80 . -55) (undo-tree-id81 . -24) (undo-tree-id82 . -54) (undo-tree-id83 . -24) (undo-tree-id84 . -24) (undo-tree-id85 . -24) (undo-tree-id86 . -1) (undo-tree-id87 . -24) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -1) 1241) nil (25719 42849 590263 770000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 1239) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1)) nil (25719 42849 590137 902000) 0 nil])
([nil nil ((#("            :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 12 (cider-locals ("pars") fontified t help-echo cider--help-echo) 12 13 (face clojure-keyword-face cider-locals ("pars") fontified t help-echo cider--help-echo) 13 23 (face clojure-keyword-face cider-locals ("pars") fontified t help-echo cider--help-echo) 23 43 (cider-locals ("pars") fontified t help-echo cider--help-echo) 43 44 (face clojure-keyword-face cider-locals ("pars") fontified t help-echo cider--help-echo) 44 45 (face clojure-keyword-face cider-locals ("pars") fontified t help-echo cider--help-echo) 45 47 (cider-locals ("pars") fontified t help-echo cider--help-echo) 47 53 (face font-lock-type-face cider-locals ("pars") fontified t help-echo cider--help-echo) 53 73 (cider-locals ("pars") fontified t help-echo cider--help-echo) 73 74 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . 1432) (undo-tree-id91 . -14) (undo-tree-id92 . -12) (undo-tree-id93 . -12) 1444 (t 25719 42849 608429 743000)) nil (25719 42872 708869 56000) 0 nil])
([nil nil ((1239 . 1240) (t 25719 42872 727900 620000) 1239) nil (25719 43121 624214 233000) 0 nil])
([nil nil ((1239 . 1240)) nil (25719 43121 624209 492000) 0 nil])
([nil nil ((1240 . 1246)) nil (25719 43121 624205 992000) 0 nil])
([nil nil ((1246 . 1264)) nil (25719 43121 624202 344000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1259) (undo-tree-id130 . -1) (#("i" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1260) (undo-tree-id131 . -1) (#("m" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1261) (undo-tree-id132 . -1) (#("e" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1262) (undo-tree-id133 . -1) (#(" " 0 1 (cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1263) (undo-tree-id134 . -1) 1264) nil (25719 43121 624195 622000) 0 nil])
([nil nil ((1259 . 1263)) nil (25719 43121 624175 123000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1259) (undo-tree-id126 . -1) (#("i" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1260) (undo-tree-id127 . -1) (#("m" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1261) (undo-tree-id128 . -1) (#("e" 0 1 (face font-lock-function-name-face cider-locals ("defn" "defn") help-echo cider--help-echo fontified t)) . -1262) (undo-tree-id129 . -1) 1263) nil (25719 43121 624168 956000) 0 nil])
([nil nil ((1259 . 1269)) nil (25719 43121 624151 734000) 0 nil])
([nil nil ((1269 . 1270)) nil (25719 43121 624148 68000) 0 nil])
([nil nil ((1270 . 1273)) nil (25719 43121 624144 197000) 0 nil])
([nil nil ((1268 . 1272)) nil (25719 43121 624140 623000) 0 nil])
([nil nil ((1274 . 1277)) nil (25719 43121 624136 883000) 0 nil])
([nil nil ((1277 . 1282)) nil (25719 43121 624133 31000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1279) (undo-tree-id123 . -1) (#("m" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1280) (undo-tree-id124 . -1) (#("e" 0 1 (face font-lock-keyword-face cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1281) (undo-tree-id125 . -1) 1282) nil (25719 43121 624127 50000) 0 nil])
([nil nil ((1279 . 1282)) nil (25719 43121 624113 87000) 0 nil])
([nil nil ((1282 . 1294)) nil (25719 43121 624109 420000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1293) (undo-tree-id122 . -1) 1294) nil (25719 43121 624104 680000) 0 nil])
([nil nil ((1293 . 1296)) nil (25719 43121 624097 87000) 0 nil])
([nil nil ((1296 . 1298)) nil (25719 43121 624093 458000) 0 nil])
([nil nil ((1298 . 1311)) nil (25719 43121 624089 458000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1282) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("i" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1283) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("m" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1284) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("e" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1285) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("-" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1286) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("t" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1287) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#("o" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1288) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("-" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1289) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("v" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1290) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("a" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1291) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("l" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1292) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("u" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1293) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("e" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1294) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 1295) nil (25719 43121 624075 866000) 0 nil])
([nil nil ((1282 . 1293)) nil (25719 43121 623982 368000) 0 nil])
([nil nil ((1293 . 1295)) nil (25719 43121 623978 275000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1294) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 1295) nil (25719 43121 623972 275000) 0 nil])
([nil nil ((1294 . 1305)) nil (25719 43121 623936 17000) 0 nil])
([nil nil ((1321 . 1326)) nil (25719 43121 623922 184000) 0 nil])
([nil nil ((#("  " 0 2 (cider-locals ("m" "par") fontified nil help-echo cider--help-echo)) . -1328) (1327 . 1328) (t 25719 43121 632205 161000)) nil (25719 43224 815330 565000) 0 nil])
([nil nil ((1328 . 1330)) nil (25719 43224 815321 639000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1329) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 1330) nil (25719 43224 815313 177000) 0 nil])
([nil nil ((1329 . 1332)) nil (25719 43224 815295 677000) 0 nil])
([nil nil ((#("g" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1329) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("e" 0 1 (cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1330) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("t" 0 1 (face font-lock-function-name-face cider-locals ("m" "par") help-echo cider--help-echo fontified t)) . -1331) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 1332) nil (25719 43224 815285 196000) 0 nil])
([nil nil ((1329 . 1338)) nil (25719 43224 815227 290000) 0 nil])
([nil nil ((1338 . 1355)) nil (25719 43224 815220 790000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1345) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("b" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1346) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("y" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1347) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("-" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1348) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("e" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1349) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("p" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1350) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("o" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1351) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("c" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1352) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("h" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1353) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (cider-locals ("m" "par" "defn" "defn") help-echo cider--help-echo fontified t)) . -1354) (undo-tree-id163 . -1) (undo-tree-id164 . -1) 1355) nil (25719 43224 815202 494000) 0 nil])
([nil nil ((1345 . 1351)) nil (25719 43224 815088 15000) 0 nil])
([nil nil ((#("}" 0 1 (cider-locals ("m" "par" "par") help-echo cider--help-echo fontified t)) . -1350) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 1351) nil (25719 43224 815078 960000) 0 nil])
([nil nil ((1350 . 1351)) nil (25719 43224 815060 442000) 0 nil])
([nil nil ((1351 . 1354)) nil (25719 43224 815054 90000) 0 nil])
([nil nil ((1354 . 1359)) nil (25719 43224 815047 423000) 0 nil])
([nil nil ((1359 . 1360)) nil (25719 43224 815040 664000) 0 nil])
([nil nil ((#("o" 0 1 (face clojure-keyword-face cider-locals ("m" "par" "par") help-echo cider--help-echo fontified t)) . -1359) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 1360) nil (25719 43224 815031 942000) 0 nil])
([nil nil ((1359 . 1361)) nil (25719 43224 815013 183000) 0 nil])
([nil nil ((#("p" 0 1 (face clojure-keyword-face cider-locals ("m" "par" "par") help-echo cider--help-echo fontified t)) . -1359) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("m" "par" "par") help-echo cider--help-echo fontified t)) . -1360) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 1361) nil (25719 43224 815002 535000) 0 nil])
([nil nil ((1359 . 1364)) nil (25719 43224 814970 925000) 0 nil])
([nil nil ((1364 . 1367)) nil (25719 43224 814963 981000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-function-name-face cider-locals ("m" "par" "par") help-echo cider--help-echo fontified t)) . -1366) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 1367) nil (25719 43224 814954 462000) 0 nil])
([nil nil ((1366 . 1376)) nil (25719 43224 814907 501000) 0 nil])
([nil nil ((1354 . 1357)) nil (25719 43224 814900 816000) 0 nil])
([nil nil ((1379 . 1388)) nil (25719 43224 814892 890000) 0 nil])
([nil nil ((1388 . 1390)) nil (25719 43224 814874 853000) 0 nil])
([nil nil ((1390 . 1392) (t 25719 43224 839844 4000)) nil (25719 43360 114053 193000) 0 nil])
([nil nil ((1392 . 1406)) nil (25719 43360 114049 64000) 0 nil])
([nil nil ((1406 . 1417)) nil (25719 43360 114045 508000) 0 nil])
([nil nil ((1417 . 1420)) nil (25719 43360 114041 897000) 0 nil])
([nil nil ((1420 . 1425)) nil (25719 43360 114038 268000) 0 nil])
([nil nil ((1425 . 1433)) nil (25719 43360 114034 453000) 0 nil])
([nil nil ((#("r" 0 1 (face clojure-keyword-face cider-locals ("m" "par" "par" "par") help-echo cider--help-echo fontified t)) . -1431) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("m" "par" "par" "par") help-echo cider--help-echo fontified t)) . -1432) (undo-tree-id177 . -1) (undo-tree-id178 . -1) 1433) nil (25719 43360 114028 509000) 0 nil])
([nil nil ((1431 . 1437)) nil (25719 43360 114010 620000) 0 nil])
([nil nil ((1437 . 1441)) nil (25719 43360 114006 509000) 0 nil])
([nil nil ((1416 . 1419)) nil (25719 43360 114002 842000) 0 nil])
([nil nil ((1444 . 1445)) nil (25719 43360 113998 380000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("m" "par" "par" "p" "par") fontified t help-echo cider--help-echo)) . -1444) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 1445) nil (25719 43360 113992 176000) 0 nil])
([nil nil ((1444 . 1449)) nil (25719 43360 113947 214000) 0 nil])
([nil nil ((#("V" 0 1 (cider-locals ("m" "par" "par" "p" "par" "pars") fontified t help-echo cider--help-echo)) . -1703) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 1704 (1703 . 1704) (#("v" 0 1 (cider-locals ("m" "par" "par" "p" "par" "pars") fontified t help-echo cider--help-echo)) . -1703) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 1704 (1703 . 1704) (t 25719 43360 126749 236000)) nil (25719 43418 674844 813000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1755 . 1756) (nil fontified nil 1703 . 1756) (1703 . 1756) 1702) nil (25719 43636 241029 994000) 0 nil] [nil nil ((nil rear-nonsticky nil 1756 . 1757) (nil fontified nil 1704 . 1757) (1704 . 1757) 1703) ((#("{:conditions []
                  :transition :wait}]" 0 1 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 1 2 (face clojure-keyword-face cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 2 12 (face clojure-keyword-face cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 12 16 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 16 34 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 34 35 (face clojure-keyword-face cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 35 45 (face clojure-keyword-face cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 45 46 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 46 47 (face clojure-keyword-face cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 47 51 (face clojure-keyword-face cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 51 52 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil) 52 53 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo rear-nonsticky nil fontified nil)) . 1704) (undo-tree-id183 . -52) (undo-tree-id184 . -52) (undo-tree-id185 . -16) (undo-tree-id186 . -52) (nil fontified t 1716 . 1720) (nil fontified t 1706 . 1716) (nil fontified t 1705 . 1706) (nil fontified t 1704 . 1705) (nil rear-nonsticky t 1756 . 1757)) (25719 43418 674390 157000) 0 nil])
([nil nil ((#("]" 0 1 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo rear-nonsticky t fontified t)) . -1755) (undo-tree-id203 . -1) 1756) nil (25719 43636 241019 939000) 0 nil])
nil
([nil nil ((1755 . 1773)) nil (25719 43636 241008 476000) 0 nil])
([nil nil ((1717 . 1731)) nil (25719 43636 241003 347000) 0 nil])
([nil nil ((1731 . 1732)) nil (25719 43636 240997 680000) 0 nil])
([nil nil ((1732 . 1764) (#(" " 0 1 (cider-locals ("m" "par" "par" "p" "par" "pars") help-echo cider--help-echo fontified nil)) . 1731) (undo-tree-id202 . -1) (1732 . 1733)) nil (25719 43636 240990 717000) 0 nil])
([nil nil ((1764 . 1768)) nil (25719 43636 240978 162000) 0 nil])
([nil nil ((1271 . 1272)) nil (25719 43636 240972 903000) 0 nil])
([nil nil ((1322 . 1323)) nil (25719 43636 240967 477000) 0 nil])
([nil nil ((1352 . 1353)) nil (25719 43636 240961 829000) 0 nil])
([nil nil ((1380 . 1381)) nil (25719 43636 240956 644000) 0 nil])
([nil nil ((1370 . 1371)) nil (25719 43636 240951 292000) 0 nil])
([nil nil ((1421 . 1422)) nil (25719 43636 240946 89000) 0 nil])
([nil nil ((1450 . 1451)) nil (25719 43636 240940 700000) 0 nil])
([nil nil ((1775 . 1776)) nil (25719 43636 240935 219000) 0 nil])
([nil nil ((1776 . 1795)) nil (25719 43636 240929 922000) 0 nil])
([nil nil ((1795 . 1802)) nil (25719 43636 240924 348000) 0 nil])
([nil nil ((1802 . 1812)) nil (25719 43636 240918 367000) 0 nil])
([nil nil ((#("s" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("e" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("t" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("u" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("n" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("i" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("m" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("-" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("y" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("b" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("-" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("r" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("e" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("w" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("o" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("p" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("-" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("t" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("e" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("g" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("(" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776)) nil (25719 43636 240900 923000) 0 nil])
([nil nil ((#("u" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("n" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("i" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("m" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("-" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("t" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("e" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("g" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("(" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#(" " 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("s" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("r" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("a" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#("p" 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776) (#(" " 0 1 (cider-locals ("m" "pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1776)) nil (25719 43636 240866 961000) 0 nil])
([nil nil ((1776 . 1777)) nil (25719 43636 240847 406000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1272) (undo-tree-id200 . -1) (#("m" 0 1 (cider-locals ("m" "pars") help-echo cider--help-echo fontified t)) . -1273) (undo-tree-id201 . -1) 1274) nil (25719 43636 240839 647000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1255) (undo-tree-id189 . -1) (#("b" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1256) (undo-tree-id190 . -1) (#("y" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1257) (undo-tree-id191 . -1) (#("-" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1258) (undo-tree-id192 . -1) (#("m" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1259) (undo-tree-id193 . -1) (#("i" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1260) (undo-tree-id194 . -1) (#("n" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1261) (undo-tree-id195 . -1) (#("u" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1262) (undo-tree-id196 . -1) (#("t" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1263) (undo-tree-id197 . -1) (#("e" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1264) (undo-tree-id198 . -1) (#("s" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1265) (undo-tree-id199 . -1) 1266) nil (25719 43636 240812 721000) 0 nil])
([nil nil ((1255 . 1263)) nil (25719 43636 240749 834000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1319) (undo-tree-id187 . -1) (#("m" 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1320) (undo-tree-id188 . -1) 1321) nil (25719 43636 240740 538000) 0 nil])
([nil nil ((1319 . 1351)) nil (25719 43636 240696 891000) 0 nil])
([nil nil ((1351 . 1363)) nil (25719 43636 240691 243000) 0 nil])
([nil nil ((1363 . 1368)) nil (25719 43636 240684 724000) 0 nil])
([nil nil ((1370 . 1371)) nil (25719 43636 240668 225000) 0 nil])
([nil nil ((1256 . 1259) (t 25719 43636 270433 25000)) nil (25719 43691 537496 494000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals ("pars" "p" "pars") fontified t help-echo cider--help-echo)) . -1499) (undo-tree-id208 . -1) 1500) nil (25719 43691 537491 216000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals ("pars" "parsp") fontified t help-echo cider--help-echo)) . 1468) (#(" " 0 1 (cider-locals ("pars" "p" "pars") fontified t help-echo cider--help-echo)) . 1468) (#("," 0 1 (cider-locals ("pars" "p" "pars") fontified t help-echo cider--help-echo)) . 1468)) nil (25719 43691 537482 235000) 0 nil])
([nil nil ((1496 . 1500)) nil (25719 43691 537476 920000) 0 nil])
([nil nil ((1500 . 1521)) nil (25719 43691 537472 791000) 0 nil])
([nil nil ((1521 . 1522)) nil (25719 43691 537468 532000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1522) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#(")" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1523) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 1524) nil (25719 43691 537461 217000) 0 nil])
([nil nil ((1522 . 1525)) nil (25719 43691 537407 737000) 0 nil])
([nil nil ((#("v" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1608) (undo-tree-id221 . -1) 1609 (1608 . 1609) (1836 . 1845) (#("." 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1836) (undo-tree-id222 . -1) 1837 (1834 . 1837) (#("i" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1834) (undo-tree-id223 . -1) 1835 (1833 . 1835) (1814 . 1833) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1812) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified nil help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified nil help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (#("
" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1807) (t 25719 43691 559168 498000)) nil (25719 43846 678392 328000) 0 nil])
([nil nil ((1844 . 1845)) nil (25719 43846 678334 959000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1893 . 1894) (nil fontified nil 1845 . 1894) (1845 . 1894) 1844) nil (25719 43846 678328 644000) 0 nil])
([nil nil ((#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . 1865)) nil (25719 43846 678320 70000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1246) (undo-tree-id219 . -1) 1247 (1246 . 1247) (1878 . 1922) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil)) . 1877) (undo-tree-id220 . -1) (1878 . 1879) (1865 . 1877)) nil (25719 43846 678311 719000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-type-face cider-locals ("pars" "pars") help-echo cider--help-echo)) . 1923)) nil (25719 43846 678290 126000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-type-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678284 330000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678278 571000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678272 923000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678267 220000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-type-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678261 442000) 0 nil])
([nil nil ((#("/" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678255 757000) 0 nil])
([nil nil ((#("c" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678250 90000) 0 nil])
([nil nil ((#("u" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678244 202000) 0 nil])
([nil nil ((#("r" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678238 405000) 0 nil])
([nil nil ((#("r" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678232 850000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678227 387000) 0 nil])
([nil nil ((#("n" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678221 313000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("pars" "pars") fontified nil help-echo cider--help-echo)) . 1923)) nil (25719 43846 678215 721000) 0 nil])
([nil nil ((#("T" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678210 36000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678204 240000) 0 nil])
([nil nil ((#("m" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678198 351000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678192 425000) 0 nil])
([nil nil ((#("M" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678186 610000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678180 759000) 0 nil])
([nil nil ((#("l" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678174 907000) 0 nil])
([nil nil ((#("l" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678168 944000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678163 166000) 0 nil])
([nil nil ((#("s" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923)) nil (25719 43846 678156 759000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923) (undo-tree-id218 . -1)) nil (25719 43846 678150 130000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo rear-nonsticky t)) . 1923)) nil (25719 43846 678139 889000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1924 . 1925) (nil fontified nil 1924 . 1925) (1924 . 1925) 1923) nil (25719 43846 678133 537000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . 1923) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1)) nil (25719 43846 678123 834000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "pars") help-echo cider--help-echo rear-nonsticky t fontified t)) . 1923)) nil (25719 43846 678104 390000) 0 nil])
([nil nil ((1923 . 1944)) nil (25719 43846 678099 94000) 0 nil])
([nil nil ((1944 . 1949)) nil (25719 43846 678093 483000) 0 nil])
([nil nil ((1949 . 1951)) nil (25719 43846 678087 872000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1949) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#(")" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1950) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 1951) nil (25719 43846 678079 20000) 0 nil])
([nil nil ((1949 . 1950)) nil (25719 43846 678052 836000) 0 nil])
([nil nil ((#("." 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1926) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 1927) nil (25719 43846 678043 854000) 0 nil])
([nil nil ((1926 . 1927)) nil (25719 43846 677992 615000) 0 nil])
([nil nil ((#(":" 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1354) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("4" 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1355) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (#("1" 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1356) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 1357 (1354 . 1357) (t 25719 43846 825617 461000)) nil (25719 43885 711913 259000) 0 nil])
([nil nil ((#("(defn get-minutes [pars]
  (/ (- (:t pars) (:t0 pars)) / 60000.))
" 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo) 1 5 (face font-lock-keyword-face cider-locals ("pars") fontified t help-echo cider--help-echo) 5 6 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 6 17 (face font-lock-function-name-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 17 25 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 25 28 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 28 29 (face font-lock-function-name-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 29 30 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 30 31 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 31 32 (face font-lock-function-name-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 32 34 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 34 35 (face clojure-keyword-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 35 36 (face clojure-keyword-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 36 44 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 44 45 (face clojure-keyword-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 45 47 (face clojure-keyword-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 47 55 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 55 56 (face font-lock-function-name-face cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 56 65 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo) 65 66 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . 1376) (undo-tree-id226 . -25) (undo-tree-id227 . -25) (undo-tree-id228 . -25) (undo-tree-id229 . -66) (undo-tree-id230 . -25) (undo-tree-id231 . -25) (undo-tree-id232 . -25) 1401) nil (25719 43885 711885 890000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1239 . 1240) (#("
" 0 1 (fontified nil cider-locals ("pars"))) . -1305) (1239 . 1306)) nil (25719 43885 712164 680000) 0 nil])
([nil nil ((1306 . 1307)) nil (25719 43891 642189 23000) 0 nil] [nil nil ((#("  " 0 2 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1340) (undo-tree-id224 . -2) (undo-tree-id225 . -2) 1342 (1339 . 1342) 1306) ((#("
  " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t) 1 3 (cider-locals ("pars") help-echo cider--help-echo fontified nil)) . 1339) (undo-tree-id239 . -3) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (1340 . 1342)) (25719 43885 711844 613000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 1442) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . 1)) nil (25719 43891 642171 820000) 0 nil])
nil
([nil nil ((#("/" 0 1 (face font-lock-function-name-face cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1295) (t 25719 43891 684591 535000)) nil (25719 44170 381034 252000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 1295)) nil (25719 44170 381012 382000) 0 nil])
([nil nil ((1942 . 1943) (t 25719 44170 408217 315000)) nil (25719 44623 373562 105000) 0 nil])
([nil nil ((#("q" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1942) (undo-tree-id249 . -1) 1943) nil (25719 44623 373555 735000) 0 nil])
([nil nil ((1942 . 1943)) nil (25719 44623 373546 513000) 0 nil])
([nil nil ((#("@" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1942) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 1943) nil (25719 44623 373533 810000) 0 nil])
([nil nil ((1382 . 1383) (t 25719 44623 387858 427000)) nil (25719 44658 957642 741000) 0 nil])
([nil nil ((1288 . 1289)) nil (25719 44658 957637 37000) 0 nil])
([nil nil ((1277 . 1278)) nil (25719 44658 957622 93000) 0 nil])
([nil nil ((1474 . 1475) (t 25719 44658 977044 575000)) nil (25719 44971 606537 543000) 0 nil])
([nil nil ((#("!" 0 1 (cider-locals ("pars" "pars") fontified t help-echo cider--help-echo)) . -1474) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 1475) nil (25719 44971 606530 840000) 0 nil])
([nil nil ((1474 . 1477)) nil (25719 44971 606485 544000) 0 nil])
([nil nil ((#("V" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1600) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 1601 (1600 . 1601) (t 25719 44971 629894 898000)) nil (25719 45146 195992 413000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1734 . 1735) (#("
" 0 1 (fontified nil cider-locals ("pars" "pars" "pars"))) . -1796) (1722 . 1797) 1721) nil (25719 45153 932866 359000) 0 nil] [nil nil ((nil rear-nonsticky nil 1773 . 1774) (#("
" 0 1 (fontified nil cider-locals ("pars" "pars" "pars"))) . -1835) (1761 . 1836) 1734) ((#("
            :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 1 12 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 12 13 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo rear-nonsticky nil fontified nil) 13 14 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 14 24 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 24 44 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 44 45 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 45 46 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 46 48 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 48 54 (face font-lock-type-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 54 74 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 74 75 (fontified nil cider-locals ("pars" "pars" "pars"))) . 1761) (undo-tree-id254 . -74) (undo-tree-id255 . -1) (undo-tree-id256 . -74) (undo-tree-id257 . -13) (undo-tree-id258 . -1) (undo-tree-id259 . -13) (1835 . 1836) (nil rear-nonsticky t 1773 . 1774)) (25719 45146 195427 240000) 0 nil])
([nil nil ((2281 . 2285) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 2281) (#("r" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 2281) (#("a" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 2281) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 2281) (#("s" 0 1 (face clojure-keyword-face fontified t cider-locals ("pars" "pars" "pars") help-echo cider--help-echo)) . 2281) (#("v" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1572) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#("
" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1573) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1574) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1575) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1576) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1577) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1578) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1579) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1580) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1581) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1582) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1583) (undo-tree-id312 . -1) (undo-tree-id313 . -1) 1584 (1573 . 1584) (1572 . 1573) (1742 . 1752) (#("." 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1742) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 1743 (1742 . 1743) (1721 . 1729) (#("q" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1721) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 1722 (1721 . 1722) (#("q" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1721) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 1722 (1719 . 1722) (1612 . 1613) (1600 . 1612) (1586 . 1600) (t 25719 45153 955725 540000)) nil (25719 45513 482760 107000) 0 nil])
nil
([nil nil ((#("            :on-success #(update-pars pars :t (System/currentTimeMillis))
" 0 11 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 11 12 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo rear-nonsticky t fontified t) 12 13 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 13 23 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 23 43 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 43 44 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 44 45 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 45 47 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 47 53 (face font-lock-type-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 53 73 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 73 74 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 1770) (undo-tree-id260 . -12) (undo-tree-id261 . -73) (undo-tree-id262 . 66) (undo-tree-id263 . -73) (undo-tree-id264 . -12) (undo-tree-id265 . -12) (undo-tree-id266 . -7) (undo-tree-id267 . -12) (undo-tree-id268 . -7) 1777) nil (25719 45633 726762 748000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1740) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 1741 (1740 . 1741) (1730 . 1740) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified nil help-echo cider--help-echo)) . -1700) (1730 . 1731) (t 25719 45513 497503 714000)) nil (25719 45679 656121 554000) 0 nil] [nil nil ((nil rear-nonsticky nil 1888 . 1889) (nil fontified nil 1731 . 1889) (1731 . 1889) 1730 (t 25719 45513 497503 714000)) ((#("{:conditions [(= \"pw-target\" :mode @pars)]
            :on-success #(update-pars pars :t (System/currentTimeMillis))
            :transition :start-pw-target}" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 1 2 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 2 12 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 12 15 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 15 16 (face font-lock-function-name-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 16 17 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 17 28 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 28 29 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 29 30 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 30 34 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 34 55 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 55 56 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 56 66 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 66 86 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 86 87 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 87 88 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 88 90 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 90 96 (face font-lock-type-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 96 117 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 117 129 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 129 130 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 130 140 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 140 141 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 141 142 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 142 157 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 157 158 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo rear-nonsticky nil fontified nil)) . 1731) (undo-tree-id320 . -157) (undo-tree-id321 . -55) (undo-tree-id322 . -43) (undo-tree-id323 . -55) (nil fontified t 1827 . 1848) (nil fontified t 1821 . 1827) (nil fontified t 1819 . 1821) (nil fontified t 1818 . 1819) (nil fontified t 1817 . 1818) (nil fontified t 1797 . 1817) (nil fontified t 1787 . 1797) (nil fontified t 1786 . 1787) (nil fontified t 1765 . 1786) (nil fontified t 1761 . 1765) (nil fontified t 1760 . 1761) (nil fontified t 1759 . 1760) (nil fontified t 1748 . 1759) (nil fontified t 1747 . 1748) (nil fontified t 1746 . 1747) (nil fontified t 1743 . 1746) (nil fontified t 1733 . 1743) (nil fontified t 1732 . 1733) (nil fontified t 1731 . 1732) (nil rear-nonsticky t 1888 . 1889)) (25719 45633 725724 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1897 . 1898) (nil fontified nil 1740 . 1898) (1740 . 1898) 1739) nil (25719 45679 656098 54000) 0 nil])
nil
([nil nil ((#("
" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1614) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1615) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1616) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1617) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1618) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1619) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1620) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1621) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1622) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1623) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1624) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1625) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1626) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 1627) nil (25719 45679 656070 647000) 0 nil])
([nil nil ((1614 . 1626)) nil (25719 45679 655572 159000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1759) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("t" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1760) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#("a" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1761) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("r" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1762) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (#("g" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1763) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("e" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1764) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (#("t" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1765) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("\"" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1766) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1767) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#(":" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1768) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("m" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1769) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (#("o" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1770) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#("d" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil)) . -1771) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1772) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1773) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("@" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1774) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("p" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1775) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#("a" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1776) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("r" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1777) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("s" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1778) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#(")" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1779) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 1780) nil (25719 45679 655541 733000) 0 nil])
([nil nil ((#("(" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1753) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("=" 0 1 (face font-lock-function-name-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1754) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#(" " 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1755) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("\"" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1756) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (#("p" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1757) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("w" 0 1 (face font-lock-string-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1758) (undo-tree-id379 . -1) (undo-tree-id380 . -1) 1759) nil (25719 45679 655309 572000) 0 nil])
([nil nil ((#("s" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1854) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1855) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1856) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("r" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1857) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1858) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("-" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1859) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("p" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1860) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("w" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1861) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("-" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1862) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1863) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1864) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("r" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1865) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("g" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1866) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#("e" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1867) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -1868) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 1869) nil (25719 45679 655214 759000) 0 nil])
([nil nil ((1854 . 1858)) nil (25719 45679 654937 7000) 0 nil])
([nil nil ((#("v" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -2254) (undo-tree-id464 . -1) (undo-tree-id465 . -1) 2255 (2254 . 2255) (2162 . 2174) (#("w" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -2162) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -2163) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("i" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -2164) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -2165) (undo-tree-id472 . -1) (undo-tree-id473 . -1) 2166 (t 25719 45679 713702 774000)) nil (25719 45728 367790 291000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2348 . 2349) (nil fontified nil 2250 . 2349) (2250 . 2349) 2249) nil (25719 45796 223569 122000) 0 nil] [nil nil ((nil rear-nonsticky nil 2310 . 2311) (nil fontified nil 2212 . 2311) (2212 . 2311) 2211) ((#(" :wait  [{:conditions []
            :on-success #(wait-some 500)
            :transition :init}]})" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 1 2 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 2 6 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 6 10 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 10 11 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 11 21 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 21 37 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 37 38 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 38 48 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 48 66 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 66 78 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 78 79 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 79 89 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 89 90 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 90 91 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 91 95 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 95 98 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified nil) 98 99 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo rear-nonsticky nil fontified nil)) . 2212) (undo-tree-id474 . -98) (undo-tree-id475 . -98) (undo-tree-id476 . -66) (undo-tree-id477 . -98) (nil fontified t 2260 . 2278) (nil fontified t 2250 . 2260) (nil fontified t 2249 . 2250) (nil fontified t 2233 . 2249) (nil fontified t 2223 . 2233) (nil fontified t 2222 . 2223) (nil fontified t 2218 . 2222) (nil fontified t 2214 . 2218) (nil fontified t 2213 . 2214) (nil fontified t 2212 . 2213) (nil rear-nonsticky t 2310 . 2311)) (25719 45728 367446 688000) 0 nil])
([nil nil ((2251 . 2263) (#("w" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -2251) (undo-tree-id482 . -1) (#("a" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -2252) (undo-tree-id483 . -1) (#("i" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -2253) (undo-tree-id484 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -2254) (undo-tree-id485 . -1) 2255 (#(" " 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . 2247) (2349 . 2350) 2348) nil (25719 45796 223553 252000) 0 nil])
nil
([nil nil ((2247 . 2250) (2247 . 2248) 2249) nil (25719 45796 223516 864000) 0 nil])
([nil nil ((#("            :on-success #(wait-some 500)
" 0 12 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 12 13 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 13 23 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t) 23 41 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . 2286) (undo-tree-id480 . 17) (undo-tree-id481 . -23) 2309) nil (25719 45796 223505 512000) 0 nil])
([nil nil ((2311 . 2315) (#("init" 0 4 (face clojure-keyword-face cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . 2311)) nil (25719 45796 223484 550000) 0 nil])
([nil nil ((#("O" 0 1 (cider-locals ("pars" "pars" "pars") fontified t help-echo cider--help-echo)) . -1739) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 1740 (1739 . 1740) (2176 . 2193) (2176 . 2177) 2192) nil (25719 45796 223471 884000) 0 nil])
([nil nil ((1729 . 1739) (1729 . 1730) 1738) nil (25719 45796 223407 478000) 0 nil])
([nil nil ((#("}" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo fontified t)) . -2346) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#(")" 0 1 (cider-locals ("pars" "pars" "pars") help-echo cider--help-echo rear-nonsticky t fontified t)) . -2347) (undo-tree-id489 . -1) (undo-tree-id490 . -1) 2348 (t 25719 45796 261037 636000)) nil (25719 45831 41923 194000) 0 nil])
([nil nil ((1601 . 1602) (t 25719 45831 80241 410000)) nil (25719 46125 491570 705000) 0 nil])
([nil nil ((1614 . 1615)) nil (25719 46125 491556 169000) 0 nil])
([nil nil ((1494 . 1495) (t 25719 46125 513592 639000)) nil (25719 46289 419770 781000) 0 nil])
([nil nil ((2071 . 2072) (t 25719 46289 459917 787000)) nil (25719 46410 820903 199000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars") face clojure-keyword-face)) . -2071) (undo-tree-id5 . -1) 2072) nil (25719 46410 820897 736000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071)) nil (25719 46410 820881 51000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071)) nil (25719 46410 820854 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars"))) . 2071)) nil (25719 46410 820764 276000) 0 nil])
([nil nil ((1443 . 1445) (1443 . 1445) (t 25719 46410 847185 885000)) nil (25719 46781 762709 939000) 0 nil])
([nil nil ((#("dd
" 0 2 (fontified t help-echo cider--help-echo cider-locals nil) 2 3 (fontified t help-echo cider--help-echo cider-locals nil)) . 1443) (undo-tree-id18 . -1) (undo-tree-id19 . 1) 1444) nil (25719 46781 762703 828000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 1443) (undo-tree-id17 . 1)) nil (25719 46781 762692 680000) 0 nil])
([nil nil ((1307 . 1308)) nil (25719 46781 762685 755000) 0 nil])
([nil nil ((1307 . 1309)) nil (25719 46781 762682 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 1308) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 1308)) nil (25719 46781 762677 366000) 0 nil])
([nil nil ((1444 . 1452)) nil (25719 46781 762672 755000) 0 nil])
([nil nil ((1452 . 1462)) nil (25719 46781 762669 107000) 0 nil])
([nil nil ((1462 . 1464)) nil (25719 46781 762665 644000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -1463) (undo-tree-id16 . -1) 1464) nil (25719 46781 762661 292000) 0 nil])
([nil nil ((1463 . 1468)) nil (25719 46781 762653 811000) 0 nil])
([nil nil ((1468 . 1471)) nil (25719 46781 762650 329000) 0 nil])
([nil nil ((1471 . 1478)) nil (25719 46781 762646 533000) 0 nil])
([nil nil ((1478 . 1485)) nil (25719 46781 762642 811000) 0 nil])
([nil nil ((1472 . 1474)) nil (25719 46781 762639 367000) 0 nil])
([nil nil ((1486 . 1495)) nil (25719 46781 762635 904000) 0 nil])
([nil nil ((1495 . 1498)) nil (25719 46781 762632 52000) 0 nil])
([nil nil ((#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . -1450) (undo-tree-id14 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . -1451) (undo-tree-id15 . -1) 1452) nil (25719 46781 762627 34000) 0 nil])
([nil nil ((1450 . 1458)) nil (25719 46781 762615 849000) 0 nil])
([nil nil ((1454 . 1455)) nil (25719 46781 762612 404000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . -1454) (undo-tree-id13 . -1) 1455) nil (25719 46781 762607 571000) 0 nil])
([nil nil ((1454 . 1455)) nil (25719 46781 762584 553000) 0 nil])
([nil nil ((1505 . 1507)) nil (25719 46781 762580 942000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1506) (undo-tree-id12 . -1) 1507) nil (25719 46781 762576 183000) 0 nil])
([nil nil ((1506 . 1511)) nil (25719 46781 762568 683000) 0 nil])
([nil nil ((1512 . 1513)) nil (25719 46781 762565 239000) 0 nil])
([nil nil ((1513 . 1514)) nil (25719 46781 762561 498000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1513) (undo-tree-id11 . -1) 1514) nil (25719 46781 762557 128000) 0 nil])
([nil nil ((1513 . 1521)) nil (25719 46781 762549 239000) 0 nil])
([nil nil ((#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1518) (undo-tree-id8 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1519) (undo-tree-id9 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1520) (undo-tree-id10 . -1) 1521) nil (25719 46781 762543 295000) 0 nil])
([nil nil ((1518 . 1526)) nil (25719 46781 762528 351000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1525) (undo-tree-id7 . -1) 1526) nil (25719 46781 762523 203000) 0 nil])
([nil nil ((1525 . 1529)) nil (25719 46781 762514 203000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1528) (undo-tree-id6 . -1) 1529) nil (25719 46781 762508 240000) 0 nil])
([nil nil ((1528 . 1534)) nil (25719 46781 762474 593000) 0 nil])
([nil nil ((1534 . 1535)) nil (25719 46781 762461 260000) 0 nil])
([nil nil ((1481 . 1482) (t 25719 46781 788799 218000)) nil (25719 46879 836843 419000) 0 nil])
([nil nil ((1513 . 1514)) nil (25719 46879 836838 511000) 0 nil])
([nil nil ((1514 . 1515)) nil (25719 46879 836833 845000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1534) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1535) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1536) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 1537) nil (25719 46879 836825 919000) 0 nil])
([nil nil ((1534 . 1536)) nil (25719 46879 836766 531000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1992 . 1993) (nil fontified nil 1836 . 1993) (1836 . 1993) 1835 (t 25719 46879 856575 415000)) nil (25719 48085 238320 817000) 0 nil])
([nil nil ((#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -1496) (undo-tree-id28 . -1) 1497 (1496 . 1497) (1756 . 1762) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("M" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("T" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-type-face)) . 1756) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-type-face)) . 1756) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-type-face)) . 1756) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-type-face)) . 1756) (#("y" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-type-face)) . 1756) (#("S" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-type-face)) . 1756) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1756) (1751 . 1755) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . -1751) (undo-tree-id29 . -1) 1752 (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1706) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 1707 (1691 . 1705) (1682 . 1691) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("@" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1682) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (undo-tree-id32 . -1) (#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-string-face)) . 1682) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("g" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-function-name-face)) . 1682) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-string-face)) . 1682) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1682) (#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face font-lock-function-name-face)) . 1682) (1827 . 1837) (#("          " 0 10 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars"))) . 1826) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -10) (1836 . 1837) (1994 . 2005) (1993 . 1994)) nil (25719 48085 238288 762000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face clojure-keyword-face)) . 1497)) nil (25719 48085 238222 152000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face clojure-keyword-face)) . 1497)) nil (25719 48085 238218 356000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face clojure-keyword-face)) . 1497)) nil (25719 48085 238214 541000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face clojure-keyword-face)) . 1497)) nil (25719 48085 238210 819000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face clojure-keyword-face)) . 1497)) nil (25719 48085 238206 949000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face clojure-keyword-face)) . 1497)) nil (25719 48085 238203 171000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . 1450)) nil (25719 48085 238199 467000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . 1450)) nil (25719 48085 238195 690000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . 1450)) nil (25719 48085 238191 653000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . 1450)) nil (25719 48085 238187 783000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . 1450)) nil (25719 48085 238183 801000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars") face font-lock-function-name-face)) . 1450)) nil (25719 48085 238179 968000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1670)) nil (25719 48085 238176 172000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1670)) nil (25719 48085 238172 116000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1670)) nil (25719 48085 238168 98000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1670)) nil (25719 48085 238164 153000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1670)) nil (25719 48085 238160 228000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . 1670)) nil (25719 48085 238156 339000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238152 394000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238148 450000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238144 580000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238140 580000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238136 636000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238132 654000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238128 506000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238124 432000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238120 617000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238116 655000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238112 618000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238108 525000) 0 nil])
([nil nil ((#("g" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238104 7000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770) (undo-tree-id26 . -1) (undo-tree-id27 . -1)) nil (25719 48085 238098 711000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1770)) nil (25719 48085 238061 137000) 0 nil])
([nil nil ((1770 . 1771)) nil (25719 48085 238056 582000) 0 nil])
([nil nil ((1771 . 1774)) nil (25719 48085 238043 138000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1375) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1375) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1375) (#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1375) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1375) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars") face clojure-keyword-face)) . 1375) (t 25719 48085 269155 485000)) nil (25719 48277 930439 794000) 0 nil])
([nil nil ((1417 . 1418) (t 25719 48278 94763 384000)) nil (25719 49192 214179 450000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1397) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1398) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1399) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1400) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1401) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1402) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1403) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1404) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1405) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1406) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1407) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars"))) . -1408) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars"))) . -1409) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1410) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1411) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1412) (undo-tree-id119 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1413) (undo-tree-id120 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1414) (undo-tree-id121 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1415) (undo-tree-id122 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1416) (undo-tree-id123 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1417) (undo-tree-id124 . -1) 1418) nil (25719 49192 214162 709000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1385) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1386) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1387) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1388) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1389) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1390) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1391) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1392) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1393) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1394) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1395) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1396) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 1397) nil (25719 49192 214029 245000) 0 nil])
([nil nil ((1385 . 1386)) nil (25719 51322 595420 22000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2461 . 2462) (#("
" 0 1 (cider-locals ("pars" "pars" "pars") fontified nil)) . -2506) (2450 . 2507) 2449) nil (25719 51382 843255 928000) 0 nil] [nil nil ((#("q" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars") face font-lock-function-name-face)) . -1635) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1636) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1637) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1638) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1639) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1640) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1641) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1642) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1643) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1644) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1645) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1646) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1647) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1648) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1649) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1650) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 1651 (t 25719 49192 239520 914000)) ((1635 . 1651)) (25719 51321 909212 735000) 0 nil])
([nil nil ((#("           :on-success #(update-pars pars :mode \"exit\")
" 0 10 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars")) 10 11 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars" "pars" "pars")) 11 12 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars") face clojure-keyword-face) 12 22 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars") face clojure-keyword-face) 22 42 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars")) 42 43 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars") face clojure-keyword-face) 43 47 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars") face clojure-keyword-face) 47 48 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars")) 48 54 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars") face font-lock-string-face) 54 55 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars")) 55 56 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . 2451) (undo-tree-id249 . -11) (undo-tree-id250 . -55) (undo-tree-id251 . -11) (undo-tree-id252 . -11) (undo-tree-id253 . -55) (undo-tree-id254 . -11) (undo-tree-id255 . -11) (undo-tree-id256 . -11) (undo-tree-id257 . -11) 2462 (t 25719 51382 868625 968000)) nil (25719 51420 420600 803000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1632) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1633) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars"))) . -1634) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 1635) ((1632 . 1635) (t 25719 51259 710581 695000)) (25719 51259 677548 291000) 0 nil])
([nil nil ((1437 . 1438) (t 25719 51420 448026 662000)) nil (25719 51459 489836 556000) 0 nil])
nil
([nil nil ((#("O" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars"))) . -1407) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 1408 (1407 . 1408) (t 25719 51459 517402 486000)) nil (25719 51928 598235 609000) 0 nil])
([nil nil ((1407 . 1408)) nil (25719 51928 598175 110000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1635) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1636) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#("q" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1637) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1638) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1639) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1640) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1641) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1642) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1643) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1644) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1645) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1646) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1647) (undo-tree-id309 . -1) (undo-tree-id310 . -1) 1648 (t 25719 51928 639844 398000)) nil (25719 52656 495861 204000) 0 nil])
([nil nil ((1635 . 1647)) nil (25719 52656 495640 304000) 0 nil])
([nil nil ((#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1645) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1646) (undo-tree-id262 . -1) (undo-tree-id263 . -1) 1647) nil (25719 52656 495629 749000) 0 nil])
([nil nil ((1645 . 1649)) nil (25719 52656 495555 770000) 0 nil])
([nil nil ((1649 . 1663) (t 25719 52656 523422 902000)) nil (25719 52774 286608 689000) 0 nil])
([nil nil ((1663 . 1664)) nil (25719 52774 286604 207000) 0 nil])
([nil nil ((1649 . 1650)) nil (25719 52774 286600 244000) 0 nil])
([nil nil ((1669 . 1670)) nil (25719 52774 286596 226000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1635) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1636) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1637) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1638) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1639) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1640) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1641) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1642) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1643) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1644) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("g" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1645) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1646) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1647) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1648) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) 1649) nil (25719 52774 286572 597000) 0 nil])
([nil nil ((1635 . 1640)) nil (25719 52774 286002 115000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1648) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1649) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1650) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1651) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1652) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1653) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1654) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1655) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1656) (undo-tree-id548 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1657) (undo-tree-id549 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1658) (undo-tree-id550 . -1) (#("g" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1659) (undo-tree-id551 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1660) (undo-tree-id552 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . -1661) (undo-tree-id553 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1662) (undo-tree-id554 . -1) 1663 (1642 . 1647) (1635 . 1642) (#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face font-lock-function-name-face)) . -1635) (undo-tree-id555 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1636) (undo-tree-id556 . -1) (#("1" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1637) (undo-tree-id557 . -1) (#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1638) (undo-tree-id558 . -1) 1639 (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1660) (undo-tree-id559 . -1) 1661 (#("@" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -1655) (undo-tree-id560 . -1) 1656 (t 25719 52774 319519 694000)) nil (25719 52946 897729 680000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2462 . 2463) (nil fontified nil 2342 . 2463) (2342 . 2463) 2341) nil (25719 52946 897629 295000) 0 nil])
([nil nil ((#("           " 0 11 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2446) (2434 . 2446) (#("           " 0 11 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2389) (2377 . 2389) 2433) nil (25719 52946 897621 906000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2454) (2438 . 2454) (#("            " 0 12 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2393) (2377 . 2393) 2434) nil (25719 52946 897614 443000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2462) (2442 . 2462) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2397) (2377 . 2397) 2438) nil (25719 52946 897606 980000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2376) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2377) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2378) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2379) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2380) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2381) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2382) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2383) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2384) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2385) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2386) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2387) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2388) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2389) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2390) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2391) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2392) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2393) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2394) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2395) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2396) (undo-tree-id530 . -1) (undo-tree-id531 . -1) 2397) nil (25719 52946 897584 18000) 0 nil])
([nil nil ((2376 . 2395)) nil (25719 52946 897224 306000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2440) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2441) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2442) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2443) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2444) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2445) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2446) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2447) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2448) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2449) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2450) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2451) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2452) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2453) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2454) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2455) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2456) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2457) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2458) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2459) (undo-tree-id472 . -1) (undo-tree-id473 . -1) 2460) nil (25719 52946 897207 714000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars"))) . -2439) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) 2440) nil (25719 52946 897072 126000) 0 nil])
([nil nil ((2439 . 2458)) nil (25719 52946 896956 740000) 0 nil])
([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -2342) (undo-tree-id561 . -1) (2342 . 2343) (#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -2342) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (#("k" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -2343) (undo-tree-id564 . -1) (undo-tree-id565 . -1) 2344 (2342 . 2344) (t 25719 52946 924266 241000) (#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -2342) (undo-tree-id566 . -1) (2342 . 2343) 2343 (t 25719 52946 924266 241000)) nil (25719 52954 315287 141000) 0 nil])
([nil nil ((2325 . 2342) (2325 . 2326) 2341) nil (25719 52954 315188 292000) 0 nil])
([nil nil ((#("j" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . -2361) (undo-tree-id695 . -1) (2360 . 2362) (t 25719 52954 374049 732000)) nil (25719 53080 632386 913000) 0 nil])
([nil nil ((#("                 4{:conditions [(seq-finished pars)]
                  :on-success #(update-pars pars :mode \"exit\")
                  :transition :wait}

" 0 18 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars")) 18 19 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 19 20 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 20 30 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 30 53 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 53 71 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 71 72 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 72 82 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 82 102 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 102 103 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 103 107 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 107 108 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 108 114 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face font-lock-string-face) 114 134 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 134 135 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 135 145 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 145 146 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 146 147 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 147 151 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face) 151 152 (fontified t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 152 153 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars" "pars" "pars" "pars")) 153 154 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 2343) (undo-tree-id684 . 136) (undo-tree-id685 . -52) (undo-tree-id686 . 1) (undo-tree-id687 . -52) (undo-tree-id688 . -115) (undo-tree-id689 . -17) (undo-tree-id690 . -152) (undo-tree-id691 . -17) (undo-tree-id692 . -52) (undo-tree-id693 . -115) (undo-tree-id694 . -17) 2360) nil (25719 53080 632375 858000) 0 nil])
([nil nil ((#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("f" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("q" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (#("[" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (#("{" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620)) nil (25719 53080 632333 452000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id665 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id666 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id667 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id668 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id669 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id670 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id671 . 1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (#("]" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("h" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620)) nil (25719 53080 632130 772000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id636 . 1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id639 . 1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id644 . 1) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id645 . 1) (#("#" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id646 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id647 . 1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id648 . 1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id649 . 1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id650 . 1) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id651 . 1) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id652 . 1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id653 . 1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id656 . 1) (#("-" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id657 . 1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id658 . 1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id659 . 1) (#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id660 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id661 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id662 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id663 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id664 . 1)) nil (25719 53080 632028 386000) 0 nil])
([nil nil ((#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face font-lock-string-face)) . 1620) (undo-tree-id615 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id616 . 1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id617 . 1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id618 . 1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id619 . 1) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id620 . 1) (#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id621 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id622 . 1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id623 . 1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id624 . 1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id625 . 1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id626 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id627 . 1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id628 . 1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id629 . 1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id630 . 1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id631 . 1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id632 . 1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id633 . 1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id634 . 1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id635 . 1)) nil (25719 53080 631922 981000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id607 . 1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id608 . 1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id609 . 1) (#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars") face font-lock-string-face)) . 1620) (undo-tree-id610 . 1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id611 . 1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id612 . 1) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id613 . 1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id614 . 1)) nil (25719 53131 197541 323000) 0 nil])
([nil nil ((#("n" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id736 . 1) (#("o" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id737 . 1) (#("i" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id738 . 1) (#("t" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id739 . 1) (#("i" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id740 . 1) (#("s" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id741 . 1) (#("n" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id742 . 1) (#("a" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id743 . 1) (#("r" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id744 . 1) (#("t" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id745 . 1) (#(":" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id746 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id747 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id748 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id749 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id750 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id751 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id752 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id753 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id754 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id755 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id756 . 1)) ((1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621)) (25719 53133 876097 627000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id757 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id758 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id759 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id760 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id761 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id762 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id763 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id764 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id765 . 1) (#("
" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id766 . 1) (#("
" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id767 . 1) (#("}" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id768 . 1) (undo-tree-id769 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id770 . 1) (#("i" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id771 . 1) (#("a" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id772 . 1) (#("w" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id773 . 1) (#(":" 0 1 (help-echo cider--help-echo fontified nil cider-locals ("pars" "pars" "pars" "pars") face clojure-keyword-face)) . 1620) (undo-tree-id774 . 1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars"))) . 1620) (undo-tree-id775 . 1)) ((1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (1620 . 1621) (t 25719 53080 670484 606000)) (25719 53134 604117 344000) 0 nil])
([nil nil ((#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-function-name-face)) . 2589) (t 25719 53080 670484 606000)) nil (25719 53211 693356 602000) 0 nil] [nil nil ((2594 . 2596) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2593) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2594) (undo-tree-id698 . -1) (undo-tree-id699 . -1) 2595 (#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2589) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2590) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . -2591) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . -2592) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . -2593) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . -2594) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . -2595) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . -2596) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2597) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2598) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face clojure-keyword-face)) . -2599) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face clojure-keyword-face)) . -2600) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face clojure-keyword-face)) . -2601) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face clojure-keyword-face)) . -2602) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face clojure-keyword-face)) . -2603) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2604) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#("@" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2605) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 2606 (t 25719 53080 670484 606000)) ((2589 . 2606) (2593 . 2595) (#("uu" 0 2 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2594) (undo-tree-id734 . -1) (undo-tree-id735 . -1)) (25719 53129 665258 540000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693347 861000) 0 nil])
nil
([nil nil ((#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . 2589)) nil (25719 53211 693341 121000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693334 28000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693327 288000) 0 nil])
([nil nil ((#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693320 306000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693312 732000) 0 nil])
([nil nil ((#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-string-face)) . 2589)) nil (25719 53211 693305 751000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693297 992000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693290 492000) 0 nil])
([nil nil ((#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face clojure-keyword-face)) . 2589)) nil (25719 53211 693283 585000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693276 530000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693269 11000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693262 104000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693255 104000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693247 845000) 0 nil])
([nil nil ((#("@" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693241 68000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693234 49000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693227 142000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693219 587000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693212 383000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693205 124000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693198 13000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . 2589)) nil (25719 53211 693189 810000) 0 nil])
([nil nil ((2589 . 2603)) nil (25719 53211 693182 680000) 0 nil])
([nil nil ((2603 . 2606)) nil (25719 53211 693174 625000) 0 nil])
([nil nil ((2606 . 2608)) nil (25719 53211 693156 792000) 0 nil])
([nil nil ((2588 . 2589) (t 25719 53211 726962 774000)) nil (25719 53423 493430 578000) 0 nil])
([nil nil ((2609 . 2610)) nil (25719 53423 493424 190000) 0 nil])
([nil nil ((2589 . 2593)) nil (25719 53423 493418 912000) 0 nil])
([nil nil ((2612 . 2613)) nil (25719 53423 493413 653000) 0 nil])
([nil nil ((2613 . 2615)) nil (25719 53423 493408 375000) 0 nil])
([nil nil ((2614 . 2622)) nil (25719 53423 493402 153000) 0 nil])
([nil nil ((2622 . 2624)) nil (25719 53423 493396 765000) 0 nil])
([nil nil ((2620 . 2621)) nil (25719 53423 493391 487000) 0 nil])
([nil nil ((2613 . 2616)) nil (25719 53423 493386 135000) 0 nil])
([nil nil ((2629 . 2630)) nil (25719 53423 493380 691000) 0 nil])
([nil nil ((2629 . 2636)) nil (25719 53423 493374 617000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2637) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2638) (undo-tree-id785 . -1) (undo-tree-id786 . -1) 2639) nil (25719 53423 493364 895000) 0 nil])
([nil nil ((2637 . 2640)) nil (25719 53423 493316 470000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2639) (undo-tree-id776 . -1) (undo-tree-id777 . -1) 2640) nil (25719 53423 493301 693000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2589) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm"))) . -2590) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars" "pars" "pars" "pars" "start-state" "pars" "automaton" "sm") face font-lock-keyword-face)) . -2591) (undo-tree-id791 . -1) (undo-tree-id792 . -1) 2592 (t 25719 53423 541553 733000)) nil (25719 53511 853048 682000) 0 nil])
([nil nil ((2589 . 2591)) nil (25719 53511 852984 294000) 0 nil])
([nil nil ((#("j" 0 1 (font-lock-multiline t cider-locals nil help-echo cider--help-echo fontified t)) . -2729) (undo-tree-id2 . -1) (2728 . 2730) (t 25719 53511 889375 497000) 2728) nil (25721 2050 256712 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2731 . 2732) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -2909) (2729 . 2910)) nil (25721 2050 256696 451000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -86) (undo-tree-id0 . -1) (86 . 87) 46 (87 . 99) (#("            " 0 12 (cider-locals nil help-echo cider--help-echo fontified nil)) . 86) (undo-tree-id1 . -12) (85 . 99) (87 . 88) 85) nil (25721 2050 256683 710000) 0 nil])
([nil nil ((nil rear-nonsticky nil 162 . 163) (nil fontified nil 86 . 163) (86 . 163)) nil (25721 2050 256606 360000) 0 nil])
([nil nil ((3001 . 3002) 162) nil (25721 2050 256586 861000) 0 nil])
([nil nil ((#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id3 . 1) (#(")" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id4 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id5 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id6 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id7 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id8 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id9 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id10 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id11 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id12 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id13 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id14 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id15 . 1) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 162) (undo-tree-id16 . 1) (#("
" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 162) (undo-tree-id17 . 1) (#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 162) (t 25721 2050 597670 387000)) nil (25721 2090 746985 184000) 0 nil])
([nil nil ((162 . 164)) nil (25721 2090 746866 834000) 0 nil])
([nil nil ((#("G" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -164) (undo-tree-id41 . -1) 165 (164 . 165) (t 25721 2090 796723 567000)) nil (25721 2158 558343 730000) 0 nil])
([nil nil ((#("  (use 'serial-port)
" 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo) 1 2 (cider-locals ("pars") fontified t help-echo cider--help-echo rear-nonsticky t) 2 3 (cider-locals ("pars") fontified t help-echo cider--help-echo) 3 6 (face font-lock-function-name-face cider-locals ("pars") fontified t help-echo cider--help-echo) 6 21 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . 2808) (undo-tree-id32 . -19) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -19) (undo-tree-id37 . -19) (undo-tree-id38 . -19) (undo-tree-id39 . -19) (undo-tree-id40 . -19) 2827) nil (25721 2158 558324 952000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars"))) . -312) (291 . 313)) nil (25721 2158 558276 879000) 0 nil])
([nil nil ((311 . 312) (#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t rear-nonsticky t)) . 292) (#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 292)) nil (25721 2158 558267 972000) 0 nil])
([nil nil ((#("  (close port)
" 0 1 (cider-locals ("pars") fontified t help-echo cider--help-echo) 1 2 (cider-locals ("pars") fontified t help-echo cider--help-echo rear-nonsticky t) 2 14 (cider-locals ("pars") fontified t help-echo cider--help-echo) 14 15 (cider-locals ("pars") fontified t help-echo cider--help-echo)) . 2972) (undo-tree-id19 . -1) (undo-tree-id20 . -14) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -1) (undo-tree-id24 . -15) (undo-tree-id25 . -15) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -15) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 2973) nil (25721 2158 558254 510000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2830) (undo-tree-id18 . -1) (2826 . 2831) (2804 . 2806) (2823 . 2824) (2825 . 2826) 2823) nil (25721 2158 558902 179000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars"))) . -2840) (2825 . 2841) 2824) nil (25721 2227 718563 271000) 0 nil] [nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars"))) . -2847) (2832 . 2848) 2829) ((#("
  (close port)
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 2 3 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil rear-nonsticky t) 3 15 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 15 16 (fontified nil cider-locals ("pars"))) . 2832) (undo-tree-id42 . -15) (undo-tree-id43 . -1) (undo-tree-id44 . -15) (undo-tree-id45 . -3) (undo-tree-id46 . -1) (undo-tree-id47 . -3) (2847 . 2848)) (25721 2158 558127 290000) 0 nil])
([nil nil ((2825 . 2830) (#("
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2825) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2826) (undo-tree-id84 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t rear-nonsticky t)) . -2827) (undo-tree-id85 . -1) 2828) nil (25721 2227 718555 956000) 0 nil])
nil
([nil nil ((#("  (def port (open \"/dev/ttyUSB0\" 9600))
  (on-byte port (fn [x] (sr/add-new-char x)))
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo rear-nonsticky t) 2 3 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 3 6 (face font-lock-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 6 7 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") fontified t help-echo cider--help-echo) 7 11 (face font-lock-variable-name-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") fontified t help-echo cider--help-echo) 11 18 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") fontified t help-echo cider--help-echo) 18 32 (face font-lock-string-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") fontified t help-echo cider--help-echo) 32 34 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") fontified t help-echo cider--help-echo) 34 39 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") fontified t help-echo cider--help-echo) 39 40 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 40 57 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 57 59 (face font-lock-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 59 65 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") fontified t help-echo cider--help-echo) 65 67 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") fontified t help-echo cider--help-echo) 67 84 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") fontified t help-echo cider--help-echo) 84 85 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 85 86 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2853) (undo-tree-id75 . 44) (undo-tree-id76 . -41) (undo-tree-id77 . -41) (undo-tree-id78 . -1) (undo-tree-id79 . -41) (undo-tree-id80 . -1) (undo-tree-id81 . -41) 2894) nil (25721 2227 718536 420000) 0 nil])
([nil nil ((#("    " 0 4 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2670) (undo-tree-id74 . -4) 2674 (2670 . 2674) (2670 . 2671) 2674) nil (25721 2227 718511 402000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -2756) (2670 . 2757)) nil (25721 2227 718501 309000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2670) (undo-tree-id73 . -1)) nil (25721 2227 718495 698000) 0 nil])
([nil nil ((#("  (Thread/sleep 1000)
  (sr/send-command port sr/b-reset)
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo rear-nonsticky t) 2 3 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 3 9 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 9 18 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 18 21 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 21 22 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 22 24 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 24 25 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 25 27 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 27 46 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 46 48 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 48 57 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 57 58 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2939) (undo-tree-id61 . -22) (undo-tree-id62 . -58) (undo-tree-id63 . -58) (undo-tree-id64 . -58) (undo-tree-id65 . -22) (undo-tree-id66 . -58) (undo-tree-id67 . -58) (undo-tree-id68 . -22) (undo-tree-id69 . -58) (undo-tree-id70 . -22) (undo-tree-id71 . -22) (undo-tree-id72 . -22) 2961) nil (25721 2227 718486 217000) 0 nil])
([nil nil ((#("    " 0 4 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2670) (undo-tree-id59 . -4) (undo-tree-id60 . -4) 2674 (2670 . 2674) (2670 . 2671)) nil (25721 2227 718439 107000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -2728) (2670 . 2729)) nil (25721 2227 718426 52000) 0 nil])
([nil nil ((#("  (Thread/sleep 1000)
  (sr/send-command port sr/b-reset)
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t rear-nonsticky t) 2 3 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 3 9 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 9 18 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 18 21 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 21 22 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 22 24 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 24 25 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 25 27 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 27 46 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 46 48 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 48 57 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 57 58 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2671) (undo-tree-id48 . 1) (undo-tree-id49 . -24) (undo-tree-id50 . -57) (undo-tree-id51 . -24) (undo-tree-id52 . -2) (undo-tree-id53 . -24) (undo-tree-id54 . -58) (undo-tree-id55 . -2) (undo-tree-id56 . -24) (undo-tree-id57 . -22) (undo-tree-id58 . -24) 2695) nil (25721 2227 718794 876000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -2814) (2756 . 2815) 2755) nil (25721 2252 135512 628000) 0 nil] [nil nil ((#("
" 0 1 (fontified nil cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -2881) (2823 . 2882) 2757) ((#("
  (Thread/sleep 1000)
  (sr/send-command port sr/b-reset)
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 2 3 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t rear-nonsticky t) 3 4 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 4 10 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 10 19 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 19 22 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 22 23 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 23 25 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 25 26 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 26 28 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 28 47 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 47 49 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 49 58 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 58 59 (fontified nil cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . 2823) (undo-tree-id86 . -58) (undo-tree-id87 . -1) (undo-tree-id88 . -58) (undo-tree-id89 . -3) (undo-tree-id90 . -1) (undo-tree-id91 . -3) (2881 . 2882)) (25721 2227 718348 331000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2673) (undo-tree-id100 . -1) (2673 . 2674) (#("V" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2673) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 2674 (2673 . 2674) (2815 . 2817) (2815 . 2816) 2817) nil (25721 2252 135504 628000) 0 nil])
nil
([nil nil ((#("  " 0 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil)) . -2789) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (2785 . 2789) (#("  " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil rear-nonsticky t)) . -2765) (2761 . 2765) (#("  " 0 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil)) . -2717) (2713 . 2717) (#("  " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 1 2 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil rear-nonsticky t)) . -2675) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (2671 . 2675) 2780) nil (25721 2252 135477 110000) 0 nil])
([nil nil ((2671 . 2672) (t 25721 2252 172915 429000)) nil (25721 2461 317900 680000) 0 nil])
([nil nil ((2714 . 2715)) nil (25721 2461 317894 421000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2763) (undo-tree-id107 . -1) (2763 . 2764) 2764) nil (25721 2461 317887 402000) 0 nil])
([nil nil ((2763 . 2764)) nil (25721 2461 317875 106000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2763) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 2764) nil (25721 2461 317867 958000) 0 nil])
([nil nil ((2763 . 2764)) nil (25721 2461 317851 903000) 0 nil])
([nil nil ((#("," 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2763) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 2764) nil (25721 2461 317843 163000) 0 nil])
([nil nil ((2763 . 2764)) nil (25721 2461 317797 275000) 0 nil])
([nil nil ((2788 . 2789)) nil (25721 2461 317790 979000) 0 nil])
([nil nil ((2987 . 2988)) nil (25721 2461 317775 553000) 0 nil])
([nil nil ((2985 . 2986) (t 25721 2461 367968 532000)) nil (25721 2581 715902 343000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2985) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 2986) nil (25721 2581 715893 10000) 0 nil])
([nil nil ((2985 . 2986)) nil (25721 2581 715875 492000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2985) (undo-tree-id108 . -1) (undo-tree-id109 . -1) 2986) nil (25721 2581 715866 733000) 0 nil])
([nil nil ((2985 . 2987)) nil (25721 2581 715820 993000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 3010) (#(")" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 3010)) nil (25721 2581 715802 938000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2993) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 2994 (2993 . 2994) (t 25721 2581 765118 697000)) nil (25721 2623 595099 563000) 0 nil])
([nil nil ((#(" (close port)
" 0 1 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 1 13 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo) 13 14 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2992) (undo-tree-id112 . 13) (undo-tree-id113 . -13) (undo-tree-id114 . -13) (undo-tree-id115 . -13) (undo-tree-id116 . -14) (undo-tree-id117 . -13) (undo-tree-id118 . -13) 3005) nil (25721 2623 595308 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2979 . 2980) (nil fontified nil 2966 . 2980) (2966 . 2980) 2965) nil (25721 2631 724292 185000) 0 nil] [nil nil ((nil rear-nonsticky nil 2980 . 2981) (nil fontified nil 2967 . 2981) (2967 . 2981) 2966) ((#(" (close port)
" 0 13 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 13 14 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo rear-nonsticky nil fontified nil)) . 2967) (undo-tree-id121 . -13) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (nil rear-nonsticky t 2980 . 2981)) (25721 2623 595008 787000) 0 nil])
([nil nil ((2980 . 2985)) nil (25721 2631 724268 667000) 0 nil])
nil
([nil nil ((#("j" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2788) (undo-tree-id134 . -1) (2788 . 2789) (#("i" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2788) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 2789 (2788 . 2789) (#("x" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2788) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 2789 (2788 . 2789) (t 25721 2631 763934 857000)) nil (25721 2646 886442 395000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2788) (undo-tree-id139 . 1)) nil (25721 2652 360821 428000) 0 nil] [nil nil ((#(";    (Thread/sleep 1000)
;    (sr/send-command port sr/b-reset)
" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 1 5 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 5 6 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 6 12 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 12 21 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 21 24 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 24 25 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 25 26 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 26 30 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 30 31 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 31 33 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 33 52 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 52 54 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 54 63 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 63 64 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2763) (undo-tree-id125 . 39) (undo-tree-id126 . -30) (undo-tree-id127 . -25) (undo-tree-id128 . -25) (undo-tree-id129 . -25) (undo-tree-id130 . -25) (undo-tree-id131 . -25) (undo-tree-id132 . -25) (undo-tree-id133 . -25) 2788) ((2763 . 2827)) (25721 2646 886179 697000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2763)) nil (25721 2652 360791 966000) 0 nil])
nil
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2714)) nil (25721 2879 37397 165000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2671)) nil (25721 2976 970289 123000) 0 nil] [nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2671)) ((2671 . 2672) (t 25721 2652 393446 359000)) (25721 2652 360772 725000) 0 nil])
([nil nil ((#("    (def port (open \"/dev/ttyUSB0\" 9600))
    (on-byte port (fn [x] (sr/add-new-char x)))
" 0 4 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 4 5 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 5 8 (face font-lock-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 8 9 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") help-echo cider--help-echo fontified t) 9 13 (face font-lock-variable-name-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") help-echo cider--help-echo fontified t) 13 20 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") help-echo cider--help-echo fontified t) 20 34 (face font-lock-string-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") help-echo cider--help-echo fontified t) 34 36 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") help-echo cider--help-echo fontified t) 36 41 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "open") help-echo cider--help-echo fontified t) 41 42 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 42 46 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 46 61 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 61 63 (face font-lock-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 63 69 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") help-echo cider--help-echo fontified t) 69 71 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") help-echo cider--help-echo fontified t) 71 88 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") help-echo cider--help-echo fontified t) 88 89 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t) 89 90 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2671) (undo-tree-id143 . -42) (undo-tree-id144 . -42) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -42) (undo-tree-id148 . -42) 2713) nil (25721 2976 970283 697000) 0 nil])
nil
([nil nil ((#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2913)) nil (25721 2976 970260 179000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2913) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1)) nil (25721 2976 970253 975000) 0 nil])
([nil nil ((2880 . 2882)) nil (25721 2976 970214 791000) 0 nil])
([nil nil ((2886 . 2892)) nil (25721 2976 970201 569000) 0 nil])
([nil nil ((2668 . 2677) (t 25721 2977 5757 431000)) nil (25721 3009 896219 615000) 0 nil])
([nil nil ((2677 . 2694)) nil (25721 3009 896214 634000) 0 nil])
([nil nil ((#("(" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2906) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#(":" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2907) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("p" 0 1 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2908) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("o" 0 1 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2909) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("r" 0 1 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2910) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("t" 0 1 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2911) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2912) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("p" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2913) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("a" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2914) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("r" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2915) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("s" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2916) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#(")" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . -2917) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 2918) nil (25721 3009 896200 338000) 0 nil])
([nil nil ((2906 . 2910)) nil (25721 3009 896090 100000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2936) (t 25721 3009 934977 308000)) nil (25721 3121 858611 506000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2936)) nil (25721 3121 858604 987000) 0 nil])
([nil nil ((2935 . 2936)) nil (25721 3121 858599 969000) 0 nil])
([nil nil ((2937 . 2938)) nil (25721 3121 858586 654000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2892) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2893 (t 25721 3121 932323 889000)) nil (25721 3129 632837 871000) 0 nil])
([nil nil ((2892 . 2893)) nil (25721 3129 632776 20000) 0 nil])
([nil nil ((2899 . 2900) (t 25721 3129 712139 566000)) nil (25721 3245 309167 238000) 0 nil])
([nil nil ((2700 . 2701)) nil (25721 3245 309161 571000) 0 nil])
([nil nil ((2725 . 2726)) nil (25721 3245 309147 442000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2700) (undo-tree-id46 . -1) 2701 (2700 . 2701) (#(";" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-comment-face)) . 2724) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(";" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-comment-face)) . 2700) (#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2700) (undo-tree-id56 . -1) 2701 (2700 . 2701) (t 25721 3245 349399 784000)) nil (25721 3442 834586 627000) 0 nil])
([nil nil ((#("    (Thread/sleep 1000)
" 0 3 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 3 5 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 5 11 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-type-face) 11 24 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2697) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . 21) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) 2699) nil (25721 3442 834545 684000) 0 nil])
([nil nil ((#("    (sr/send-command port sr/b-reset)
" 0 3 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 3 5 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 5 7 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-type-face) 7 26 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 26 28 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-type-face) 28 38 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2697) (undo-tree-id26 . -4) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . 38) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) 2701) nil (25721 3442 834519 259000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t cider-locals ("args") fontified nil)) . -2735) (2699 . 2736) 2697) nil (25721 3442 834477 778000) 0 nil])
([nil nil ((2702 . 2704)) nil (25721 3442 834472 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2696) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) nil (25721 3442 834464 927000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 2 3 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2696) (undo-tree-id2 . 3) (undo-tree-id3 . 3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -2)) nil (25721 3442 834398 539000) 0 nil])
([nil nil ((2699 . 2700) (t 25721 3442 874719 676000)) nil (25721 3553 836594 748000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2682) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 2683 (#(":" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2683) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm") face clojure-keyword-face)) . -2684) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm") face clojure-keyword-face)) . -2685) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm") face clojure-keyword-face)) . -2686) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm") face clojure-keyword-face)) . -2687) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2688) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2689) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2690) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2691) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm" "update-state" "100" "Thread/sleep" "do" "exit" "pars" "=" "pars" "seq-finished" "or" "not" "while" "port" "sm"))) . -2692) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2693) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 2694 (t 25721 3553 882089 448000)) nil (25721 3675 201834 2000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2709 . 2710) (nil fontified nil 2682 . 2710) (2682 . 2710) 2681) nil (25721 3675 201540 990000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2709)) nil (25721 3675 201534 324000) 0 nil])
([nil nil ((#(";" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-comment-face)) . 2714) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1)) nil (25721 3675 201522 917000) 0 nil])
([nil nil ((2712 . 2716) (#("    " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "port" "sm")) 1 2 (rear-nonsticky t help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "port" "sm")) 2 3 (help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "port" "sm")) 3 4 (help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2711) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . 4) (undo-tree-id162 . -2) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (2715 . 2716) (2748 . 2753) (t 25721 3675 249213 731000) 2715) nil (25721 3727 316417 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2754 . 2755) (nil fontified nil 2711 . 2755) (2711 . 2755)) nil (25721 3727 316354 657000) 0 nil])
([nil nil ((2759 . 2760) (2711 . 2715)) nil (25721 3727 316345 195000) 0 nil])
([nil nil ((#("d
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm")) 1 2 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2759) (undo-tree-id156 . 1) (undo-tree-id157 . 1) (undo-tree-id158 . 1)) nil (25721 3727 316327 584000) 0 nil])
([nil nil ((2801 . 2809) (t 25721 3727 367978 804000)) nil (25721 3774 718598 410000) 0 nil])
([nil nil ((#("." 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2808) (undo-tree-id172 . -1) 2809) nil (25721 3774 718592 911000) 0 nil])
([nil nil ((2808 . 2818)) nil (25721 3774 718585 3000) 0 nil])
([nil nil ((2818 . 2826)) nil (25721 3774 718581 22000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2825) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 2826) nil (25721 3774 718574 892000) 0 nil])
([nil nil ((2825 . 2830)) nil (25721 3774 718531 79000) 0 nil])
([nil nil ((2801 . 2802) (t 25721 3774 756855 948000)) nil (25721 3805 69760 852000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2555) (undo-tree-id184 . -1) 2556 (2555 . 2556) (t 25721 3805 126133 55000)) nil (25721 4016 280020 43000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2557 . 2558) (#("
" 0 1 (cider-locals ("args") fontified nil)) . -2595) (2555 . 2596)) nil (25721 4016 280000 581000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -2753) (undo-tree-id181 . -1) 2754 (2753 . 2754) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2556) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals nil)) . -2557) (undo-tree-id183 . -1) 2558) nil (25721 4016 279987 266000) 0 nil])
([nil nil ((#("(on-byte port (fn [x] (sr/add-new-char x)))" 0 15 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm")) 15 17 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm") face font-lock-keyword-face) 17 23 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm" "x")) 23 25 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm" "x") face font-lock-type-face) 25 42 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm" "x")) 42 43 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . 2753) (undo-tree-id176 . -42) (undo-tree-id177 . 43) (undo-tree-id178 . -42) (undo-tree-id179 . -42) (undo-tree-id180 . -42) 2795) nil (25721 4016 279953 26000) 0 nil])
([nil nil ((2594 . 2595)) nil (25721 4016 279914 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2636 . 2637) (nil fontified nil 2594 . 2637) (2594 . 2637)) nil (25721 4016 279906 379000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("x"))) . 2635) (undo-tree-id175 . -1)) nil (25721 4016 279895 453000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("x"))) . 2635)) nil (25721 4016 279879 843000) 0 nil])
([nil nil ((2635 . 2636)) nil (25721 4016 279871 936000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("x"))) . -2635) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 2636) nil (25721 4016 279860 306000) 0 nil])
([nil nil ((2635 . 2637)) nil (25721 4016 279707 921000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2637) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 2638 (2637 . 2638) (t 25721 4016 321016 831000)) nil (25721 4036 895248 470000) 0 nil])
([nil nil ((2637 . 2638) 2636) nil (25721 4036 895207 397000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals ("start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo fontified t)) . 2760) (t 25721 4036 940519 212000)) nil (25721 4151 209871 735000) 0 nil])
([nil nil ((#("o" 0 1 (cider-locals ("start-state" "pars" "automaton" "ort" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209866 587000) 0 nil])
([nil nil ((#("r" 0 1 (cider-locals ("start-state" "pars" "automaton" "rt" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209862 531000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("start-state" "pars" "automaton" "t" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209858 624000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "/dev/ttyUSB0" "open" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209854 605000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "/dev/ttyUSB0" "open" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209850 587000) 0 nil])
([nil nil ((#("(" 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "/dev/ttyUSB0" "open" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209846 624000) 0 nil])
([nil nil ((#("o" 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "open" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209842 587000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "pen" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209838 235000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "en" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209834 476000) 0 nil])
([nil nil ((#("n" 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "n" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209830 587000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209826 402000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209798 477000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-type-face cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209775 959000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209771 867000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209767 700000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-type-face cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209763 496000) 0 nil])
([nil nil ((#("/" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209759 145000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209754 108000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209749 497000) 0 nil])
([nil nil ((#("y" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209745 312000) 0 nil])
([nil nil ((#("U" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209741 145000) 0 nil])
([nil nil ((#("S" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209736 775000) 0 nil])
([nil nil ((#("B" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209732 479000) 0 nil])
([nil nil ((#("0" 0 1 (cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209728 294000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face cider-locals ("start-state" "pars" "automaton" "/dev/ttyUSB0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209723 775000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209718 868000) 0 nil])
([nil nil ((#("9" 0 1 (cider-locals ("start-state" "pars" "automaton" "9600" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209714 312000) 0 nil])
([nil nil ((#("6" 0 1 (cider-locals ("start-state" "pars" "automaton" "600" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209709 979000) 0 nil])
([nil nil ((#("0" 0 1 (cider-locals ("start-state" "pars" "automaton" "00" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209705 368000) 0 nil])
([nil nil ((#("0" 0 1 (cider-locals ("start-state" "pars" "automaton" "0" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 209701 202000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2760)) nil (25721 4151 210473 498000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2755)) nil (25721 4159 38782 772000) 0 nil] [nil nil ((#(")" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2750) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("
" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2751) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2752) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2753) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2754) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2755) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2756) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2757) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2758) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2759) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 2760) ((2750 . 2760)) (25721 4151 209675 869000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2751) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2752) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2753) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2754) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 2755) nil (25721 4159 38772 217000) 0 nil])
nil
([nil nil ((#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2751) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2751) (#(" " 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . 2751)) nil (25721 4159 38660 812000) 0 nil])
([nil nil ((#(":" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified t)) . -2751) (undo-tree-id70 . -1) 2752 (2751 . 2752) (t 25721 4159 287572 29000)) nil (25721 4420 934210 922000) 0 nil])
([nil nil ((#("(on-byte port (fn [x] (sr/add-new-char x)))
" 0 15 (cider-locals ("pars") help-echo cider--help-echo fontified t) 15 17 (face font-lock-keyword-face cider-locals ("pars") help-echo cider--help-echo fontified t) 17 23 (cider-locals ("pars" "x") help-echo cider--help-echo fontified t) 23 25 (face font-lock-type-face cider-locals ("pars" "x") help-echo cider--help-echo fontified t) 25 42 (cider-locals ("pars" "x") help-echo cider--help-echo fontified t) 42 44 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . 2594) (undo-tree-id71 . -44) (t 25721 4420 981292 573000)) nil (25721 4553 654992 128000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2651 . 2652) (#("
" 0 1 (fontified nil cider-locals ("pars"))) . -2695) (2651 . 2696) 2623) nil (25721 4558 649683 434000) 0 nil] [nil nil ((nil rear-nonsticky nil 2709 . 2710) (#("
" 0 1 (fontified nil cider-locals ("pars"))) . -2753) (2709 . 2754) 2654) ((#("
(on-byte port (fn [x] (sr/add-new-char x)))
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo rear-nonsticky nil fontified nil) 1 16 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 16 18 (face font-lock-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 18 24 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") help-echo cider--help-echo fontified nil) 24 26 (face font-lock-type-face cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") help-echo cider--help-echo fontified nil) 26 43 (cider-locals ("pars" "start-state" "pars" "automaton" "sm" "x") help-echo cider--help-echo fontified nil) 43 44 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") help-echo cider--help-echo fontified nil) 44 45 (fontified nil cider-locals ("pars"))) . 2709) (undo-tree-id72 . -44) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -44) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (2753 . 2754) (nil rear-nonsticky t 2709 . 2710)) (25721 4553 654548 398000) 0 nil])
([nil nil ((2652 . 2654)) nil (25721 4580 843063 130000) 0 nil])
nil
([nil nil ((#(";" 0 1 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2971) (t 25721 4558 697997 519000)) nil (25721 4585 973300 931000) 0 nil] [nil nil ((3008 . 3012) (2966 . 3006) (#("     " 0 5 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified nil help-echo cider--help-echo)) . 2966) (2972 . 2973) (t 25721 4558 697997 519000)) ((#("
" 0 1 (face font-lock-comment-face cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified nil help-echo cider--help-echo)) . 2972) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (2966 . 2971) (#("                                        " 0 40 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 2966) (#("    " 0 4 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . 3008) (undo-tree-id81 . -3) (undo-tree-id82 . -3)) (25721 4580 842329 55000) 0 nil])
([nil nil ((#("(def port (open \"/dev/ttyUSB0\" 9600))
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil) 1 4 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 4 5 (fontified t help-echo cider--help-echo cider-locals ("open")) 5 9 (fontified t help-echo cider--help-echo cider-locals ("open") face font-lock-variable-name-face) 9 16 (fontified t help-echo cider--help-echo cider-locals ("open")) 16 30 (fontified t help-echo cider--help-echo cider-locals ("open") face font-lock-string-face) 30 37 (fontified t help-echo cider--help-echo cider-locals ("open")) 37 38 (fontified t help-echo cider--help-echo cider-locals nil)) . 2556) (undo-tree-id26 . -38) (t 25721 4586 17344 453000)) nil (25721 4830 897590 887000) 0 nil])
nil
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton"))) . -2616) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 2617 (2616 . 2617) (2614 . 2616) (2614 . 2615)) nil (25721 4830 897572 239000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2616 . 2617) (#("
" 0 1 (cider-locals nil fontified nil)) . -2654) (2616 . 2655) 2615) nil (25721 4830 897546 332000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton"))) . -2619) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 2620 (2617 . 2620)) nil (25721 4867 384895 915000) 0 nil])
([nil nil ((#("  (def port (open \"/dev/ttyUSB0\" 9600))
  (on-byte port (fn [x] (sr/add-new-char x)))
" 0 2 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton")) 2 3 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton")) 3 6 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton") face font-lock-keyword-face) 6 7 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open")) 7 11 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open") face font-lock-variable-name-face) 11 18 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open")) 18 32 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open") face font-lock-string-face) 32 39 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open")) 39 40 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton")) 40 57 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton")) 57 59 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton") face font-lock-keyword-face) 59 65 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "x")) 65 67 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "x") face font-lock-type-face) 67 84 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "x")) 84 86 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton"))) . 2617) (undo-tree-id27 . -41) (undo-tree-id28 . -1) (undo-tree-id29 . -41) (undo-tree-id30 . 84) (undo-tree-id31 . -39) (undo-tree-id32 . -41) (undo-tree-id33 . -1) (undo-tree-id34 . -41) 2658) nil (25721 4932 758955 395000) 0 nil] [nil nil ((#("  (def port (open \"/dev/ttyUSB0\" 9600))
  (on-byte port (fn [x] (sr/add-new-char x)))
" 0 2 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton")) 2 3 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton")) 3 6 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton") face font-lock-keyword-face) 6 7 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open")) 7 11 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open") face font-lock-variable-name-face) 11 18 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open")) 18 32 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open") face font-lock-string-face) 32 39 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "open")) 39 40 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton")) 40 57 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton")) 57 59 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton") face font-lock-keyword-face) 59 65 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "x")) 65 67 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "x") face font-lock-type-face) 67 84 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "x")) 84 86 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton"))) . 2617) (undo-tree-id11 . -41) (undo-tree-id12 . -41) (undo-tree-id13 . -1) (undo-tree-id14 . -41) (undo-tree-id15 . 84) (undo-tree-id16 . -39) (undo-tree-id18 . -1) (undo-tree-id19 . -41) (undo-tree-id21 . -41) 2658) ((2617 . 2703)) (25721 4866 377211 106000) 0 nil])
([nil nil ((#("    (sr/send-command port sr/b-reset)
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 5 7 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-type-face) 7 26 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 26 28 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-type-face) 28 37 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 37 38 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2680)) nil (25721 4932 758888 580000) 0 nil])
([nil nil ((#("  
" 0 2 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton")) 2 3 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton"))) . 2614) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id7 . -3) (undo-tree-id9 . -3)) ((2614 . 2617)) (25721 4865 285263 953000) 0 nil])
([nil nil ((#("     (close port)
" 0 18 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2847)) nil (25721 4932 758870 599000) 0 nil])
([nil nil ((#("    
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2672)) ((2672 . 2677) (t 25721 4831 255406 795000)) (25721 4830 897304 466000) 0 nil])
([nil nil ((#("    ;(update-pars pars :port port)
" 0 4 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 4 35 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-comment-face)) . 2680) (undo-tree-id35 . -3) (undo-tree-id36 . -3) 2683 (t 25721 4932 834505 484000)) nil (25721 5162 214963 152000) 0 nil])
nil
([nil nil ((2838 . 2839) (t 25721 5162 283046 211000) 2836) nil (25721 5271 248440 219000) 0 nil])
([nil nil ((2837 . 2841) (#("    " 0 4 (help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . 2836) (undo-tree-id37 . -4) (2836 . 2841) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . -2816) (2836 . 2837)) nil (25721 5271 248432 368000) 0 nil])
([nil nil ((2836 . 2840)) nil (25721 5271 248401 183000) 0 nil])
([nil nil ((2840 . 2847)) nil (25721 5271 248396 720000) 0 nil])
([nil nil ((2847 . 2860)) nil (25721 5271 248383 109000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -2816) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 2817 (2816 . 2817) (t 25721 5271 302308 651000)) nil (25721 5323 959767 192000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2859) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25721 5323 959745 879000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2859) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2859) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2859) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2859)) nil (25721 5323 959722 437000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2859)) nil (25721 5323 959712 383000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -2859) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -2860) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 2861) nil (25721 5323 959701 533000) 0 nil])
([nil nil ((2859 . 2862)) nil (25721 5323 959631 430000) 0 nil])
([nil nil ((2854 . 2855) (t 25721 5324 37733 77000)) nil (25721 5357 828621 427000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -2816) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 2817 (2816 . 2817) (t 25721 5357 894488 706000)) nil (25721 5412 214392 23000) 0 nil])
([nil nil ((#("    (println \"exit...\")
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 5 12 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-function-name-face) 12 13 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 13 22 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-string-face) 22 24 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2812) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . 20) (undo-tree-id56 . -3) (undo-tree-id57 . -24) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) 2815) nil (25721 5412 214377 561000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -2838) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 2839 (2838 . 2839) (2839 . 2843) (#("    " 0 4 (help-echo cider--help-echo fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . 2838) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (2837 . 2843)) nil (25721 5412 214344 785000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2842 . 2843) (#("
" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . -2862) (2838 . 2863)) nil (25721 5412 214323 842000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2838) (undo-tree-id47 . -1)) nil (25721 5412 214310 676000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2712 . 2713) (nil fontified nil 2678 . 2713) (2678 . 2713) 2677 (t 25721 5412 291164 630000)) nil (25721 5475 491522 606000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2675)) nil (25721 5475 491510 976000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2675) (undo-tree-id66 . -1) (undo-tree-id67 . -1)) nil (25721 5475 491501 792000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . 2675) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1)) nil (25721 5475 491479 792000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-comment-delimiter-face)) . 2675)) nil (25721 5475 491429 683000) 0 nil])
([nil nil ((2675 . 2679)) nil (25721 5475 491410 906000) 0 nil])
([nil nil ((2696 . 2698) (t 25721 5475 558660 980000)) nil (25721 5488 809682 954000) 0 nil])
([nil nil ((2702 . 2709)) nil (25721 5488 809668 733000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2725 . 2726) (#("
" 0 1 (cider-locals ("args") fontified nil)) . -2745) (2723 . 2746) 2722 (t 25721 5488 858225 214000)) nil (25721 5590 312806 670000) 0 nil])
([nil nil ((2726 . 2728)) nil (25721 5590 312797 188000) 0 nil])
([nil nil ((#(" 
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm")) 1 2 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2722) (undo-tree-id70 . 1) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2)) nil (25721 5590 312789 207000) 0 nil])
([nil nil ((2727 . 2730)) nil (25721 5590 312733 689000) 0 nil])
([nil nil ((2740 . 2742)) nil (25721 5590 312728 467000) 0 nil])
([nil nil ((2746 . 2748)) nil (25721 5590 312723 96000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2747) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 2748) nil (25721 5590 312715 4000) 0 nil])
([nil nil ((2747 . 2748)) nil (25721 5590 312673 78000) 0 nil])
([nil nil ((2748 . 2753)) nil (25721 5590 312652 300000) 0 nil])
([nil nil ((2754 . 2755) (t 25721 5590 396234 877000)) nil (25721 5593 73962 644000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("start-state" "pars" "automaton" "sm"))) . -2862) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 2863 (2862 . 2863) (t 25721 5593 136214 539000)) nil (25721 5648 825449 941000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2729 . 2730) (#("
" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . -2748) (2721 . 2749) 2720) nil (25721 5648 825415 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2725)) nil (25721 5648 825409 589000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2725)) nil (25721 5648 825405 534000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2725)) nil (25721 5648 825401 219000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2725)) nil (25721 5648 825395 719000) 0 nil])
([nil nil ((2741 . 2742)) nil (25721 5648 825383 34000) 0 nil])
([nil nil ((2749 . 2750) (t 25721 5648 875632 813000)) nil (25721 5667 936382 569000) 0 nil])
([nil nil ((2723 . 2727) (#("    " 0 3 (fontified nil help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 3 4 (fontified nil rear-nonsticky t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2722) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (2726 . 2727) (#("O" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2726) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 2727 (2726 . 2727) (#(";" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-comment-face)) . -2749) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 2750 (t 25721 5667 985373 113000)) nil (25721 5727 622892 152000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2724 . 2725) (#("
" 0 1 (cider-locals ("args") fontified nil)) . -2749) (2722 . 2750)) nil (25721 5727 622830 339000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2726)) nil (25721 5727 622822 117000) 0 nil])
([nil nil ((2726 . 2727)) nil (25721 5727 622816 543000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2726) (undo-tree-id93 . -1) 2727) nil (25721 5727 622809 839000) 0 nil])
([nil nil ((2726 . 2727)) nil (25721 5727 622798 358000) 0 nil])
([nil nil ((2726 . 2729)) nil (25721 5727 622792 821000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2722) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2723) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2724) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 2725) nil (25721 5727 622782 80000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2721) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 2722) nil (25721 5727 622718 285000) 0 nil])
([nil nil ((2721 . 2726)) nil (25721 5727 622648 731000) 0 nil])
([nil nil ((2748 . 2751) (t 25721 5727 694422 78000)) nil (25721 5751 23516 694000) 0 nil])
([nil nil ((2743 . 2745)) nil (25721 5751 23512 27000) 0 nil])
([nil nil ((2749 . 2753)) nil (25721 5751 23507 546000) 0 nil])
([nil nil ((2753 . 2756)) nil (25721 5751 23494 805000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . -2766) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 2767 (2766 . 2767) (t 25721 5751 94005 185000)) nil (25721 5906 598601 919000) 0 nil])
([nil nil ((#("    (Thread/sleep 1000)
" 0 4 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 4 5 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 5 11 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-type-face) 11 23 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 23 24 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2766) (undo-tree-id105 . 24) (undo-tree-id106 . -24)) nil (25721 5906 598859 932000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2725 . 2726) (#("
" 0 1 (rear-nonsticky t cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . -2745) (2721 . 2746) 2675) nil (25721 5911 807280 923000) 0 nil] [nil nil ((nil rear-nonsticky nil 2769 . 2770) (#("
" 0 1 (rear-nonsticky t cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . -2789) (2765 . 2790) 2722) ((#("
    (Thread/sleep 1000)
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 1 4 (fontified nil help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 4 5 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 5 6 (fontified nil help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 6 12 (fontified nil help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm") face font-lock-type-face) 12 24 (fontified nil help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm")) 24 25 (rear-nonsticky t cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . 2765) (undo-tree-id109 . -24) (undo-tree-id110 . -1) (undo-tree-id111 . -24) (undo-tree-id112 . -5) (undo-tree-id113 . -1) (undo-tree-id114 . -5) (2789 . 2790) (nil rear-nonsticky t 2769 . 2770)) (25721 5906 598545 420000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2418) (undo-tree-id121 . -1) (2418 . 2419) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2418) (undo-tree-id122 . -1) 2419 (2418 . 2419) (2822 . 2823) (#("125" 0 3 (fontified t help-echo cider--help-echo cider-locals ("start-state" "pars" "automaton" "sm"))) . 2822) (t 25721 5911 920769 926000)) nil (25721 7746 730784 313000) 0 nil])
nil
([nil nil ((2453 . 2455) (2444 . 2453) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -2444) (undo-tree-id116 . -1) (#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -2445) (undo-tree-id117 . -1) 2446 (2444 . 2446) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -2444) (undo-tree-id118 . -1) (#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -2445) (undo-tree-id119 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face)) . -2446) (undo-tree-id120 . -1) 2447 (2444 . 2447) (2440 . 2444) (2419 . 2440) 2417) nil (25721 7746 730765 165000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2456 . 2457) (nil fontified nil 2454 . 2457) (2454 . 2457) 2453) nil (25721 7746 730737 591000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454)) nil (25721 7746 730731 405000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id115 . -1)) nil (25721 7746 730726 405000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars"))) . 2454)) nil (25721 7746 731037 870000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2459 . 2460) (#("
" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . -2490) (2455 . 2491) 2453) nil (25721 7839 523933 614000) 0 nil] [nil nil ((nil rear-nonsticky nil 2459 . 2460) (#("
" 0 1 (cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . -2490) (2455 . 2491) 2454) ((#("
    (sr/set-power (:port @pars) 0)
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 2 3 (rear-nonsticky t fontified nil help-echo cider--help-echo cider-locals ("pars")) 3 4 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 4 5 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("pars")) 5 6 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 6 8 (fontified nil help-echo cider--help-echo cider-locals ("pars") face font-lock-type-face) 8 20 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 20 21 (fontified nil help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 21 25 (fontified nil help-echo cider--help-echo cider-locals ("pars") face clojure-keyword-face) 25 32 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 32 35 (fontified nil help-echo cider--help-echo cider-locals ("pars")) 35 36 (cider-locals ("start-state" "pars" "automaton" "sm") fontified nil)) . 2455) (undo-tree-id123 . -35) (undo-tree-id124 . -1) (undo-tree-id125 . -35) (undo-tree-id126 . -5) (undo-tree-id127 . -1) (undo-tree-id128 . -5) (2490 . 2491) (nil rear-nonsticky t 2459 . 2460)) (25721 7746 730683 646000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2454) (undo-tree-id182 . 1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2455) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2456) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#(" " 0 1 (rear-nonsticky t fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2457) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2458) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#(" " 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("pars"))) . -2459) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 2460) nil (25721 7839 523922 170000) 0 nil])
nil
([nil nil ((2454 . 2489)) nil (25721 7839 523837 466000) 0 nil])
([nil nil ((2519 . 2520)) nil (25721 7839 523833 559000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2519) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 2520) nil (25721 7839 523828 837000) 0 nil])
([nil nil ((2519 . 2520)) nil (25721 7839 523818 633000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id157 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id158 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id159 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id160 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id161 . 1) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id162 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id163 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id164 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id165 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id166 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id167 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id168 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id169 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id170 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id171 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id172 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id173 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id174 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id175 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id176 . 1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id177 . 1) (undo-tree-id178 . -1) (undo-tree-id179 . -1)) nil (25721 7839 523803 559000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id143 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id144 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id145 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id146 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id147 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id148 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id149 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id150 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id151 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id152 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id153 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id154 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id155 . 1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . 2454) (undo-tree-id156 . 1)) nil (25721 7839 523709 596000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2482) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 2483) nil (25721 7839 523660 133000) 0 nil])
([nil nil ((2482 . 2484)) nil (25721 7839 523649 837000) 0 nil])
([nil nil ((2483 . 2490)) nil (25721 7839 523646 226000) 0 nil])
([nil nil ((2490 . 2502)) nil (25721 7839 523642 596000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2503) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2504) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 2505) nil (25721 7839 523636 559000) 0 nil])
([nil nil ((2503 . 2504)) nil (25721 7839 523613 522000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2454) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 2455) nil (25721 7839 523608 134000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2502) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 2503) nil (25721 7839 523588 486000) 0 nil])
([nil nil ((2502 . 2503)) nil (25721 7839 523545 838000) 0 nil])
([nil nil ((1538 . 1542) (t 25721 7839 588553 618000)) nil (25721 9233 989844 414000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars") help-echo cider--help-echo fontified t)) . -1541) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1542) nil (25721 9233 989830 581000) 0 nil])
([nil nil ((1541 . 1543)) nil (25721 9233 989751 582000) 0 nil])
([nil nil ((1543 . 1545)) nil (25721 9233 989742 397000) 0 nil])
([nil nil ((1573 . 1574)) nil (25721 9233 989723 489000) 0 nil])
([nil nil ((#("v" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified t help-echo cider--help-echo)) . -2788) (undo-tree-id68 . -1) 2789 (2788 . 2789) (t 25721 9234 274174 57000)) nil (25721 9590 599012 800000) 0 nil])
([nil nil ((2766 . 2774) (#("        " 0 8 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified nil help-echo cider--help-echo)) . 2765) (undo-tree-id66 . -8) (2765 . 2774) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "sm") fontified nil help-echo cider--help-echo)) . 2764) (undo-tree-id67 . -1) (2765 . 2766)) nil (25721 9590 599001 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2778 . 2779) (nil fontified nil 2765 . 2779) (2765 . 2779)) nil (25721 9590 598977 727000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") help-echo cider--help-echo rear-nonsticky t fontified t)) . -2791) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 2792 (#("
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2792) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2793) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2794) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2795) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2796) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2797) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2798) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2799) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2800) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 2801 (2773 . 2778) (2764 . 2773) (#("
" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "pars" "sm") fontified t help-echo cider--help-echo)) . -2764) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 2765) nil (25721 9590 598959 375000) 0 nil])
([nil nil ((#("c" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2876) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("f" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2877) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(")" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2878) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 2879 (2878 . 2879) (2876 . 2878) (#(")" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . 2818) (undo-tree-id15 . 1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (2813 . 2818) (#(" (:port @pars" 0 2 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 2 3 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 3 7 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 7 13 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . 2813) (undo-tree-id18 . 12) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) nil (25721 9590 598813 452000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2880) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 2881 (2876 . 2881) (#("(:port @pars)" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 1 2 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 2 6 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 6 13 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . 2876) (undo-tree-id8 . 13)) nil (25721 9590 598766 990000) 0 nil])
([nil nil ((#(" (:port @pars)" 0 2 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 2 3 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 3 7 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 7 14 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . 2907) (undo-tree-id5 . 13)) nil (25721 9590 598749 527000) 0 nil])
([nil nil ((2907 . 2912)) nil (25721 9590 598740 935000) 0 nil])
([nil nil ((2907 . 2908)) nil (25721 9590 598735 342000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -2913) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -1) 2914) nil (25721 9590 598723 157000) 0 nil])
([nil nil ((#("c" 0 1 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . -3059) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 3060 (3059 . 3060) (t 25721 9590 658131 26000)) nil (25721 9605 591024 513000) 0 nil])
([nil nil ((#(" (:port @pars)" 0 2 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 2 3 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 3 7 (face clojure-keyword-face cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo) 7 14 (cider-locals ("pars" "start-state" "pars" "automaton" "port" "sm") fontified t help-echo cider--help-echo)) . 3058) (undo-tree-id69 . 13)) nil (25721 9605 591008 439000) 0 nil])
([nil nil ((3058 . 3062)) nil (25721 9605 590977 14000) 0 nil])
([nil nil ((3058 . 3059)) nil (25721 9605 590963 995000) 0 nil])
([nil nil ((2350 . 2369) (t 25722 11098 192163 998000) 2349) nil (25722 11771 618131 765000) 0 nil])
([nil nil ((2369 . 2384)) nil (25722 11771 618126 599000) 0 nil])
([nil nil ((2383 . 2385)) nil (25722 11771 618122 395000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2384) (undo-tree-id1 . -1) 2385) nil (25722 11771 618117 469000) 0 nil])
([nil nil ((2384 . 2394)) nil (25722 11771 618107 876000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pars"))) . -2393) (undo-tree-id0 . -1) 2394) nil (25722 11771 618101 209000) 0 nil])
([nil nil ((2393 . 2401)) nil (25722 11771 618053 466000) 0 nil])
([nil nil ((2397 . 2398) (t 25722 11771 970759 170000)) nil (25722 11795 5757 913000) 0 nil])
([nil nil ((2397 . 2398)) nil (25722 11795 5752 895000) 0 nil])
([nil nil ((2403 . 2404)) nil (25722 11795 5748 339000) 0 nil])
([nil current ((2403 . 2409)) nil (25722 11795 5735 931000) 0 nil])
nil
