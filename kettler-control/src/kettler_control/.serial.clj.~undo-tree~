(undo-tree-save-format-version . 1)
"907f527f46526f9dda199172490a7c4fd668baee"
[nil nil nil nil (25720 65156 278259 809000) 0 nil]
([nil nil ((nil rear-nonsticky nil 20 . 21) (nil fontified nil 5 . 21) (5 . 21) 4 (t 25720 65081 520291 988000)) nil (25720 65207 268795 982000) 0 nil] [nil nil ((nil rear-nonsticky nil 21 . 22) (nil fontified nil 6 . 22) (6 . 22) 5 (t 25720 65081 520291 988000)) ((#("kettler-control." 0 15 (face font-lock-type-face fontified nil) 15 16 (face font-lock-type-face rear-nonsticky nil fontified nil)) . 6) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -15) (nil rear-nonsticky t 21 . 22)) (25720 65156 277045 199000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-type-face rear-nonsticky t fontified t)) . 20)) nil (25720 65207 268788 630000) 0 nil])
nil
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . 20) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (25720 65207 268783 482000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268773 56000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268768 815000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268764 722000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268760 722000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268756 889000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268752 630000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268748 537000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268744 296000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268739 926000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268735 815000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268731 593000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268727 370000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268723 574000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268719 463000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268715 555000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268711 278000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268707 352000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268703 259000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268698 666000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . 20)) nil (25720 65207 268694 370000) 0 nil])
([nil nil ((20 . 27)) nil (25720 65207 268690 74000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -93) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 94) nil (25720 65207 268684 796000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-function-name-face fontified t)) . -2235) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -2236) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2237) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2238) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -2239) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 2240) nil (25720 65207 268669 92000) 0 nil])
([nil nil ((2235 . 2239)) nil (25720 65207 268600 388000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-function-name-face cider-locals ("byte-arr" "port" "args") help-echo cider--help-echo fontified t)) . -2239) (undo-tree-id17 . -1) (#("g" 0 1 (face font-lock-function-name-face cider-locals ("byte-arr" "port" "args") help-echo cider--help-echo fontified t)) . -2240) (undo-tree-id18 . -1) (#("g" 0 1 (face font-lock-function-name-face cider-locals ("byte-arr" "port" "args") help-echo cider--help-echo fontified t)) . -2241) (undo-tree-id19 . -1) 2242 (2239 . 2242) (t 25720 65207 264274 525000)) nil (25721 65 36936 90000) 0 nil])
([nil nil ((2239 . 2243) (t 25721 65 34707 429000)) nil (25721 903 741700 372000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("pw" "port"))) . -1934) (undo-tree-id0 . -1) (#("
" 0 1 (fontified t)) . -1935) (undo-tree-id1 . -1) 1936 (t 25722 11098 192163 998000)) nil (25722 12073 576108 458000) 0 nil])
([nil nil ((1934 . 1935)) nil (25722 12073 576036 442000) 0 nil])
([nil nil ((1934 . 1937)) nil (25722 12073 576029 109000) 0 nil])
([nil nil ((1937 . 1942)) nil (25722 12073 576019 943000) 0 nil])
([nil nil ((1942 . 1954)) nil (25722 12073 576001 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 774 . 775) (#("
" 0 1 (fontified nil)) . -981) (774 . 982) (t 25722 12073 579204 446000)) nil (25722 20951 696374 374000) 0 nil])
([nil nil ((982 . 983)) nil (25722 20951 696353 467000) 0 nil])
([nil nil ((#("(defn get-status [port]
    (send-command port b-status)
    (status-from-string (:status-str @kettler)))
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port")) 1 5 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port") face font-lock-keyword-face) 5 6 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port" "port")) 6 16 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port" "port") face font-lock-function-name-face) 16 82 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port" "port")) 82 83 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port" "port") face clojure-keyword-face) 83 93 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port" "port") face clojure-keyword-face) 93 105 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port" "port")) 105 106 (fontified t help-echo cider--help-echo cider-locals ("str" "char" "buf" "byte-arr" "port"))) . 2165) (undo-tree-id10 . -57) (undo-tree-id11 . -57) (undo-tree-id12 . -57) (undo-tree-id13 . -106) (undo-tree-id14 . -57) (undo-tree-id15 . -57) (undo-tree-id16 . -57) 2222 (t 25722 20951 698715 44000)) nil (25722 21109 282577 276000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2023 . 2024) (#("
" 0 1 (cider-locals ("str" "char" "buf" "byte-arr" "port") fontified nil)) . -2129) (2023 . 2130)) nil (25722 21109 282533 54000) 0 nil])
([nil nil ((2271 . 2272) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str" "char" "buf" "byte-arr" "port" "pw" "port"))) . -2271) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str" "char" "buf" "byte-arr" "port" "pw" "port"))) . -2272) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 2273 (2271 . 2273) (2130 . 2131)) nil (25722 21109 282518 870000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str" "char" "buf" "byte-arr" "port" "pw" "port"))) . 2271)) nil (25722 21109 282483 352000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str" "char" "buf" "byte-arr" "port" "pw" "port"))) . 2271) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . 1)) nil (25722 21109 282472 889000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str" "char" "buf" "byte-arr" "port" "pw" "port"))) . 2271) (undo-tree-id0 . 1) (undo-tree-id1 . 1)) nil (25722 21109 282435 742000) 0 nil])
([nil nil ((#(":" 0 1 (face clojure-keyword-face cider-locals ("str" "state-map") help-echo cider--help-echo fontified t)) . 911) (t 25722 21109 285203 828000)) nil (25722 21571 336581 890000) 0 nil])
([nil nil ((#("pulse" 0 5 (cider-locals ("str" "state-map") help-echo cider--help-echo fontified t)) . 911)) nil (25722 21571 336577 150000) 0 nil])
([nil nil ((#("-" 0 1 (cider-locals ("str" "state-map") help-echo cider--help-echo fontified t)) . 911)) nil (25722 21571 336572 279000) 0 nil])
([nil nil ((#("target " 0 6 (cider-locals ("str" "state-map") help-echo cider--help-echo fontified t) 6 7 (cider-locals ("str" "state-map") help-echo cider--help-echo fontified t)) . 911)) nil (25722 21571 336559 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1120 . 1121) (nil fontified nil 1054 . 1121) (1054 . 1121) (t 25722 21571 335019 813000)) nil (25722 21812 54553 430000) 0 nil])
([nil nil ((1122 . 1123)) nil (25722 21812 54539 411000) 0 nil])
([nil nil ((1054 . 1055)) nil (25722 21812 54530 338000) 0 nil])
([nil nil ((1054 . 1059)) nil (25722 21812 54521 338000) 0 nil])
([nil nil ((1059 . 1077)) nil (25722 21812 54512 208000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string"))) . -1076) (undo-tree-id56 . -1) 1077) nil (25722 21812 54500 505000) 0 nil])
([nil nil ((1076 . 1077)) nil (25722 21812 54480 783000) 0 nil])
([nil nil ((1077 . 1078)) nil (25722 21812 54471 635000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1060) (undo-tree-id38 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1061) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1062) (undo-tree-id40 . -1) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1063) (undo-tree-id41 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1064) (undo-tree-id42 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1065) (undo-tree-id43 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1066) (undo-tree-id44 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1067) (undo-tree-id45 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1068) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1069) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1070) (undo-tree-id48 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1071) (undo-tree-id49 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1072) (undo-tree-id50 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1073) (undo-tree-id51 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1074) (undo-tree-id52 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1075) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string"))) . -1076) (undo-tree-id54 . -1) (#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str"))) . -1077) (undo-tree-id55 . -1) 1078) nil (25722 21812 54438 210000) 0 nil])
([nil nil ((1060 . 1064)) nil (25722 21812 54278 491000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string"))) . -1063) (undo-tree-id37 . -1) 1064) nil (25722 21812 54266 973000) 0 nil])
([nil nil ((1063 . 1064)) nil (25722 21812 54247 955000) 0 nil])
([nil nil ((1064 . 1068)) nil (25722 21812 54238 659000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1063) (undo-tree-id32 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1064) (undo-tree-id33 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1065) (undo-tree-id34 . -1) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1066) (undo-tree-id35 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1067) (undo-tree-id36 . -1) 1068) nil (25722 21812 54221 381000) 0 nil])
([nil nil ((1063 . 1065)) nil (25722 21812 54168 382000) 0 nil])
([nil nil ((1065 . 1068)) nil (25722 21812 54159 198000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1064) (undo-tree-id28 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1065) (undo-tree-id29 . -1) (#("v" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1066) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1067) (undo-tree-id31 . -1) 1068) nil (25722 21812 54144 531000) 0 nil])
([nil nil ((1064 . 1066)) nil (25722 21812 54099 699000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1064) (undo-tree-id26 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str" "defn" "defn" "defn" "defn" "defn" "defn" "def" "def" "def" "def" "defn" "sr/state-string") face font-lock-function-name-face)) . -1065) (undo-tree-id27 . -1) 1066) nil (25722 21812 54086 107000) 0 nil])
([nil nil ((1064 . 1080)) nil (25722 21812 54057 996000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1082) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1083) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1084) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 1085) nil (25722 21812 54042 682000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("str"))) . -1080) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 1081) nil (25722 21812 53982 609000) 0 nil])
([nil nil ((1080 . 1083)) nil (25722 21812 53929 36000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1098) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1099) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1100) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 1101) nil (25722 21812 53912 592000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1131) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1132) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str"))) . -1133) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 1134) nil (25722 21812 53847 927000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals ("str"))) . -1140) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1141) nil (25722 21812 53784 817000) 0 nil])
([nil nil ((1140 . 1142)) nil (25722 21812 53589 228000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("str" "buf"))) . -998) (1053 . 1054)) nil (25722 21812 53565 210000) 0 nil])
([nil current ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("str" "buf") face font-lock-function-name-face)) . -1059) (undo-tree-id57 . -1) 1060 (1059 . 1060) (t 25722 21812 69751 598000)) nil (25722 22581 760046 58000) 0 nil])
nil
