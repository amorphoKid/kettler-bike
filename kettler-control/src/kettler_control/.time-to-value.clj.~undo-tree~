(undo-tree-save-format-version . 1)
"78196d3b1636ca0ac6a305f43868607648855810"
[nil nil nil nil (25715 50728 13444 992000) 0 nil]
([nil nil ((1 . 6) (t . -1)) nil (25715 50728 13439 658000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-multiline t cider-locals nil help-echo cider--help-echo fontified t)) . -5) (undo-tree-id5 . -1) 6) nil (25715 50728 13433 548000) 0 nil])
([nil nil ((5 . 7)) nil (25715 50728 13425 789000) 0 nil])
([nil nil ((7 . 12)) nil (25715 50728 13421 604000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -11) (undo-tree-id4 . -1) 12) nil (25715 50728 13416 659000) 0 nil])
([nil nil ((11 . 12)) nil (25715 50728 13407 882000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-function-name-face font-lock-multiline t cider-locals nil help-echo cider--help-echo fontified t)) . -11) (undo-tree-id3 . -1) 12) nil (25715 50728 13402 419000) 0 nil])
([nil nil ((11 . 19)) nil (25715 50728 13394 475000) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-function-name-face font-lock-multiline t cider-locals nil help-echo cider--help-echo fontified t)) . -17) (undo-tree-id1 . -1) (#("z" 0 1 (face font-lock-function-name-face font-lock-multiline t cider-locals nil help-echo cider--help-echo fontified t)) . -18) (undo-tree-id2 . -1) 19) nil (25715 50728 13388 420000) 0 nil])
([nil nil ((17 . 20)) nil (25715 50728 13374 476000) 0 nil])
([nil nil ((20 . 21)) nil (25715 50728 13370 180000) 0 nil])
([nil nil ((21 . 23) (#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified nil)) . 20) (undo-tree-id0 . -1) (21 . 22)) nil (25715 50728 13364 773000) 0 nil])
([nil nil ((23 . 26)) nil (25715 50728 13323 737000) 0 nil])
([nil nil ((26 . 29)) nil (25715 50728 13319 626000) 0 nil])
([nil nil ((29 . 30)) nil (25715 50728 13315 904000) 0 nil])
([nil nil ((30 . 31)) nil (25715 50728 13311 182000) 0 nil])
([nil nil ((31 . 32)) nil (25715 50728 13299 849000) 0 nil])
([nil nil ((1 . 2) (t 25715 50728 13639 613000)) nil (25715 51015 247919 329000) 0 nil])
([nil nil ((1 . 4)) nil (25715 51015 247914 625000) 0 nil])
([nil nil ((2 . 11)) nil (25715 51015 247910 754000) 0 nil])
([nil nil ((11 . 16)) nil (25715 51015 247907 142000) 0 nil])
([nil nil ((16 . 18)) nil (25715 51015 247903 697000) 0 nil])
([nil nil ((18 . 19)) nil (25715 51015 247900 234000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -18) (undo-tree-id28 . -1) 19) nil (25715 51015 247895 529000) 0 nil])
([nil nil ((18 . 22)) nil (25715 51015 247888 343000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -19) (undo-tree-id25 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -20) (undo-tree-id26 . -1) (#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -21) (undo-tree-id27 . -1) 22) nil (25715 51015 247882 231000) 0 nil])
([nil nil ((19 . 23)) nil (25715 51015 247868 155000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -22) (undo-tree-id24 . -1) 23) nil (25715 51015 247862 858000) 0 nil])
([nil nil ((22 . 33)) nil (25715 51015 247855 172000) 0 nil])
([nil nil ((33 . 36)) nil (25715 51015 247851 468000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -33) (undo-tree-id21 . -1) (#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -34) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -35) (undo-tree-id23 . -1) 36) nil (25715 51015 247844 948000) 0 nil])
([nil nil ((33 . 34)) nil (25715 51015 247830 428000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("100" "14" "0" "16"))) . -33) (undo-tree-id20 . -1) 34) nil (25715 51015 247825 816000) 0 nil])
([nil nil ((33 . 35)) nil (25715 51015 247817 426000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -34) (undo-tree-id19 . -1) 35) nil (25715 51015 247812 314000) 0 nil])
([nil nil ((34 . 38)) nil (25715 51015 247804 609000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -37) (undo-tree-id18 . -1) 38) nil (25715 51015 247799 812000) 0 nil])
([nil nil ((37 . 45)) nil (25715 51015 247792 33000) 0 nil])
([nil nil ((45 . 50)) nil (25715 51015 247788 144000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -48) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -49) (undo-tree-id17 . -1) 50) nil (25715 51015 247782 736000) 0 nil])
([nil nil ((48 . 56)) nil (25715 51015 247771 419000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -54) (undo-tree-id14 . -1) (#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -55) (undo-tree-id15 . -1) 56) nil (25715 51015 247765 881000) 0 nil])
([nil nil ((54 . 57)) nil (25715 51015 247754 676000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -56) (undo-tree-id13 . -1) 57) nil (25715 51015 247749 860000) 0 nil])
([nil nil ((56 . 58)) nil (25715 51015 247741 952000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -57) (undo-tree-id12 . -1) 58) nil (25715 51015 247737 229000) 0 nil])
([nil nil ((57 . 58)) nil (25715 51015 247729 561000) 0 nil])
([nil nil ((58 . 61)) nil (25715 51015 247725 246000) 0 nil])
([nil nil ((61 . 62)) nil (25715 51015 247720 597000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("130" "0" "160" "2" "190" "12" "100" "14" "0" "16"))) . -58) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("130" "0" "160" "2" "190" "12" "100" "14" "0" "16"))) . -59) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("130" "0" "160" "2" "190" "12" "100" "14" "0" "16"))) . -60) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#(")" 0 1 (fontified t help-echo cider--help-echo cider-locals ("130" "0" "160" "2" "190" "12" "100" "14" "0" "16"))) . -61) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 62) nil (25715 51015 247711 355000) 0 nil])
([nil nil ((58 . 59)) nil (25715 51015 247630 29000) 0 nil])
([nil nil ((59 . 60)) nil (25715 51015 247617 619000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals ("130" "0" "160" "2" "190" "12" "100" "14" "0" "16"))) . -16) (undo-tree-id37 . -1) 17 (t 25715 51015 250440 671000)) nil (25715 51079 769500 709000) 0 nil])
([nil nil ((16 . 17)) nil (25715 51079 769491 227000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t help-echo cider--help-echo cider-locals ("0" "16"))) . -57) (undo-tree-id36 . -1) 58) nil (25715 51079 769485 522000) 0 nil])
([nil nil ((57 . 58)) nil (25715 51079 769477 874000) 0 nil])
([nil nil ((58 . 61)) nil (25715 51079 769473 910000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("0" "16"))) . -58) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("0" "16"))) . -59) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("0" "16"))) . -60) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 61) nil (25715 51079 769460 261000) 0 nil])
([nil nil ((#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -94) (undo-tree-id49 . -1) (#("2" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -95) (undo-tree-id50 . -1) 96 (94 . 96) (t 25715 51079 767605 513000)) nil (25715 51443 851500 831000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 1) (undo-tree-id48 . -1)) nil (25715 51443 851472 794000) 0 nil])
([nil nil ((#("((16 0) (14 100) (12 190) (2 160) (0 130)))" 0 42 (fontified t help-echo cider--help-echo cider-locals ("0" "16")) 42 43 (fontified t help-echo cider--help-echo cider-locals ("0" "16"))) . 15)) nil (25715 51443 851457 312000) 0 nil])
([nil nil ((14 . 21)) nil (25715 51443 851449 53000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -20) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 21) nil (25715 51443 851437 868000) 0 nil])
([nil nil ((20 . 23)) nil (25715 51443 851415 312000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t help-echo cider--help-echo cider-locals ("0" "16"))) . -22) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 23) nil (25715 51443 851405 294000) 0 nil])
([nil nil ((22 . 31)) nil (25715 51443 851383 886000) 0 nil])
([nil nil ((31 . 34)) nil (25715 51443 851376 257000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -33) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 34) nil (25715 51443 851366 275000) 0 nil])
([nil nil ((33 . 41)) nil (25715 51443 851344 294000) 0 nil])
([nil nil ((41 . 42)) nil (25715 51443 851335 979000) 0 nil])
([nil nil ((42 . 55)) nil (25715 51443 851328 164000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -53) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -54) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 55) nil (25715 51443 851314 146000) 0 nil])
([nil nil ((53 . 57)) nil (25715 51443 851247 757000) 0 nil])
([nil nil ((57 . 58)) nil (25715 51443 851227 479000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -62) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 63 (62 . 63) (102 . 109) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -102) (undo-tree-id66 . -1) 103 (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -61) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -62) (undo-tree-id69 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -63) (undo-tree-id70 . -1) 64 (62 . 64) (#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -62) (undo-tree-id71 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -63) (undo-tree-id72 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -64) (undo-tree-id73 . -1) (#("f" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t face font-lock-keyword-face)) . -65) (undo-tree-id74 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t face font-lock-keyword-face)) . -66) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") font-lock-multiline t)) . -67) (undo-tree-id76 . -1) (#("f" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -68) (undo-tree-id77 . -1) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -69) (undo-tree-id78 . -1) (#("n" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -70) (undo-tree-id79 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -71) (undo-tree-id80 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -72) (undo-tree-id81 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -73) (undo-tree-id82 . -1) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -74) (undo-tree-id83 . -1) (#("m" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -75) (undo-tree-id84 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -76) (undo-tree-id85 . -1) (#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -77) (undo-tree-id86 . -1) 78 (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -78) (undo-tree-id87 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -79) (undo-tree-id88 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -80) (undo-tree-id89 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -81) (undo-tree-id90 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -82) (undo-tree-id91 . -1) (#("v" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -83) (undo-tree-id92 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -84) (undo-tree-id93 . -1) (#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -85) (undo-tree-id94 . -1) (#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn") face font-lock-function-name-face)) . -86) (undo-tree-id95 . -1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn"))) . -87) (undo-tree-id96 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn"))) . -88) (undo-tree-id97 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn"))) . -89) (undo-tree-id98 . -1) (#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -90) (undo-tree-id99 . -1) 91 (90 . 91) (88 . 90) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("defn"))) . 87) (undo-tree-id100 . -1) (88 . 89) (72 . 88) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("defn"))) . -72) (undo-tree-id101 . -1) 73 (62 . 73) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -62) (undo-tree-id102 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -63) (undo-tree-id103 . -1) (#("f" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -64) (undo-tree-id104 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -65) (undo-tree-id105 . -1) 66 (64 . 66) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -64) (undo-tree-id106 . -1) 65 (62 . 65) (#("f" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -62) (undo-tree-id107 . -1) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -63) (undo-tree-id108 . -1) 64 (62 . 64) (60 . 63) (93 . 94) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-sec"))) . -93) (undo-tree-id109 . -1) 94 (90 . 91) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "sec" "value"))) . -90) (undo-tree-id110 . -1) 91 (95 . 96) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "sec" "value"))) . 95) (85 . 95) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 60) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 60) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -60) (undo-tree-id116 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -61) (undo-tree-id117 . -1) 62 (60 . 62) (60 . 61) (t 25715 51443 866122 591000)) nil (25715 51872 658706 681000) 0 nil])
([nil nil ((nil rear-nonsticky nil 62 . 63) (#("
" 0 1 (cider-locals nil fontified nil)) . -115) (62 . 116)) nil (25715 51872 658377 639000) 0 nil])
([nil nil ((162 . 168)) nil (25715 51872 658368 991000) 0 nil])
([nil nil ((162 . 163)) nil (25715 51872 658363 121000) 0 nil])
([nil nil ((169 . 172)) nil (25715 51872 658357 269000) 0 nil])
([nil nil ((172 . 174)) nil (25715 51872 658351 492000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -172) (undo-tree-id62 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -173) (undo-tree-id63 . -1) 174) nil (25715 51872 658343 289000) 0 nil])
([nil nil ((172 . 176)) nil (25715 51872 658325 937000) 0 nil])
([nil nil ((#("y" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -174) (undo-tree-id60 . -1) (#("y" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -175) (undo-tree-id61 . -1) 176) nil (25715 51872 658317 456000) 0 nil])
([nil nil ((174 . 176)) nil (25715 51872 658299 864000) 0 nil])
([nil nil ((176 . 182)) nil (25715 51872 658294 124000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -181) (undo-tree-id59 . -1) 182) nil (25715 51872 658286 680000) 0 nil])
([nil nil ((176 . 177)) nil (25715 51872 658274 162000) 0 nil])
([nil nil ((182 . 184)) nil (25715 51872 658268 255000) 0 nil])
([nil nil ((184 . 186)) nil (25715 51872 658262 421000) 0 nil])
([nil nil ((186 . 194)) nil (25715 51872 658256 607000) 0 nil])
([nil nil ((#("q" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -193) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 194) nil (25715 51872 658248 903000) 0 nil])
([nil nil ((193 . 195)) nil (25715 51872 658232 238000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -194) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 195) nil (25715 51872 658224 312000) 0 nil])
([nil nil ((194 . 195)) nil (25715 51872 658207 387000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -194) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 195) nil (25715 51872 658198 998000) 0 nil])
([nil nil ((194 . 195)) nil (25715 51872 658181 73000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -195) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 196) nil (25715 51872 658171 407000) 0 nil])
([nil nil ((195 . 199)) nil (25715 51872 658118 650000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 174) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 174) (t 25715 51872 664062 628000)) nil (25715 52099 70617 204000) 0 nil])
([nil nil ((183 . 186)) nil (25715 52099 70610 908000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -185) (undo-tree-id126 . -1) (undo-tree-id127 . -1) 186) nil (25715 52099 70605 168000) 0 nil])
([nil nil ((185 . 186)) nil (25715 52099 70593 983000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -185) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 186) nil (25715 52099 70588 335000) 0 nil])
([nil nil ((183 . 184)) nil (25715 52099 70577 372000) 0 nil])
([nil nil ((186 . 187)) nil (25715 52099 70572 890000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 198) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 198) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 198) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 198)) nil (25715 52099 70566 687000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -197) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 198) nil (25715 52099 70551 965000) 0 nil])
([nil nil ((197 . 199)) nil (25715 52099 70510 355000) 0 nil])
([nil nil ((199 . 200)) nil (25715 52099 70497 522000) 0 nil])
([nil nil ((63 . 65) (t 25715 52099 67636 564000)) nil (25715 52140 136406 135000) 0 nil])
([nil nil ((#("dd(defn find-first [pred s]
" 0 2 (fontified t help-echo cider--help-echo cider-locals nil) 2 3 (fontified t help-echo cider--help-echo cider-locals nil) 3 7 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 7 8 (fontified t help-echo cider--help-echo cider-locals ("s" "pred")) 8 18 (fontified t help-echo cider--help-echo cider-locals ("s" "pred") face font-lock-function-name-face) 18 28 (fontified t help-echo cider--help-echo cider-locals ("s" "pred"))) . 63) (undo-tree-id134 . 26) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 64) nil (25715 52140 136392 357000) 0 nil])
([nil nil ((#("  (first (filter pred s)))
" 0 3 (help-echo cider--help-echo fontified t cider-locals ("s" "pred")) 3 8 (help-echo cider--help-echo fontified t cider-locals ("s" "pred") face font-lock-function-name-face) 8 10 (help-echo cider--help-echo fontified t cider-locals ("s" "pred")) 10 16 (help-echo cider--help-echo fontified t cider-locals ("s" "pred") face font-lock-function-name-face) 16 26 (help-echo cider--help-echo fontified t cider-locals ("s" "pred")) 26 27 (help-echo cider--help-echo fontified t cider-locals ("s" "pred"))) . 63) (undo-tree-id128 . 27) (undo-tree-id129 . -26) (undo-tree-id130 . -26) (undo-tree-id131 . -1) (undo-tree-id132 . -26) (undo-tree-id133 . -1) 64) nil (25715 52140 136359 766000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 61)) nil (25715 52140 136268 786000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 144) (t 25715 52140 136786 590000)) nil (25715 52213 639314 857000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -143) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 144) nil (25715 52213 639304 432000) 0 nil])
([nil nil ((143 . 144)) nil (25715 52213 639280 913000) 0 nil])
([nil nil ((144 . 145)) nil (25715 52213 639274 173000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -143) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -144) (undo-tree-id139 . -1) (undo-tree-id140 . -1) 145) nil (25715 52213 639263 136000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 129)) nil (25715 52213 639204 8000) 0 nil])
([nil nil ((142 . 145)) nil (25715 52213 639186 508000) 0 nil])
([nil nil ((108 . 111) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("x" "value-seq"))) . 107) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (108 . 109) (t 25715 52213 655355 202000)) nil (25715 52235 277331 427000) 0 nil])
([nil nil ((101 . 109)) nil (25715 52235 277293 635000) 0 nil])
([nil nil ((109 . 112) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("x" "value-seq"))) . 108) (undo-tree-id148 . -1) (109 . 110)) nil (25715 52235 277280 599000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -118) (undo-tree-id144 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -119) (undo-tree-id145 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -120) (undo-tree-id146 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -121) (undo-tree-id147 . -1) 122) nil (25715 52235 277253 9000) 0 nil])
([nil nil ((118 . 123)) nil (25715 52235 277176 53000) 0 nil])
([nil nil ((160 . 161)) nil (25715 52235 277153 296000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 145) (t 25715 52235 283658 657000)) nil (25715 52262 186768 312000) 0 nil])
([nil nil ((135 . 137)) nil (25715 52262 186750 740000) 0 nil])
([nil nil ((133 . 134) (t 25715 52262 191182 440000)) nil (25715 52335 743655 0) 0 nil])
([nil nil ((#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -133) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 134) nil (25715 52335 743648 93000) 0 nil])
([nil nil ((134 . 135)) nil (25715 52335 743604 115000) 0 nil])
([nil nil ((149 . 155) (144 . 149) (143 . 144) (119 . 127) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -119) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 120 (119 . 120) (130 . 135) (119 . 130) (#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -119) (undo-tree-id180 . -1) (#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -120) (undo-tree-id181 . -1) 121 (119 . 121) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -119) (undo-tree-id182 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -120) (undo-tree-id183 . -1) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -121) (undo-tree-id184 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -122) (undo-tree-id185 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -123) (undo-tree-id186 . -1) 124 (119 . 124) (117 . 119) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -117) (undo-tree-id187 . -1) 118 (114 . 118) (#("y" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -114) (undo-tree-id188 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -115) (undo-tree-id189 . -1) 116 (111 . 116) (107 . 111) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("x" "value-seq"))) . 106) (undo-tree-id190 . -1) (107 . 108) (101 . 107) (98 . 101) (t 25715 52335 755261 892000)) nil (25715 52476 743092 912000) 0 nil])
([nil nil ((#("    " 0 4 (help-echo cider--help-echo fontified nil cider-locals ("x" "value-seq"))) . -187) (179 . 187) (#("   " 0 3 (help-echo cider--help-echo fontified nil cider-locals ("x" "value-seq"))) . -172) (168 . 172) (#("  " 0 2 (help-echo cider--help-echo fontified nil cider-locals ("x" "value-seq"))) . -160) (undo-tree-id177 . 1) (156 . 160) 176) nil (25715 52476 742979 788000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -167) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 168) nil (25715 52476 742961 567000) 0 nil])
([nil nil ((172 . 173) (167 . 168)) nil (25715 52476 742940 346000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -179) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -180) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -181) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -182) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -183) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -184) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 185) nil (25715 52476 742923 773000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 179) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 179) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 179)) nil (25715 52476 742792 243000) 0 nil])
([nil nil ((179 . 186)) nil (25715 52476 742773 966000) 0 nil])
([nil nil ((226 . 227) (t 25715 52476 756480 661000)) nil (25715 52481 585014 480000) 0 nil])
([nil nil ((#(":" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -227) (undo-tree-id213 . -1) (#("8" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -228) (undo-tree-id214 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -229) (undo-tree-id215 . -1) 230 (229 . 230) (228 . 229) (227 . 228) (t 25715 52481 596223 962000)) nil (25715 52627 779355 257000) 0 nil])
([nil nil ((#(":else " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face clojure-keyword-face) 1 5 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face clojure-keyword-face) 5 6 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 149)) nil (25715 52627 779338 35000) 0 nil])
([nil nil ((148 . 150)) nil (25715 52627 779334 424000) 0 nil])
([nil nil ((#("/" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -149) (undo-tree-id212 . -1) 150) nil (25715 52627 779329 887000) 0 nil])
([nil nil ((149 . 154)) nil (25715 52627 779322 425000) 0 nil])
([nil nil ((#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -153) (undo-tree-id211 . -1) 154) nil (25715 52627 779318 92000) 0 nil])
([nil nil ((153 . 154)) nil (25715 52627 779310 555000) 0 nil])
([nil nil ((#(">" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -152) (undo-tree-id209 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -153) (undo-tree-id210 . -1) 154) nil (25715 52627 779305 92000) 0 nil])
([nil nil ((152 . 157)) nil (25715 52627 779294 352000) 0 nil])
([nil nil ((#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -156) (undo-tree-id208 . -1) 157) nil (25715 52627 779289 556000) 0 nil])
([nil nil ((156 . 157)) nil (25715 52627 779281 593000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -164) (undo-tree-id202 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -165) (undo-tree-id203 . -1) (#("c" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -166) (undo-tree-id204 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -167) (undo-tree-id205 . -1) (#("n" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -168) (undo-tree-id206 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -169) (undo-tree-id207 . -1) 170) nil (25715 52627 779274 205000) 0 nil])
([nil nil ((164 . 165)) nil (25715 52627 779249 835000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -164) (undo-tree-id201 . -1) 165) nil (25715 52627 779244 447000) 0 nil])
([nil nil ((164 . 170)) nil (25715 52627 779236 669000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -169) (undo-tree-id200 . -1) 170) nil (25715 52627 779231 484000) 0 nil])
([nil nil ((169 . 171)) nil (25715 52627 779223 799000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -156) (undo-tree-id199 . -1) 157) nil (25715 52627 779218 614000) 0 nil])
([nil nil ((#("(" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -149) (undo-tree-id192 . -1) (#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -150) (undo-tree-id193 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -151) (undo-tree-id194 . -1) (#(">" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -152) (undo-tree-id195 . -1) (#("=" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -153) (undo-tree-id196 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -154) (undo-tree-id197 . -1) (#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -155) (undo-tree-id198 . -1) 156) nil (25715 52627 779206 318000) 0 nil])
([nil nil ((149 . 150)) nil (25715 52627 779176 949000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -149) (undo-tree-id191 . -1) 150) nil (25715 52627 779170 894000) 0 nil])
([nil nil ((149 . 155)) nil (25715 52627 779130 285000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 228) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (t 25715 52627 779425 902000)) nil (25715 52697 37667 998000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -226) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -227) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) 228) nil (25715 52697 37643 425000) 0 nil])
([nil nil ((226 . 229)) nil (25715 52697 37553 984000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face)) . -67) (undo-tree-id226 . -1) 68 (67 . 68) (t 25715 52697 46692 435000)) nil (25715 52735 967688 433000) 0 nil])
([nil nil ((230 . 232)) nil (25715 52735 967637 861000) 0 nil])
([nil nil ((nil rear-nonsticky nil 232 . 233) (#("
" 0 1 (cider-locals ("x" "value-seq") fontified nil)) . -399) (232 . 400)) nil (25715 52735 968242 24000) 0 nil])
([nil nil ((239 . 240) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-function-name-face)) . 239)) nil (25715 52752 475024 399000) 0 nil] [nil nil ((nil rear-nonsticky nil 252 . 253) (#("
" 0 1 (cider-locals ("x" "value-seq") fontified nil)) . -419) (252 . 420) 239) ((#("
(defn time-to-value
  [value-seq x]
  (cond
    (x < 0) (second (last value-seq))
    :else  
    (second 
     (first
      (filter #(>= x (first %) ) value-seq)))))
" 0 1 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn")) 2 6 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn") face font-lock-keyword-face) 6 7 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 7 20 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 20 21 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 21 37 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 37 40 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 40 44 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-keyword-face) 44 45 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 45 52 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 52 53 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 53 58 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 58 64 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 64 65 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 65 66 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 66 70 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 70 71 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 71 83 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 83 87 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 87 88 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face clojure-keyword-face) 88 92 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face clojure-keyword-face) 92 93 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 93 94 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 94 95 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 95 99 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 99 100 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 100 106 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 106 107 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 107 108 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 108 113 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 113 114 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 114 119 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 119 120 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 120 126 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 126 127 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 127 133 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 133 136 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 136 138 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 138 142 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 142 147 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-function-name-face) 147 148 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 148 149 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq") face font-lock-variable-name-face) 149 153 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 153 161 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 161 167 (fontified nil help-echo cider--help-echo cider-locals ("x" "value-seq" "defn" "x" "value-seq")) 167 168 (cider-locals ("x" "value-seq") fontified nil)) . 252) (undo-tree-id227 . -167) (undo-tree-id228 . -1) (undo-tree-id229 . -167) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (419 . 420) (nil rear-nonsticky t 252 . 253)) (25715 52735 967594 733000) 0 nil])
([nil nil ((#("    (second 
" 0 4 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 4 5 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 5 11 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-function-name-face) 11 12 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 12 13 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq"))) . 327) (undo-tree-id241 . -4) (undo-tree-id242 . -4) 331) nil (25715 52752 475018 825000) 0 nil])
nil
([nil nil ((#("     (first
" 0 5 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 5 6 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 6 11 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-function-name-face) 11 12 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq"))) . 327) (undo-tree-id238 . -4) (undo-tree-id239 . -11) (undo-tree-id240 . -4) 331) nil (25715 52752 475006 955000) 0 nil])
([nil nil ((#("
      (filter #(>= x (first %) ) value-seq)))))" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 1 7 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 7 8 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 8 14 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-function-name-face) 14 17 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 17 19 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-function-name-face) 19 23 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 23 28 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-function-name-face) 28 29 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 29 30 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq") face font-lock-variable-name-face) 30 34 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 34 42 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq")) 42 48 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq"))) . 326) (undo-tree-id233 . -5) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -5) 331) nil (25715 52752 474991 530000) 0 nil])
([nil nil ((325 . 327)) nil (25715 52752 474948 864000) 0 nil])
([nil nil ((327 . 329)) nil (25715 52752 474944 87000) 0 nil])
([nil nil ((330 . 331) 329) nil (25715 52752 474930 643000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq" "x" "value-seq"))) . -328) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 329 (t 25715 52752 484661 723000)) nil (25715 52758 320008 778000) 0 nil])
([nil nil ((328 . 329)) nil (25715 52758 319954 947000) 0 nil])
([nil nil ((334 . 335) (333 . 334) (332 . 333) (331 . 332) (330 . 331) (329 . 330) (328 . 329) (327 . 328) (326 . 327) (325 . 326) (324 . 325) (323 . 324) (322 . 323) (321 . 322) (320 . 321) (319 . 320) (318 . 319) (317 . 318) (316 . 317) (315 . 316) (314 . 315) (313 . 314) (312 . 313) (311 . 312) (310 . 311) (309 . 310) (308 . 309) (307 . 308) (306 . 307) (305 . 306) (304 . 305) (303 . 304) (302 . 303) (301 . 302) (300 . 301) (299 . 300) (298 . 299) (297 . 298) (296 . 297) (295 . 296) (294 . 295) (293 . 294) (292 . 293) (291 . 292) (289 . 291) (t 25715 52758 334454 286000)) nil (25715 52789 269630 535000) 0 nil])
([nil nil ((#("d$12))12))12))12))12))12))12))12))12))12))12))(second (last value-seq))" 0 47 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 47 53 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face) 53 54 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 54 55 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 55 59 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face) 59 60 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 60 71 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 289) (undo-tree-id245 . 25)) nil (25715 52789 269601 351000) 0 nil])
([nil nil ((289 . 290)) nil (25715 52789 269560 870000) 0 nil])
([nil nil ((233 . 236) (t 25715 52789 283376 63000)) nil (25715 52837 437083 332000) 0 nil])
([nil nil ((#("4dd(defn pime-to-value
  [value-seq x]
  (cond
    (x < 0) 1
" 0 3 (fontified t help-echo cider--help-echo cider-locals nil) 3 4 (fontified t help-echo cider--help-echo cider-locals nil) 4 8 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 8 9 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq")) 9 10 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq") face font-lock-function-name-face) 10 22 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq") face font-lock-function-name-face) 22 23 (fontified t help-echo cider--help-echo cider-locals ("x" "value-seq")) 23 39 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 39 42 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 42 46 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-keyword-face) 46 47 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 47 54 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 54 55 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face) 55 60 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 60 61 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 233) (undo-tree-id251 . -60) (undo-tree-id252 . 58) (undo-tree-id253 . -22) (undo-tree-id254 . -22) (undo-tree-id255 . -22) (undo-tree-id256 . -60) (undo-tree-id257 . -60) (undo-tree-id258 . -2) 235) nil (25715 52837 437076 666000) 0 nil])
([nil nil ((#("    :else 12)) 
" 0 4 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 4 5 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face clojure-keyword-face) 5 9 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face clojure-keyword-face) 9 14 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 14 15 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq")) 15 16 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 233) (undo-tree-id248 . 16) (undo-tree-id249 . -2) (undo-tree-id250 . -15) 235) nil (25715 52837 437047 667000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 112)) nil (25715 52837 437032 556000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 112)) nil (25715 52837 437028 408000) 0 nil])
([nil nil ((#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 114)) nil (25715 52837 437023 834000) 0 nil])
([nil nil ((114 . 116)) nil (25715 52837 437018 908000) 0 nil])
([nil nil ((#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -115) (undo-tree-id246 . -1) (undo-tree-id247 . -1) 116) nil (25715 52837 437012 186000) 0 nil])
([nil nil ((115 . 117)) nil (25715 52837 436969 669000) 0 nil])
([nil nil ((233 . 236) (t 25715 52837 441756 11000)) nil (25715 52885 257034 76000) 0 nil])
([nil nil ((236 . 237)) nil (25715 52885 257029 39000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -233) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -234) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("9" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -235) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -236) (undo-tree-id265 . -1) (undo-tree-id266 . 1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) 237) nil (25715 52885 257015 651000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t)) . -233) (undo-tree-id277 . -1) (233 . 234) (t 25715 52885 260206 382000)) nil (25715 52903 447564 363000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 230) (t 25715 52885 260206 382000)) nil (25715 52903 447555 122000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 227)) nil (25715 52903 447550 715000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . 227)) nil (25715 52903 447546 789000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -226) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -227) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) 228) nil (25715 52903 447539 660000) 0 nil])
([nil nil ((226 . 227)) nil (25715 52903 447486 699000) 0 nil])
([nil nil ((227 . 229)) nil (25715 52903 447474 829000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("120" "0" "160" "2" "190" "12" "100" "14" "0" "16") face font-lock-variable-name-face)) . -6) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("120" "0" "160" "2" "190" "12" "100" "14" "0" "16") face font-lock-variable-name-face)) . -7) (undo-tree-id279 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("120" "0" "160" "2" "190" "12" "100" "14" "0" "16") face font-lock-variable-name-face)) . -8) (undo-tree-id280 . -1) (#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("120" "0" "160" "2" "190" "12" "100" "14" "0" "16") face font-lock-variable-name-face)) . -9) (undo-tree-id281 . -1) 10 (t 25715 52903 449630 205000)) nil (25715 52966 444958 221000) 0 nil])
([nil nil ((6 . 11)) nil (25715 52966 444902 908000) 0 nil])
([nil nil ((62 . 64) (t 25715 52966 447682 471000)) nil (25715 53176 610124 162000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -62) (undo-tree-id333 . -1) (#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -63) (undo-tree-id334 . -1) 64) nil (25715 53176 610118 662000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t help-echo cider--help-echo fontified t cider-locals nil)) . 62) (undo-tree-id332 . -1)) nil (25715 53176 610107 755000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . 61) (undo-tree-id331 . -1)) nil (25715 53176 610100 422000) 0 nil])
([nil nil ((230 . 238)) nil (25715 53176 610094 33000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t face font-lock-variable-name-face)) . -235) (undo-tree-id328 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t face font-lock-variable-name-face)) . -236) (undo-tree-id329 . -1) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t face font-lock-variable-name-face)) . -237) (undo-tree-id330 . -1) 238) nil (25715 53176 610088 626000) 0 nil])
([nil nil ((235 . 249)) nil (25715 53176 610075 330000) 0 nil])
([nil nil ((249 . 251) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals nil)) . 248) (undo-tree-id327 . -1) (249 . 250)) nil (25715 53176 610070 738000) 0 nil])
([nil nil ((251 . 253)) nil (25715 53176 610062 905000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals nil font-lock-multiline t)) . -252) (undo-tree-id326 . -1) 253) nil (25715 53176 610057 812000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -250) (undo-tree-id324 . -1) (#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -251) (undo-tree-id325 . -1) 252) nil (25715 53176 610049 386000) 0 nil])
([nil nil ((234 . 235)) nil (25715 53176 610038 998000) 0 nil])
([nil nil ((249 . 252)) nil (25715 53176 610035 683000) 0 nil])
([nil nil ((252 . 258)) nil (25715 53176 610032 202000) 0 nil])
([nil nil ((258 . 259)) nil (25715 53176 610028 424000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -254) (undo-tree-id319 . -1) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -255) (undo-tree-id320 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -256) (undo-tree-id321 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -257) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -258) (undo-tree-id323 . -1) 259) nil (25715 53176 609990 73000) 0 nil])
([nil nil ((254 . 259)) nil (25715 53176 609961 648000) 0 nil])
([nil nil ((259 . 262)) nil (25715 53176 609958 185000) 0 nil])
([nil nil ((262 . 273)) nil (25715 53176 609954 519000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t help-echo cider--help-echo cider-locals ("p-seq"))) . -272) (undo-tree-id318 . -1) 273) nil (25715 53176 609949 741000) 0 nil])
([nil nil ((272 . 277)) nil (25715 53176 609942 815000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("p-seq"))) . -276) (undo-tree-id317 . -1) 277) nil (25715 53176 609938 75000) 0 nil])
([nil nil ((276 . 281)) nil (25715 53176 609930 890000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals ("p-seq"))) . -280) (undo-tree-id316 . -1) 281) nil (25715 53176 609926 334000) 0 nil])
([nil nil ((280 . 286)) nil (25715 53176 609919 149000) 0 nil])
([nil nil ((286 . 292)) nil (25715 53176 609915 353000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -68) (undo-tree-id308 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -69) (undo-tree-id309 . -1) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -70) (undo-tree-id310 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -71) (undo-tree-id311 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -72) (undo-tree-id312 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -73) (undo-tree-id313 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -74) (undo-tree-id314 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . -75) (undo-tree-id315 . -1) 76) nil (25715 53176 609907 372000) 0 nil])
([nil nil ((68 . 74)) nil (25715 53176 609877 465000) 0 nil])
([nil nil ((79 . 86)) nil (25715 53176 609873 725000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals nil)) . -85) (undo-tree-id307 . -1) 86) nil (25715 53176 609869 132000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -84) (undo-tree-id306 . -1) 85) nil (25715 53176 609860 947000) 0 nil])
([nil nil ((84 . 91)) nil (25715 53176 609853 614000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -254) (undo-tree-id301 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -255) (undo-tree-id302 . -1) (#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -256) (undo-tree-id303 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -257) (undo-tree-id304 . -1) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -258) (undo-tree-id305 . -1) 259) nil (25715 53176 609847 3000) 0 nil])
([nil nil ((254 . 260)) nil (25715 53176 609827 189000) 0 nil])
([nil nil ((#("z" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -258) (undo-tree-id299 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-function-name-face)) . -259) (undo-tree-id300 . -1) 260) nil (25715 53176 609821 708000) 0 nil])
([nil nil ((258 . 259)) nil (25715 53176 609811 134000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -282) (undo-tree-id286 . -1) (#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -283) (undo-tree-id287 . -1) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -284) (undo-tree-id288 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq") face font-lock-keyword-face)) . -285) (undo-tree-id289 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -286) (undo-tree-id290 . -1) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -287) (undo-tree-id291 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -288) (undo-tree-id292 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -289) (undo-tree-id293 . -1) (#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -290) (undo-tree-id294 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -291) (undo-tree-id295 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -292) (undo-tree-id296 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -293) (undo-tree-id297 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -294) (undo-tree-id298 . -1) 295) nil (25715 53176 609800 97000) 0 nil])
([nil nil ((282 . 288)) nil (25715 53176 609662 212000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -285) (undo-tree-id283 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -286) (undo-tree-id284 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -287) (undo-tree-id285 . -1) 288) nil (25715 53176 609656 453000) 0 nil])
([nil nil ((285 . 287)) nil (25715 53176 609640 324000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -286) (undo-tree-id282 . -1) 287) nil (25715 53176 609634 824000) 0 nil])
([nil nil ((286 . 288)) nil (25715 53176 609602 899000) 0 nil])
([nil nil ((71 . 72)) nil (25715 53176 609599 66000) 0 nil])
([nil nil ((289 . 308)) nil (25715 53176 609595 510000) 0 nil])
([nil nil ((314 . 316)) nil (25715 53176 609591 751000) 0 nil])
([nil nil ((317 . 319)) nil (25715 53176 609587 381000) 0 nil])
([nil nil ((321 . 322) 319) nil (25715 53176 609574 974000) 0 nil])
([nil nil ((282 . 283) (t 25715 53176 621560 118000)) nil (25715 53223 34642 770000) 0 nil])
([nil nil ((#("x" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -316) (undo-tree-id335 . -1) (undo-tree-id336 . -1) 317) nil (25715 53223 34636 67000) 0 nil])
([nil nil ((316 . 317)) nil (25715 53223 34593 401000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("p-seq"))) . -264) (undo-tree-id380 . -1) 265 (t 25715 53223 40259 280000)) nil (25715 53312 246388 295000) 0 nil])
([nil nil ((264 . 267)) nil (25715 53312 246380 147000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("vla-seq"))) . -266) (undo-tree-id379 . -1) 267) nil (25715 53312 246375 684000) 0 nil])
([nil nil ((266 . 270)) nil (25715 53312 246368 425000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("-seq" "vl"))) . -269) (undo-tree-id378 . -1) 270) nil (25715 53312 246363 925000) 0 nil])
([nil nil ((269 . 270)) nil (25715 53312 246356 351000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("a-seq" "vl"))) . -269) (undo-tree-id377 . -1) 270) nil (25715 53312 246351 499000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("v-seq"))) . -264) (undo-tree-id372 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("vl-seq"))) . -265) (undo-tree-id373 . -1) (#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("-seq" "vl"))) . -266) (undo-tree-id374 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("-seq" "vl"))) . -267) (undo-tree-id375 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("-seq" "vl"))) . -268) (undo-tree-id376 . -1) 269) nil (25715 53312 246341 240000) 0 nil])
([nil nil ((264 . 269)) nil (25715 53312 246320 147000) 0 nil])
([nil nil ((#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tuple-seq"))) . -314) (undo-tree-id371 . -1) 315) nil (25715 53312 246315 573000) 0 nil])
([nil nil ((314 . 316)) nil (25715 53312 246308 73000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tuple-seq"))) . -314) (undo-tree-id369 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tuple-seq"))) . -315) (undo-tree-id370 . -1) 316) nil (25715 53312 246302 443000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("tuple-seq"))) . -313) (undo-tree-id368 . -1) 314) nil (25715 53312 246289 961000) 0 nil])
([nil nil ((313 . 314)) nil (25715 53312 246282 221000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("tuple-seq"))) . -313) (undo-tree-id367 . -1) 314) nil (25715 53312 246277 720000) 0 nil])
([nil nil ((313 . 317)) nil (25715 53312 246270 91000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("t-seq"))) . -264) (undo-tree-id362 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tu-seq"))) . -265) (undo-tree-id363 . -1) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tup-seq"))) . -266) (undo-tree-id364 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tupl-seq"))) . -267) (undo-tree-id365 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("tuple-seq"))) . -268) (undo-tree-id366 . -1) 269) nil (25715 53312 246262 906000) 0 nil])
([nil nil ((264 . 267)) nil (25715 53312 246242 331000) 0 nil])
([nil nil ((266 . 267)) nil (25715 53312 246238 591000) 0 nil])
([nil nil ((#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . 86) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . 86) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . 86) (#("p" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . 86) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . 86) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq") face font-lock-function-name-face)) . 86)) nil (25715 53312 246232 331000) 0 nil])
([nil nil ((86 . 91)) nil (25715 53312 246225 387000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "v-seq"))) . -95) (undo-tree-id357 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "va-seq"))) . -96) (undo-tree-id358 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "val-seq"))) . -97) (undo-tree-id359 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "valu-seq"))) . -98) (undo-tree-id360 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "value-seq"))) . -99) (undo-tree-id361 . -1) 100) nil (25715 53312 246218 590000) 0 nil])
([nil nil ((95 . 99)) nil (25715 53312 246198 16000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -141) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -142) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -143) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -144) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -145) (undo-tree-id355 . -1) (undo-tree-id356 . -1) 146) nil (25715 53312 246190 590000) 0 nil])
([nil nil ((141 . 145)) nil (25715 53312 246156 238000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -222) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -223) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -224) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -225) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("x" "pair-seq"))) . -226) (undo-tree-id345 . -1) (undo-tree-id346 . -1) 227) nil (25715 53312 246146 479000) 0 nil])
([nil nil ((222 . 226)) nil (25715 53312 246081 367000) 0 nil])
([nil nil ((324 . 326) (t 25715 53312 260421 559000)) nil (25715 53396 262535 16000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-delimiter-face)) . -325) (undo-tree-id391 . -1) 326) nil (25715 53396 262523 294000) 0 nil])
([nil nil ((325 . 329)) nil (25715 53396 262507 201000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face font-lock-multiline t)) . -328) (undo-tree-id389 . -1) (undo-tree-id390 . -1) 329) nil (25715 53396 262497 53000) 0 nil])
([nil nil ((328 . 338)) nil (25715 53396 262475 16000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-comment-face)) . -337) (undo-tree-id387 . -1) (undo-tree-id388 . -1) 338) nil (25715 53396 262463 849000) 0 nil])
([nil nil ((337 . 343)) nil (25715 53396 262441 590000) 0 nil])
([nil nil ((343 . 353)) nil (25715 53396 262433 238000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("time-to") face font-lock-comment-face)) . -352) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 353) nil (25715 53396 262422 405000) 0 nil])
([nil nil ((352 . 366)) nil (25715 53396 262398 849000) 0 nil])
([nil nil ((366 . 368)) nil (25715 53396 262389 553000) 0 nil])
([nil nil ((#("w" 0 1 (help-echo cider--help-echo fontified t cider-locals ("time-to-value") face font-lock-comment-face font-lock-multiline t)) . -366) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("time-to-value") face font-lock-comment-face font-lock-multiline t)) . -367) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 368) nil (25715 53396 262374 386000) 0 nil])
([nil nil ((366 . 370)) nil (25715 53396 262307 719000) 0 nil])
([nil nil ((370 . 371) 35) nil (25715 53396 262286 830000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face)) . -5) (undo-tree-id392 . -1) (5 . 6) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face)) . -5) (undo-tree-id393 . -1) (undo-tree-id394 . -1) 6 (5 . 6) (15 . 19) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face)) . -15) (undo-tree-id395 . -1) (#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face)) . -16) (undo-tree-id396 . -1) 17 (9 . 17) (#("." 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face)) . -9) (undo-tree-id397 . -1) 10 (5 . 10) (1 . 5) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -1) (undo-tree-id398 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -2) (undo-tree-id399 . -1) (#("d" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -3) (undo-tree-id400 . -1) 4 (1 . 4) (1 . 3) (#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("120" "0" "160" "2" "190" "1p2" "100" "14" "0" "16"))) . -35) (undo-tree-id401 . -1) 36 (35 . 36) (t 25715 53396 280913 249000)) nil (25715 53516 785501 332000) 0 nil])
([nil current ((nil rear-nonsticky nil 20 . 21) (nil fontified nil 5 . 21) (5 . 21) 4) nil (25715 53992 705229 878000) 0 nil] [nil nil ((nil rear-nonsticky nil 21 . 22) (nil fontified nil 6 . 22) (6 . 22) 5) ((#("kettler-control." 0 15 (fontified nil help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face) 15 16 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t face font-lock-type-face)) . 6) (undo-tree-id402 . -15) (undo-tree-id403 . -15) (undo-tree-id404 . -15) (nil rear-nonsticky t 21 . 22)) (25715 53516 785228 351000) 0 nil])
nil
nil
