(undo-tree-save-format-version . 1)
"63f3f14b8e563973045738a84e8c08b4b787e34e"
[nil nil nil nil (25715 53556 722598 15000) 0 nil]
([nil nil ((#("(" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 28) (t 25715 50233 908826 306000)) nil (25715 53556 722593 182000) 0 nil])
([nil nil ((#(":" 0 1 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722588 404000) 0 nil])
([nil nil ((#("g" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722584 645000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722580 627000) 0 nil])
([nil nil ((#("n" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722576 571000) 0 nil])
([nil nil ((#("-" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722572 738000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722568 756000) 0 nil])
([nil nil ((#("l" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722564 904000) 0 nil])
([nil nil ((#("a" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722560 978000) 0 nil])
([nil nil ((#("s" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53556 722557 201000) 0 nil])
([nil nil ((#("s" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53557 328439 692000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) nil (25715 53620 900450 498000) 0 nil] [nil nil ((#(")" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) ((28 . 29)) (25715 53556 942500 697000) 0 nil])
([nil nil ((#("k" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -36) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("e" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -37) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("t" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -38) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("t" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -39) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("l" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -40) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("e" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -41) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("r" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -42) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 43 (40 . 43) (#("e" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -40) (undo-tree-id79 . -1) (#("l" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -41) (undo-tree-id80 . -1) 42 (36 . 42) (#("p" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -36) (undo-tree-id81 . -1) 37 (28 . 37)) nil (25715 53620 900411 517000) 0 nil])
([nil nil ((28 . 29) (#(")" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 28)) ((28 . 29) (#("e" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 28)) (25715 53556 722919 125000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65 . 66) (nil fontified nil 36 . 66) (36 . 66) 35) nil (25715 53620 899942 112000) 0 nil])
([nil nil ((27 . 29) (#("e" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 27) (#(" " 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -27) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("e" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -28) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("e" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -29) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 30 (28 . 30)) ((#("ee" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified nil) 1 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified nil)) . 28) (undo-tree-id6 . -2) (27 . 30) (27 . 28) (#("uu" 0 2 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 27) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) (25715 53556 722529 793000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 65)) nil (25715 53620 899928 1000) 0 nil])
nil
([nil nil ((28 . 30)) nil (25715 53620 899919 242000) 0 nil])
([nil nil ((38 . 39)) nil (25715 53620 899909 964000) 0 nil])
([nil nil ((68 . 76)) nil (25715 53620 899889 835000) 0 nil])
([nil nil ((77 . 78) (t 25715 53620 900624 534000)) nil (25715 53629 207670 116000) 0 nil])
([nil nil ((69 . 70) (t 25715 53629 210577 525000)) nil (25715 54202 102021 772000) 0 nil])
([nil nil ((#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-string-face)) . 151) (t 25715 54203 503513 225000)) nil (25715 54318 858136 60000) 0 nil] [nil nil ((#("k" 0 1 (fontified t help-echo cider--help-echo cider-locals nil cider-block-dynamic-font-lock t)) . 39) (t 25715 53812 669037 460000)) ((39 . 40)) (25715 54201 954945 166000) 0 nil])
([nil nil ((#("H" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858127 967000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54201 593539 858000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858121 412000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54200 830085 643000) 0 nil])
([nil nil ((#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858114 560000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54200 463180 387000) 0 nil])
([nil nil ((#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858107 709000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54200 309921 345000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858101 227000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54200 172256 171000) 0 nil])
([nil nil ((#("," 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858094 801000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54200 40516 139000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858088 24000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54199 892820 502000) 0 nil])
([nil nil ((#("W" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858081 357000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54199 750833 566000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858074 580000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54199 613855 565000) 0 nil])
([nil nil ((#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858067 283000) 0 nil])
([nil nil ((#("n" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54199 471107 845000) 0 nil])
([nil nil ((#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858060 172000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54199 334770 74000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858053 450000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54199 91971 512000) 0 nil])
([nil nil ((#("!" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151)) nil (25715 54318 858046 654000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54198 697427 155000) 0 nil])
([nil nil ((151 . 154)) nil (25715 54318 858040 376000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40)) (25715 54197 988172 659000) 0 nil])
([nil nil ((154 . 160)) nil (25715 54318 858034 191000) 0 nil])
([nil nil ((#("." 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 39)) ((39 . 40) (t 25715 54180 893890 259000)) (25715 54180 884253 400000) 0 nil])
([nil nil ((160 . 163)) nil (25715 54318 858027 414000) 0 nil])
nil
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . -162) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 163) nil (25715 54318 858016 618000) 0 nil])
([nil nil ((162 . 171)) nil (25715 54377 765561 976000) 0 nil])
([nil nil ((#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-string-face)) . 171)) nil (25715 54394 148000 193000) 0 nil] [nil nil ((#("\"" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-string-face)) . 171) (t 25715 54318 861511 666000)) ((171 . 172)) (25715 54377 412226 99000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 171)) nil (25715 54394 147995 712000) 0 nil])
([nil nil ((#("." 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154) (t 25715 54331 171291 110000)) ((154 . 155)) (25715 54377 229426 282000) 0 nil])
([nil nil ((171 . 172)) nil (25715 54394 147991 193000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54376 995046 188000) 0 nil])
([nil nil ((151 . 152)) nil (25715 54394 147986 397000) 0 nil])
([nil nil ((#("i" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54376 858428 413000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . -173) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . -1) 174) nil (25715 54394 147979 879000) 0 nil])
([nil nil ((#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54376 689838 835000) 0 nil])
([nil nil ((173 . 175)) nil (25715 54394 147935 435000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54376 383360 893000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 152) (t 25715 54394 150144 154000)) nil (25715 55206 793563 0) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54375 952321 122000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 152)) nil (25715 55206 793558 74000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54375 805077 596000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 152)) nil (25715 55206 793553 667000) 0 nil])
([nil nil ((#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54375 671208 677000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 152)) nil (25715 55206 793549 333000) 0 nil])
([nil nil ((#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54375 533475 162000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 152)) nil (25715 55206 793545 93000) 0 nil])
([nil nil ((#("v" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54375 378362 669000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 152)) nil (25715 55206 793541 167000) 0 nil])
([nil nil ((#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54375 139335 619000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 152)) nil (25715 55206 793537 37000) 0 nil])
([nil nil ((#("l" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54374 725166 645000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 152)) nil (25715 55206 793533 56000) 0 nil])
([nil nil ((#("u" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155)) (25715 54374 244832 659000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 152)) nil (25715 55206 793528 982000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 154)) ((154 . 155) (t 25715 54353 410889 553000)) (25715 54373 907780 346000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 152)) nil (25715 55206 793525 167000) 0 nil])
([nil nil ((151 . 153) (t 25715 54353 410889 553000)) ((#("uu" 0 2 (help-echo cider--help-echo fontified t cider-locals ("args"))) . 151) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) (25715 54373 907045 82000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 152)) nil (25715 55206 793521 149000) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t)) . 152)) nil (25715 55206 793516 686000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 152)) nil (25715 55206 793513 56000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 152)) nil (25715 55206 793509 19000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 152)) nil (25715 55206 793504 501000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . 152)) nil (25715 55206 793499 834000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 152)) nil (25715 55206 793493 742000) 0 nil])
([nil nil ((152 . 156)) nil (25715 55206 793480 353000) 0 nil])
([nil nil ((#("1" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -154) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("2" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -155) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -156) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("1" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -157) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("2" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -158) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 159 (t 25715 55206 803670 802000)) nil (25715 55261 57070 137000) 0 nil])
([nil nil ((154 . 158)) nil (25715 55261 57017 268000) 0 nil])
([nil nil ((#("&" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -157) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 158) nil (25715 55261 57012 638000) 0 nil])
([nil nil ((157 . 158)) nil (25715 55261 57002 27000) 0 nil])
([nil nil ((#("c" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -156) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("/" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -157) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 158) nil (25715 55261 56989 824000) 0 nil])
([nil nil ((156 . 157)) nil (25715 55261 56942 269000) 0 nil])
([nil nil ((#("c" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -156) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 157) nil (25715 55261 56936 251000) 0 nil])
([nil nil ((156 . 163)) nil (25715 55261 56885 993000) 0 nil])
([nil nil ((163 . 174)) nil (25715 55280 577890 810000) 0 nil])
([nil nil ((#("+" 0 1 (face font-lock-function-name-face cider-locals ("args") help-echo cider--help-echo fontified t)) . 152) (t 25715 55261 62509 965000)) nil (25715 55285 523381 645000) 0 nil] [nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -149) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 150 (149 . 150) (#("n" 0 1 (face font-lock-function-name-face cider-locals ("args") help-echo cider--help-echo fontified t)) . -149) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -150) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 151 (t 25715 55261 62509 965000)) ((149 . 151) (#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified nil)) . 149) (149 . 150)) (25715 55280 577081 383000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 152)) nil (25715 55285 523361 905000) 0 nil])
nil
([nil nil ((#("(" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142) (t 25715 55285 531985 164000)) nil (25715 55312 405225 55000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405220 222000) 0 nil])
([nil nil ((#("r" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405216 240000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405211 926000) 0 nil])
([nil nil ((#("n" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405207 703000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405203 611000) 0 nil])
([nil nil ((#("l" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405199 185000) 0 nil])
([nil nil ((#("n" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405194 648000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 142)) nil (25715 55312 405190 704000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 164)) nil (25715 55312 405186 333000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 164)) nil (25715 55312 405182 111000) 0 nil])
([nil nil ((163 . 164)) nil (25715 55312 405177 981000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -163) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 164) nil (25715 55312 405171 833000) 0 nil])
([nil nil ((164 . 165)) nil (25715 55312 405129 278000) 0 nil])
([nil nil ((#("a" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 155) (#("v" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 155) (t 25715 55312 411664 625000)) nil (25715 55368 931917 858000) 0 nil])
([nil nil ((#("e" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 155) (#("u" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 155) (#("l" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 155)) nil (25715 55368 931910 6000) 0 nil])
([nil nil ((155 . 160)) nil (25715 55368 931895 673000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -142) (undo-tree-id41 . -1) 143 (142 . 143) (139 . 142) (t 25715 55368 931111 996000)) nil (25715 55412 963586 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 187 . 188) (nil fontified nil 142 . 188) (142 . 188) 141) nil (25715 55412 963569 99000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 188) (undo-tree-id40 . 1)) nil (25715 55412 963557 247000) 0 nil])
([nil nil ((162 . 166)) nil (25715 55412 963543 377000) 0 nil])
([nil nil ((#("t" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -195) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("t" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -196) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("v" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -197) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("/" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -198) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 199) nil (25715 55412 963523 747000) 0 nil])
([nil nil ((180 . 184) (t 25715 55412 970639 168000)) nil (25715 55423 882686 789000) 0 nil])
([nil nil ((#("2" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 214) (t 25715 55423 890516 608000)) nil (25715 55436 948109 829000) 0 nil])
([nil nil ((76 . 90) (t 25717 6283 130415 684000)) nil (25718 23304 337134 916000) 0 nil])
([nil nil ((90 . 104)) nil (25718 23304 337130 398000) 0 nil])
([nil nil ((104 . 112)) nil (25718 23304 337126 398000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -105) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -106) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("c" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -107) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("h" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -108) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("i" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -109) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("n" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -110) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -111) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 112) nil (25718 23304 337116 620000) 0 nil])
([nil nil ((105 . 117)) nil (25718 23304 337070 677000) 0 nil])
([nil nil ((117 . 121)) nil (25718 23304 337066 770000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -118) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -119) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -120) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 121) nil (25718 23304 337059 381000) 0 nil])
([nil nil ((118 . 124)) nil (25718 23304 336999 623000) 0 nil])
([nil nil ((96 . 97)) nil (25718 23304 336985 864000) 0 nil])
([nil nil ((76 . 77) (t 25718 23304 342326 513000)) nil (25718 23585 223785 786000) 0 nil])
([nil nil ((91 . 92)) nil (25718 23585 223772 9000) 0 nil])
([nil nil ((246 . 249) (#("o" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -246) (undo-tree-id4 . -1) (#("o" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -247) (undo-tree-id5 . -1) 248 (246 . 248) (t 25718 23585 225518 4000)) nil (25718 24037 995938 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 251 . 252) (#("
" 0 1 (fontified nil cider-locals ("pars" "args"))) . -389) (249 . 390) 248) nil (25718 24037 995923 963000) 0 nil])
([nil nil ((#("  
" 0 2 (cider-locals ("args") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 247) (undo-tree-id1 . -1) (undo-tree-id2 . -3) (undo-tree-id3 . -1) 248) nil (25718 24037 995915 741000) 0 nil])
([nil nil ((#("pulse" 0 5 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo)) . 347)) nil (25718 24037 995899 723000) 0 nil])
([nil nil ((347 . 348)) nil (25718 24037 995895 705000) 0 nil])
([nil nil ((#("o" 0 1 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo)) . -347) (undo-tree-id0 . -1) 348) nil (25718 24037 995889 594000) 0 nil])
([nil nil ((347 . 352)) nil (25718 24037 995825 521000) 0 nil])
([nil nil ((389 . 391) (t 25718 24038 4535 180000)) nil (25718 24064 924063 493000) 0 nil])
([nil nil ((#("  dd(time-to-power 1))
" 0 22 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 22 23 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo)) . 387) (undo-tree-id8 . -3) (undo-tree-id9 . 19) (undo-tree-id10 . -3) 390) nil (25718 24064 924056 345000) 0 nil])
([nil nil ((387 . 388)) nil (25718 24064 924041 883000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo)) . -387) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 388) nil (25718 24064 924036 420000) 0 nil])
([nil nil ((387 . 388)) nil (25718 24064 924002 161000) 0 nil])
([nil nil ((388 . 390) (#("  " 0 2 (cider-locals ("args" "ref") fontified nil help-echo cider--help-echo)) . 387) (387 . 389) (387 . 388)) nil (25718 24064 923996 680000) 0 nil])
([nil nil ((387 . 389)) nil (25718 24064 923989 865000) 0 nil])
([nil nil ((393 . 394) 389) nil (25718 24064 923976 106000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo)) . 316) (#("h" 0 1 (face font-lock-string-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo)) . 316) (t 25718 24064 933881 792000)) nil (25718 24179 319733 905000) 0 nil])
([nil nil ((316 . 318)) nil (25718 24179 319717 517000) 0 nil])
([nil nil ((389 . 390) (386 . 389) (t 25718 24179 321106 261000)) nil (25718 24505 409604 346000) 0 nil])
([nil nil ((nil rear-nonsticky nil 395 . 396) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -459) (393 . 460) 392) nil (25718 24505 409593 921000) 0 nil])
([nil nil ((#("  
" 0 2 (cider-locals ("args") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 391) (undo-tree-id20 . -3) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 392) nil (25718 24505 409582 125000) 0 nil])
([nil nil ((425 . 427) (402 . 406) (#("i" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -402) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 403 (402 . 403) (#("s" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 402)) nil (25718 24505 409556 996000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 424)) nil (25718 24505 409533 885000) 0 nil])
([nil nil ((#("cwkettler" 0 9 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 424) (undo-tree-id17 . 9)) nil (25718 24505 409526 182000) 0 nil])
([nil nil ((#("-" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 424) (undo-tree-id16 . 1)) nil (25718 24505 409512 515000) 0 nil])
([nil nil ((#("control " 0 8 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 424) (undo-tree-id15 . 8)) nil (25718 24505 409498 756000) 0 nil])
([nil nil ((424 . 425)) nil (25718 24505 409486 201000) 0 nil])
([nil nil ((425 . 427)) nil (25718 24505 409479 961000) 0 nil])
([nil nil ((427 . 444)) nil (25718 24505 409473 405000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -443) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 444) nil (25718 24505 409464 831000) 0 nil])
([nil nil ((443 . 445)) nil (25718 24505 409445 443000) 0 nil])
([nil nil ((#("m" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -444) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 445) nil (25718 24505 409435 128000) 0 nil])
([nil nil ((444 . 446)) nil (25718 24505 409378 185000) 0 nil])
([nil nil ((463 . 464) (#(")" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -463) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 464 (#("
" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -463) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -464) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -465) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 466 (#("(" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -389) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 390 (467 . 468) (#(")" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -467) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#(")" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -468) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 469 (468 . 469) (t 25718 24505 423192 628000)) nil (25718 24665 896397 26000) 0 nil])
([nil nil ((#("  (def time-to-power (ttv/time-to-value ttv/power-seq))
  (def demo-pars (ref 
                  {
                   :mode \"pw-target\"
                   :power-target 135
                   }))
" 0 3 (cider-locals ("args") fontified t help-echo cider--help-echo) 3 6 (face font-lock-keyword-face cider-locals ("args") fontified t help-echo cider--help-echo) 6 7 (cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 7 20 (face font-lock-variable-name-face cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 20 22 (cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 22 25 (face font-lock-type-face cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 25 40 (cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 40 43 (face font-lock-type-face cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 43 55 (cider-locals ("args" "ttv/time-to-value") fontified t help-echo cider--help-echo) 55 56 (cider-locals ("args") fontified t help-echo cider--help-echo) 56 57 (cider-locals ("args") help-echo cider--help-echo fontified t) 57 58 (cider-locals ("args") help-echo cider--help-echo rear-nonsticky t fontified t) 58 59 (cider-locals ("args") help-echo cider--help-echo fontified t) 59 62 (face font-lock-keyword-face cider-locals ("args") help-echo cider--help-echo fontified t) 62 63 (cider-locals ("args" "ref") help-echo cider--help-echo fontified t) 63 72 (face font-lock-variable-name-face cider-locals ("args" "ref") help-echo cider--help-echo fontified t) 72 78 (cider-locals ("args" "ref") help-echo cider--help-echo fontified t) 78 79 (cider-locals ("args" "ref") help-echo cider--help-echo fontified t) 79 99 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 99 118 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 118 119 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 119 123 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 123 124 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 124 135 (face font-lock-string-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 135 136 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 136 155 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 155 156 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 156 161 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 161 168 (face clojure-keyword-face cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 168 173 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 173 195 (cider-locals ("args" "ref") fontified t help-echo cider--help-echo) 195 196 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 191) (undo-tree-id38 . -175) (undo-tree-id39 . -195) (undo-tree-id40 . -127) (undo-tree-id41 . -127) (undo-tree-id42 . -127) (undo-tree-id43 . -175) (undo-tree-id44 . -2) (undo-tree-id45 . -175) (undo-tree-id46 . -196) (undo-tree-id47 . -2) (undo-tree-id48 . -175) (undo-tree-id49 . -173) (undo-tree-id50 . -175) 366 (t 25718 24665 909297 695000)) nil (25718 24685 342304 848000) 0 nil])
([nil nil ((nil rear-nonsticky nil 133 . 134) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -327) (131 . 328)) nil (25718 24685 342199 166000) 0 nil])
([nil nil ((nil rear-nonsticky nil 345 . 346) (nil fontified nil 320 . 346) (320 . 346) (319 . 320) (311 . 319) (#("e" 0 1 (face clojure-keyword-face cider-locals ("ref") help-echo cider--help-echo fontified t)) . 289) (#("m" 0 1 (face clojure-keyword-face cider-locals ("ref") help-echo cider--help-echo fontified t)) . 289) (#("i" 0 1 (face clojure-keyword-face cider-locals ("ref") help-echo cider--help-echo fontified t)) . 289) (294 . 314) (291 . 294) (#(" " 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -291) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 292 (287 . 292) (267 . 287) (428 . 429) (nil rear-nonsticky nil 427 . 428) (nil fontified nil 402 . 428) (402 . 428) (394 . 402) (388 . 394) (#("i" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -388) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 389 (388 . 389) (t 25718 24685 348825 894000)) nil (25718 25474 716261 432000) 0 nil])
([nil nil ((#("  (def t-start (System/currentTimeMillis)) 
" 0 2 (cider-locals ("ref" "args") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("ref" "args") fontified t help-echo cider--help-echo) 3 6 (face font-lock-keyword-face cider-locals ("ref" "args") fontified t help-echo cider--help-echo) 6 7 (cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 7 14 (face font-lock-variable-name-face cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 14 15 (cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 15 16 (cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 16 22 (face font-lock-type-face cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 22 40 (cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 40 41 (cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo rear-nonsticky t) 41 42 (cider-locals ("ref" "args" "System/currentTimeMillis") fontified t help-echo cider--help-echo) 42 43 (cider-locals ("ref" "args") fontified t help-echo cider--help-echo) 43 44 (cider-locals ("ref" "args") fontified t help-echo cider--help-echo)) . 466) (undo-tree-id51 . 1) (undo-tree-id52 . -44) (undo-tree-id53 . -44) (undo-tree-id54 . -42) (undo-tree-id55 . -15) (undo-tree-id56 . -15) (undo-tree-id57 . -42) 508) nil (25718 25474 716224 62000) 0 nil])
([nil nil ((#("start" 0 5 (face clojure-keyword-face cider-locals ("ref" "args") fontified t help-echo cider--help-echo)) . 532) (t 25718 25474 718678 408000)) nil (25718 26199 76609 222000) 0 nil])
([nil nil ((532 . 536)) nil (25718 26199 76594 778000) 0 nil])
([nil nil ((#("V" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -77) (undo-tree-id62 . -1) 78 (77 . 78) (t 25718 26199 82073 408000)) nil (25718 26616 377530 526000) 0 nil])
([nil nil ((425 . 428) (408 . 425) (407 . 408) (#("d" 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -407) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("e" 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -408) (undo-tree-id79 . -1) (undo-tree-id80 . -1) 409 (407 . 409) (406 . 407) (t 25718 26616 386007 803000) 405) nil (25718 26936 477057 584000) 0 nil])
([nil nil ((nil rear-nonsticky nil 428 . 429) (nil fontified nil 428 . 429) (428 . 429) 427) nil (25718 26936 477036 659000) 0 nil])
([nil nil ((nil rear-nonsticky nil 527 . 528) (nil fontified nil 428 . 528) (428 . 528)) nil (25718 26936 477030 659000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("ref") help-echo cider--help-echo rear-nonsticky t fontified t)) . 528)) nil (25718 26936 477024 789000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -524) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#(" " 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -525) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -526) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (cider-locals ("ref") help-echo cider--help-echo rear-nonsticky t fontified t)) . -527) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 528) nil (25718 26936 477017 11000) 0 nil])
([nil nil ((524 . 525)) nil (25718 26936 476977 67000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -524) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 525) nil (25718 26936 476970 827000) 0 nil])
([nil nil ((524 . 525)) nil (25719 35530 203460 322000) 0 nil])
([nil nil ((525 . 526)) ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 525)) (25719 35556 10753 63000) 0 nil])
([nil nil ((#("-st" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face) 1 2 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face) 2 3 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313) (t 25719 35535 691185 868000)) nil (25719 35602 541696 705000) 0 nil] [nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313) (t 25719 35535 691185 868000)) ((313 . 314)) (25719 35555 864637 879000) 0 nil] [nil nil ((#("s" 0 1 (fontified t face clojure-keyword-face)) . 314) (t 25718 26936 480950 429000)) ((314 . 315)) (25719 35528 799859 497000) 0 nil])
([nil nil ((#("art" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face) 1 2 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face) 2 3 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313)) nil (25719 35602 541691 186000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313)) ((313 . 314)) (25719 35555 719471 78000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face clojure-keyword-face)) . 314)) ((314 . 315)) (25719 35528 357727 935000) 0 nil])
([nil nil ((313 . 314)) nil (25719 35602 541686 260000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313)) ((313 . 314)) (25719 35555 545233 740000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face clojure-keyword-face)) . 314)) ((314 . 315)) (25719 35527 899828 794000) 0 nil])
([nil nil ((#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491) (#("r" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491) (#("a" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491) (#("t" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491) (#("s" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491)) nil (25719 35602 541677 834000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313)) ((313 . 314)) (25719 35554 875269 959000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face clojure-keyword-face)) . 314)) ((314 . 315)) (25719 35527 351474 644000) 0 nil])
([nil nil ((491 . 492)) nil (25719 35602 541662 1000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313)) ((313 . 314)) (25719 35554 259912 266000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face clojure-keyword-face)) . 314)) ((314 . 315)) (25719 35526 834393 481000) 0 nil])
([nil nil ((#("1" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . -375) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("3" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . -376) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("5" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . -377) (undo-tree-id34 . -1) (undo-tree-id35 . -1) 378 (t 25719 35602 550818 919000)) nil (25719 35609 81246 773000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 313)) ((313 . 314)) (25719 35554 259648 934000) 0 nil])
([nil nil ((314 . 315)) ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 314)) (25719 35526 186333 336000) 0 nil])
([nil nil ((375 . 376)) nil (25719 35609 81185 292000) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t face clojure-keyword-face)) . -313) (undo-tree-id12 . -1) 314) ((313 . 314)) (25719 35525 508518 274000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . -400) (undo-tree-id46 . -1) 401 (400 . 401) (t 25719 35609 100786 678000)) nil (25719 35728 280243 777000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face clojure-keyword-face)) . -496) (undo-tree-id10 . -1) 497) ((496 . 497)) (25719 35524 765311 85000) 0 nil])
([nil nil ((#("                   " 0 19 (help-echo cider--help-echo fontified nil cider-locals ("ref"))) . -375) (359 . 375) (#("                   " 0 19 (help-echo cider--help-echo fontified nil cider-locals ("ref"))) . -343) (327 . 343) (#("                   " 0 19 (fontified nil help-echo cider--help-echo cider-locals ("ref"))) . -296) (280 . 296) (#("                   " 0 19 (fontified nil help-echo cider--help-echo cider-locals ("ref"))) . -275) (259 . 275) (#("                   " 0 19 (fontified nil help-echo cider--help-echo cider-locals ("ref"))) . -241) (225 . 241) (#("                  " 0 18 (fontified nil help-echo cider--help-echo cider-locals ("ref"))) . -223) (207 . 223) (#("  " 0 2 (fontified t help-echo cider--help-echo cider-locals nil)) . -186) (undo-tree-id44 . -2) (#("  " 0 2 (fontified t help-echo cider--help-echo cider-locals nil)) . -132) (undo-tree-id45 . -2) 377) nil (25719 35728 280230 371000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face clojure-keyword-face)) . -491) (undo-tree-id0 . -1) (#("s" 0 1 (fontified t face clojure-keyword-face)) . -492) (undo-tree-id2 . -1) (#("t" 0 1 (fontified t face clojure-keyword-face)) . -493) (undo-tree-id4 . -1) (#("a" 0 1 (fontified t face clojure-keyword-face)) . -494) (undo-tree-id6 . -1) (#("r" 0 1 (fontified t face clojure-keyword-face)) . -495) (undo-tree-id8 . -1) 496) ((491 . 496)) (25719 35523 578761 347000) 0 nil])
([nil nil ((#("(defn get-power []
  (ttv/choose-value-from-pairs ttv/power-seq (/ (- (:t @demo-pars) (:t0 @demo-pars)) 60000.)))
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil) 1 5 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 5 6 (help-echo cider--help-echo fontified t cider-locals nil) 6 15 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 15 19 (help-echo cider--help-echo fontified t cider-locals nil) 19 22 (help-echo cider--help-echo fontified t cider-locals nil) 22 25 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 25 50 (help-echo cider--help-echo fontified t cider-locals nil) 50 53 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 53 65 (help-echo cider--help-echo fontified t cider-locals nil) 65 66 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 66 68 (help-echo cider--help-echo fontified t cider-locals nil) 68 69 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-function-name-face) 69 71 (help-echo cider--help-echo fontified t cider-locals nil) 71 72 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 72 73 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 73 87 (help-echo cider--help-echo fontified t cider-locals nil) 87 88 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 88 90 (help-echo cider--help-echo fontified t cider-locals nil face clojure-keyword-face) 90 101 (help-echo cider--help-echo fontified t cider-locals nil) 101 113 (help-echo cider--help-echo fontified t cider-locals nil) 113 114 (help-echo cider--help-echo fontified t cider-locals nil)) . 379) (undo-tree-id36 . -19) (undo-tree-id37 . -19) (undo-tree-id38 . 114) (undo-tree-id39 . -19) (undo-tree-id40 . -114) (undo-tree-id41 . -19) (undo-tree-id42 . -19) (undo-tree-id43 . -19) 398) nil (25719 35728 280208 909000) 0 nil])
([nil nil ((491 . 492)) ((#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face)) . 491)) (25719 35522 782812 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 131 . 132) (#("
" 0 1 (cider-locals nil fontified nil)) . -245) (131 . 246)) nil (25719 35728 280154 358000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -375) (undo-tree-id13 . -1) (#("3" 0 1 (fontified t)) . -376) (undo-tree-id15 . -1) (#("5" 0 1 (fontified t)) . -377) (undo-tree-id17 . -1) 378 (t 25719 35433 981865 345000)) ((375 . 378)) (25719 35522 348326 565000) 0 nil])
([nil nil ((246 . 247)) nil (25719 35728 280139 748000) 0 nil])
([nil nil ((375 . 376)) ((#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 375) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) (25719 35521 603997 806000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-keyword-face)) . -137) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 138 (137 . 138) (t 25719 35728 289940 338000)) nil (25719 35785 811217 636000) 0 nil])
([nil nil ((376 . 405) (#("
                   }))
(defn" 0 1 (fontified t) 1 25 (fontified t) 25 29 (fontified t face font-lock-keyword-face)) . 376) (t 25719 35443 421819 825000)) ((376 . 405) (#("
                   }))
(Defn" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref")) 1 23 (help-echo cider--help-echo fontified t cider-locals ("ref")) 23 24 (help-echo cider--help-echo fontified t cider-locals ("ref")) 24 25 (help-echo cider--help-echo fontified t cider-locals ("ref")) 25 29 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 376) (undo-tree-id21 . -24) (undo-tree-id22 . -29) (undo-tree-id23 . -29) (undo-tree-id24 . -29) (t 25719 35491 761498 340000)) (25719 35521 156516 24000) 0 nil])
([nil nil ((149 . 153)) nil (25719 35803 833748 364000) 0 nil] [nil nil ((nil rear-nonsticky nil 150 . 151) (#("
" 0 1 (cider-locals nil fontified nil)) . -264) (150 . 265) 149) ((#("
(defn get-power []
  (ttv/choose-value-from-pairs ttv/power-seq (/ (- (:t @demo-pars) (:t0 @demo-pars)) 60000.)))
" 0 1 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals nil) 1 2 (fontified nil help-echo cider--help-echo cider-locals nil) 2 6 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 6 7 (fontified nil help-echo cider--help-echo cider-locals nil) 7 16 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 16 20 (fontified nil help-echo cider--help-echo cider-locals nil) 20 23 (fontified nil help-echo cider--help-echo cider-locals nil) 23 26 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-type-face) 26 51 (fontified nil help-echo cider--help-echo cider-locals nil) 51 54 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-type-face) 54 66 (fontified nil help-echo cider--help-echo cider-locals nil) 66 67 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 67 69 (fontified nil help-echo cider--help-echo cider-locals nil) 69 70 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-function-name-face) 70 72 (fontified nil help-echo cider--help-echo cider-locals nil) 72 73 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 73 74 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 74 88 (fontified nil help-echo cider--help-echo cider-locals nil) 88 89 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 89 91 (fontified nil help-echo cider--help-echo cider-locals nil face clojure-keyword-face) 91 102 (fontified nil help-echo cider--help-echo cider-locals nil) 102 114 (fontified nil help-echo cider--help-echo cider-locals nil) 114 115 (cider-locals nil fontified nil)) . 150) (undo-tree-id49 . -1) (undo-tree-id50 . -114) (undo-tree-id51 . -1) (undo-tree-id52 . -114) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (264 . 265) (nil rear-nonsticky t 150 . 151)) (25719 35785 810909 393000) 0 nil])
([nil nil ((314 . 316) (t 25719 35491 761498 340000)) ((#("uu" 0 2 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 314) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) (25719 35521 155339 606000) 0 nil])
([nil nil ((#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -212) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -213) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -214) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -215) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 216) nil (25719 35803 833740 661000) 0 nil])
nil
nil
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -211) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 212) nil (25719 35803 833709 366000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -223) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("e" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -224) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("m" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -225) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("o" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -226) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("-" 0 1 (help-echo cider--help-echo fontified t cider-locals ("pars"))) . -227) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 228) nil (25719 35803 833688 644000) 0 nil])
([nil nil ((333 . 351) (t 25719 35803 845492 410000)) nil (25719 35869 600816 698000) 0 nil])
([nil nil ((350 . 361)) nil (25719 35869 600811 179000) 0 nil])
([nil nil ((361 . 370)) nil (25719 35869 600797 624000) 0 nil])
([nil nil ((#("O" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . -315) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 316 (315 . 316) (t 25719 35869 602932 444000)) nil (25719 35940 268272 831000) 0 nil])
([nil nil ((295 . 296) 314) nil (25719 35940 268225 258000) 0 nil])
([nil nil ((351 . 353) (t 25719 35940 280961 83000)) nil (25719 42477 990175 569000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 351)) nil (25719 42745 151500 362000) 0 nil] [nil nil ((#("                dd:power-fun get-power 
" 0 18 (help-echo cider--help-echo fontified t cider-locals ("ref")) 18 19 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 19 28 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 28 29 (help-echo cider--help-echo fontified t cider-locals ("ref")) 29 38 (help-echo cider--help-echo fontified t cider-locals ("ref")) 38 40 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 335) (undo-tree-id77 . 22) (undo-tree-id78 . -17) (undo-tree-id79 . -17) 352) ((335 . 375)) (25719 42477 989856 724000) 0 nil])
([nil nil ((#("d" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 351)) nil (25719 42745 151495 918000) 0 nil])
nil
([nil nil ((#("                :power-fun get-power 
" 0 16 (help-echo cider--help-echo fontified t cider-locals ("ref")) 16 17 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 17 26 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 26 27 (help-echo cider--help-echo fontified t cider-locals ("ref")) 27 36 (help-echo cider--help-echo fontified t cider-locals ("ref")) 36 38 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . 335) (undo-tree-id109 . 22) (undo-tree-id110 . -15) 350) nil (25719 42745 151490 529000) 0 nil])
([nil nil ((#("(def time-to-power (ttv/time-to-value ttv/power-seq))
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil) 1 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value")) 5 18 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value") face font-lock-variable-name-face) 18 20 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value")) 20 23 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value") face font-lock-type-face) 23 38 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value")) 38 41 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value") face font-lock-type-face) 41 53 (help-echo cider--help-echo fontified t cider-locals ("ttv/time-to-value")) 53 54 (help-echo cider--help-echo fontified t cider-locals nil)) . 241) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -54) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 242) nil (25719 42745 151478 270000) 0 nil])
([nil nil ((nil rear-nonsticky nil 240 . 241) (#("
" 0 1 (cider-locals nil fontified nil)) . -361) (240 . 362)) nil (25719 42745 151454 159000) 0 nil])
([nil nil ((435 . 453) 434) nil (25719 42745 151448 67000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref"))) . -452) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 453) nil (25719 42745 151442 215000) 0 nil])
([nil nil ((452 . 457)) nil (25719 42745 151431 512000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . -454) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . -455) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . -456) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 457) nil (25719 42745 151425 234000) 0 nil])
([nil nil ((454 . 456)) nil (25719 42745 151395 49000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . -454) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . -455) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 456) nil (25719 42745 151389 31000) 0 nil])
([nil nil ((454 . 458)) nil (25719 42745 151371 883000) 0 nil])
([nil nil ((458 . 469)) nil (25719 42745 151368 32000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref"))) . -466) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref"))) . -467) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref"))) . -468) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 469) nil (25719 42745 151361 161000) 0 nil])
([nil nil ((466 . 468)) nil (25719 42745 151336 606000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref"))) . -466) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref"))) . -467) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 468) nil (25719 42745 151329 588000) 0 nil])
([nil nil ((466 . 472)) nil (25719 42745 151208 961000) 0 nil])
([nil nil ((#("0" 0 1 (help-echo cider--help-echo fontified t cider-locals ("ref"))) . -492) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 493 (t 25719 42745 160820 445000)) nil (25719 44427 897373 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 518 . 519) (nil fontified nil 492 . 519) (492 . 519) 491) nil (25719 44427 897317 404000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("ref"))) . 518) (t 25719 44427 902328 808000)) nil (25719 44432 827846 874000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 453) (t 25719 44432 842215 841000)) nil (25719 48104 731875 13000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 453)) nil (25719 48104 731869 180000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 453)) nil (25719 48104 731863 809000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 453)) nil (25719 48104 731859 143000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 453)) nil (25719 48104 731853 476000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t help-echo cider--help-echo cider-locals ("ref") face clojure-keyword-face)) . 453)) nil (25719 48104 731838 773000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-comment-face)) . -243) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 244 (243 . 244) (241 . 243) (t 25719 48104 738712 42000)) nil (25719 49416 489951 988000) 0 nil])
([nil nil ((304 . 305)) nil (25719 49450 587181 821000) 0 nil] [nil nil ((nil rear-nonsticky nil 365 . 366) (nil fontified nil 305 . 366) (305 . 366) 304) ((#("(def power-seq '([16 0] [14 100] [12 190] [2 160] [0 120])) 
" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil) 1 4 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-keyword-face) 4 5 (fontified nil help-echo cider--help-echo cider-locals nil) 5 14 (fontified nil help-echo cider--help-echo cider-locals nil face font-lock-variable-name-face) 14 60 (fontified nil help-echo cider--help-echo cider-locals nil) 60 61 (fontified nil rear-nonsticky nil help-echo cider--help-echo cider-locals nil)) . 305) (undo-tree-id115 . -60) (undo-tree-id116 . -61) (undo-tree-id117 . -61) (undo-tree-id118 . -61) (nil rear-nonsticky t 365 . 366)) (25719 49416 489630 728000) 0 nil])
([nil nil ((nil rear-nonsticky nil 364 . 365) (nil fontified nil 304 . 365) (304 . 365)) nil (25719 49450 587177 728000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 365) (undo-tree-id146 . 1)) nil (25719 49450 587171 969000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -327) (undo-tree-id144 . -1) (undo-tree-id145 . -1) 328 (327 . 328) (322 . 323) (#("16" 0 2 (fontified t help-echo cider--help-echo cider-locals nil)) . 322)) nil (25719 49450 587163 377000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326)) nil (25719 49450 587150 321000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id143 . 1)) nil (25719 49450 587145 710000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id142 . 1)) nil (25719 49450 587138 284000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id141 . 1)) nil (25719 49450 587130 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id140 . 1)) nil (25719 49450 587123 62000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id139 . 1)) nil (25719 49450 587089 414000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id138 . 1)) nil (25719 49450 587081 728000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id137 . 1)) nil (25719 49450 587074 99000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id136 . 1)) nil (25719 49450 587066 321000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id135 . 1)) nil (25719 49450 587058 728000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id134 . 1)) nil (25719 49450 587051 80000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id133 . 1)) nil (25719 49450 587043 506000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id132 . 1)) nil (25719 49450 587035 691000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id131 . 1)) nil (25719 49450 587027 821000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id130 . 1)) nil (25719 49450 587020 339000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id129 . 1)) nil (25719 49450 587012 710000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id128 . 1)) nil (25719 49450 587004 765000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id127 . 1)) nil (25719 49450 586997 80000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id126 . 1)) nil (25719 49450 586989 543000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id125 . 1)) nil (25719 49450 586981 950000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id124 . 1)) nil (25719 49450 586974 210000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id123 . 1)) nil (25719 49450 586966 6000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id122 . 1)) nil (25719 49450 586958 395000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id121 . 1)) nil (25719 49450 586950 376000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id120 . 1)) nil (25719 49450 586941 784000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326) (undo-tree-id119 . 1)) nil (25719 49450 586925 654000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 322) (t 25719 49450 611291 190000)) nil (25719 49464 16406 368000) 0 nil])
([nil nil ((322 . 323)) nil (25719 49464 16391 979000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -322) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 323 (t 25719 49464 41308 23000)) nil (25719 52480 38252 947000) 0 nil])
([nil nil ((322 . 325)) nil (25719 52480 38169 321000) 0 nil])
([nil nil ((325 . 326) (t 25719 52480 49924 894000)) nil (25719 52557 121138 878000) 0 nil])
([nil nil ((325 . 326)) nil (25719 52557 121133 490000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -327) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 328) nil (25719 52557 121121 490000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -322) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("." 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -323) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -324) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 325 (t 25719 52557 136973 958000)) nil (25719 53437 602176 714000) 0 nil])
([nil nil ((322 . 323)) nil (25719 53437 602090 920000) 0 nil])
([nil nil ((322 . 323) (t 25719 53437 621203 965000)) nil (25719 53672 315181 442000) 0 nil])
([nil nil ((322 . 323)) nil (25720 65132 913854 464000) 0 nil])
([nil nil ((#("p" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -140) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 141 (140 . 141) (128 . 140) (#(" " 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified nil)) . -90) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (128 . 129) (t 25719 53672 325506 492000)) nil (25720 65297 987449 930000) 0 nil] [nil nil ((5 . 6) (#("kettler-control." 0 16 (face font-lock-type-face fontified t)) . 5) (undo-tree-id0 . -15) (undo-tree-id1 . -15) (undo-tree-id2 . -15) (undo-tree-id3 . -16) (undo-tree-id4 . -15) (undo-tree-id5 . -15) 20 (t 25719 53672 325506 492000)) ((5 . 21) (#("u" 0 1 (face font-lock-type-face fontified t)) . 5)) (25720 65132 912047 414000) 0 nil])
([nil nil ((nil rear-nonsticky nil 177 . 178) (nil fontified nil 140 . 178) (140 . 178) 139) nil (25720 65297 987402 523000) 0 nil])
nil
([nil nil ((175 . 176) (#("m" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 175)) nil (25720 65297 987390 153000) 0 nil])
([nil nil ((#("tatemachine " 0 12 (cider-locals nil help-echo cider--help-echo fontified t)) . 158)) nil (25720 65297 987380 671000) 0 nil])
([nil nil ((160 . 161) (#("s" 0 1 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t)) . 160)) nil (25720 65297 987371 301000) 0 nil])
([nil nil ((158 . 164)) nil (25720 65297 987361 134000) 0 nil])
([nil nil ((#("i" 0 1 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified t)) . -166) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 167) nil (25720 65297 987348 727000) 0 nil])
([nil nil ((166 . 167)) nil (25720 65297 987285 116000) 0 nil])
([nil nil ((#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . -171) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#(")" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -172) (undo-tree-id15 . 1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#(")" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -173) (undo-tree-id18 . 1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 174 (t 25720 65298 14125 744000)) nil (25720 65313 504126 364000) 0 nil])
([nil nil ((171 . 173)) nil (25720 65313 504006 643000) 0 nil])
([nil nil ((#("(defn get-power [pars]
  (ttv/choose-value-from-pairs ttv/power-seq (/ (- (:t @pars) (:t0 @pars)) 60000.)))
" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 15 (fontified t face font-lock-function-name-face) 15 26 (fontified t) 26 29 (fontified t face font-lock-type-face) 29 54 (fontified t) 54 57 (fontified t face font-lock-type-face) 57 75 (fontified t) 75 76 (fontified t face clojure-keyword-face) 76 77 (fontified t face clojure-keyword-face) 77 86 (fontified t) 86 87 (fontified t face clojure-keyword-face) 87 89 (fontified t face clojure-keyword-face) 89 108 (fontified t)) . 175) (undo-tree-id0 . -23) (undo-tree-id1 . -23) (undo-tree-id2 . -23) (undo-tree-id3 . -108) (undo-tree-id4 . -23) (undo-tree-id5 . -23) (undo-tree-id6 . -23) 198 (t 25720 65313 514009 415000)) nil (25721 1660 238111 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 159 . 160) (nil fontified nil 140 . 160) (140 . 160) 139 (t 25721 413 131530 247000)) nil (25721 1671 524349 891000) 0 nil] [nil nil ((nil rear-nonsticky nil 160 . 161) (nil fontified nil 141 . 161) (141 . 161) 140 (t 25721 413 131530 247000)) ((#("[serial-port :as sp]" 0 13 (cider-locals nil help-echo cider--help-echo fontified nil) 13 14 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified nil) 14 16 (face clojure-keyword-face cider-locals nil help-echo cider--help-echo fontified nil) 16 19 (cider-locals nil help-echo cider--help-echo fontified nil) 19 20 (cider-locals nil help-echo cider--help-echo rear-nonsticky nil fontified nil)) . 141) (undo-tree-id0 . -19) (undo-tree-id1 . -19) (undo-tree-id2 . -19) (nil rear-nonsticky t 160 . 161)) (25721 1660 237323 224000) 0 nil])
([nil nil ((160 . 173)) nil (25721 1691 872423 744000) 0 nil])
nil
([nil nil ((#("u" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -755) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("s" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -756) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("e" 0 1 (face font-lock-function-name-face cider-locals ("args") fontified t help-echo cider--help-echo)) . -757) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 758 (755 . 758) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -755) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 756 (753 . 756) (752 . 753) (t 25721 1671 536519 18000)) nil (25721 1724 832397 454000) 0 nil] [nil nil ((794 . 795) (792 . 794) (679 . 719) (#("  " 0 2 (cider-locals ("args") fontified nil help-echo cider--help-echo)) . 679) (753 . 754) (#("
" 0 1 (face font-lock-comment-face cider-locals ("args") fontified t help-echo cider--help-echo)) . -753) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 754 (681 . 682) (t 25721 1671 536519 18000)) ((#(";" 0 1 (face font-lock-comment-face cider-locals ("args") fontified nil help-echo cider--help-echo)) . 681) (753 . 754) (#("
" 0 1 (face font-lock-comment-face cider-locals ("args") fontified nil help-echo cider--help-echo)) . 753) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (679 . 681) (#("                                        " 0 40 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 679) (#("  " 0 2 (cider-locals ("args") fontified nil help-echo cider--help-echo)) . 792) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (#("u" 0 1 (font-lock-multiline t cider-locals ("args") fontified t help-echo cider--help-echo)) . 794)) (25721 1691 870843 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 755 . 756) (#("
" 0 1 (fontified nil cider-locals nil)) . -774) (755 . 775) 754) nil (25721 1724 832175 144000) 0 nil])
nil
([nil nil ((#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -754) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("
" 0 1 (cider-locals ("args") help-echo cider--help-echo rear-nonsticky t fontified t)) . -755) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 756) nil (25721 1724 832150 663000) 0 nil])
([nil nil ((754 . 755)) nil (25721 1724 832002 92000) 0 nil])
([nil nil ((681 . 682) (t 25721 1724 845288 303000)) nil (25721 1729 509418 186000) 0 nil])
([nil nil ((774 . 775) (t 25721 1729 525179 951000)) nil (25721 1759 183309 524000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -775) (undo-tree-id54 . -1) (775 . 776) (#("j" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -775) (undo-tree-id55 . -1) (#("k" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -776) (undo-tree-id56 . -1) 777 (775 . 777) (#("j" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -775) (undo-tree-id57 . -1) (775 . 776) 778 (776 . 778) (#("  " 0 2 (cider-locals ("args") fontified nil help-echo cider--help-echo)) . 775) (775 . 777) (775 . 776) (777 . 779) (#("  " 0 2 (cider-locals ("args") fontified nil help-echo cider--help-echo)) . 776) (undo-tree-id58 . -2) (776 . 779) (#("  " 0 2 (cider-locals ("args") fontified nil help-echo cider--help-echo)) . 775) (undo-tree-id59 . -2) (774 . 778) (775 . 776) (t 25721 1759 194491 987000)) nil (25721 1837 16266 376000) 0 nil])
([nil nil ((nil rear-nonsticky nil 777 . 778) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -858) (775 . 859)) nil (25721 1837 16230 821000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 775) (undo-tree-id53 . -1)) nil (25721 1837 16223 525000) 0 nil])
([nil nil ((840 . 843)) nil (25721 1837 16183 803000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -863) (undo-tree-id68 . -1) (863 . 864) (#("p" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -863) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 864 (863 . 864) (t 25721 1837 22679 948000)) nil (25721 1872 191233 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 865 . 866) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -878) (863 . 879) 862) nil (25721 1872 191215 853000) 0 nil])
([nil nil ((nil rear-nonsticky nil 865 . 866) (#("
" 0 1 (fontified nil cider-locals ("args"))) . -915) (863 . 916) 862) nil (25721 1872 191209 39000) 0 nil])
([nil nil ((#("  
" 0 2 (cider-locals ("args") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 861) (undo-tree-id60 . -1) (undo-tree-id61 . -3) (undo-tree-id62 . -2) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 862) nil (25721 1872 191193 595000) 0 nil])
([nil nil ((886 . 889) (t 25721 1872 201857 975000)) nil (25721 1883 784295 271000) 0 nil])
([nil nil ((907 . 910) (t 25721 1883 791586 841000)) nil (25721 1889 469663 579000) 0 nil])
([nil nil ((#("V" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -756) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("
" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -757) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -758) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -759) (undo-tree-id127 . -1) 760 (754 . 756) (755 . 756) (754 . 755) (t 25721 1889 481453 673000)) nil (25721 2069 476115 164000) 0 nil])
([nil nil ((#("  (use 'serial-port)
  (def port (open \"/dev/ttyUSB0\" 9600))
  (on-byte port (fn [x] (sr/add-new-char x)))
  (Thread/sleep 1000)
  (sr/send-command port sr/b-reset)
  (close port)
" 0 2 (cider-locals ("args") fontified t help-echo cider--help-echo) 2 3 (cider-locals ("args") fontified t help-echo cider--help-echo) 3 6 (face font-lock-function-name-face cider-locals ("args") fontified t help-echo cider--help-echo) 6 21 (cider-locals ("args") fontified t help-echo cider--help-echo) 21 22 (cider-locals ("args") fontified t help-echo cider--help-echo) 22 23 (cider-locals ("args") fontified t help-echo cider--help-echo rear-nonsticky t) 23 24 (cider-locals ("args") fontified t help-echo cider--help-echo) 24 27 (face font-lock-keyword-face cider-locals ("args") fontified t help-echo cider--help-echo) 27 28 (cider-locals ("args" "open") fontified t help-echo cider--help-echo) 28 32 (face font-lock-variable-name-face cider-locals ("args" "open") fontified t help-echo cider--help-echo) 32 39 (cider-locals ("args" "open") fontified t help-echo cider--help-echo) 39 53 (face font-lock-string-face cider-locals ("args" "open") fontified t help-echo cider--help-echo) 53 55 (cider-locals ("args" "open") fontified t help-echo cider--help-echo) 55 60 (cider-locals ("args" "open") fontified t help-echo cider--help-echo) 60 61 (cider-locals ("args") fontified t help-echo cider--help-echo) 61 78 (cider-locals ("args") fontified t help-echo cider--help-echo) 78 80 (face font-lock-keyword-face cider-locals ("args") fontified t help-echo cider--help-echo) 80 86 (cider-locals ("args" "x") fontified t help-echo cider--help-echo) 86 88 (face font-lock-type-face cider-locals ("args" "x") fontified t help-echo cider--help-echo) 88 105 (cider-locals ("args" "x") fontified t help-echo cider--help-echo) 105 106 (cider-locals ("args") fontified t help-echo cider--help-echo) 106 107 (cider-locals ("args") fontified t help-echo cider--help-echo) 107 108 (cider-locals ("args") fontified t help-echo cider--help-echo) 108 109 (cider-locals ("args") fontified t help-echo cider--help-echo rear-nonsticky t) 109 110 (cider-locals ("args") fontified t help-echo cider--help-echo) 110 116 (face font-lock-type-face cider-locals ("args") fontified t help-echo cider--help-echo) 116 128 (cider-locals ("args") fontified t help-echo cider--help-echo) 128 129 (cider-locals ("args") fontified t help-echo cider--help-echo) 129 131 (cider-locals ("args") fontified t help-echo cider--help-echo) 131 132 (cider-locals ("args") fontified t help-echo cider--help-echo) 132 134 (face font-lock-type-face cider-locals ("args") fontified t help-echo cider--help-echo) 134 153 (cider-locals ("args") fontified t help-echo cider--help-echo) 153 155 (face font-lock-type-face cider-locals ("args") fontified t help-echo cider--help-echo) 155 164 (cider-locals ("args") fontified t help-echo cider--help-echo) 164 165 (cider-locals ("args") fontified t help-echo cider--help-echo) 165 166 (cider-locals ("args") fontified t help-echo cider--help-echo) 166 167 (cider-locals ("args") fontified t help-echo cider--help-echo rear-nonsticky t) 167 179 (cider-locals ("args") fontified t help-echo cider--help-echo) 179 180 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 754) (undo-tree-id93 . -156) (undo-tree-id94 . -166) (undo-tree-id95 . -107) (undo-tree-id96 . -164) (undo-tree-id97 . 178) (undo-tree-id98 . -2) (undo-tree-id99 . -20) (undo-tree-id100 . -107) (undo-tree-id101 . -106) (undo-tree-id102 . -107) (undo-tree-id103 . -107) (undo-tree-id104 . -107) (undo-tree-id105 . -89) (undo-tree-id106 . -89) (undo-tree-id107 . -179) (undo-tree-id108 . -107) (undo-tree-id109 . -107) (undo-tree-id110 . -164) (undo-tree-id111 . -108) (undo-tree-id112 . -108) (undo-tree-id113 . -108) (undo-tree-id114 . -156) (undo-tree-id115 . -156) (undo-tree-id116 . -166) (undo-tree-id117 . -1) (undo-tree-id118 . -166) (undo-tree-id119 . -1) (undo-tree-id120 . -166) 920) nil (25721 2069 476037 128000) 0 nil])
([nil nil ((#("            [serial-port :as sp]
            [kettler-control.serial :as sr])" 0 12 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 12 25 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 25 26 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 26 28 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 28 31 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 31 32 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t) 32 45 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 45 46 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 46 69 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 69 70 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 70 72 (face clojure-keyword-face cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t) 72 77 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 128) (undo-tree-id86 . -76) (undo-tree-id87 . -46) (undo-tree-id88 . -46) (undo-tree-id89 . -12) (undo-tree-id90 . -76) (undo-tree-id91 . -76) (undo-tree-id92 . -76) 204) nil (25721 2069 475877 3000) 0 nil])
([nil nil ((#("
" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -127) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 128) nil (25721 2069 475813 634000) 0 nil])
([nil nil ((#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . 127) (undo-tree-id71 . 1)) nil (25721 2069 475722 247000) 0 nil])
([nil nil ((127 . 129)) nil (25721 2069 475668 896000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-face cider-locals ("args") fontified t help-echo cider--help-echo)) . -604) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 605 (t 25721 2069 497225 352000)) nil (25721 2268 958774 655000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 677) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 677) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#(" " 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 677) (t 25721 2268 972518 496000)) nil (25721 2500 626230 766000) 0 nil])
([nil nil ((#(")" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -674) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("
" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -675) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("
" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -676) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . 1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 677) nil (25721 2500 626194 45000) 0 nil])
([nil nil ((674 . 675)) nil (25721 2500 625936 940000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -128) (undo-tree-id222 . -1) (128 . 129) 141 (129 . 141) (#("            " 0 12 (cider-locals nil help-echo cider--help-echo fontified nil)) . 128) (undo-tree-id223 . -12) (undo-tree-id224 . -12) (127 . 141) (#("o" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -127) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 128 (127 . 128) (t 25721 2500 637039 177000)) nil (25721 2822 780157 306000) 0 nil])
([nil nil ((nil rear-nonsticky nil 192 . 193) (nil fontified nil 128 . 193) (128 . 193)) nil (25721 2822 780131 251000) 0 nil])
([nil nil ((#("
" 0 1 (cider-block-dynamic-font-lock t cider-locals nil help-echo cider--help-echo fontified t)) . -127) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . 1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 128) nil (25721 2822 780123 140000) 0 nil])
([nil nil ((127 . 140)) nil (25721 2822 780061 327000) 0 nil])
([nil nil ((#("j" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . -222) (undo-tree-id229 . -1) (222 . 223) (#("p" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . -222) (undo-tree-id230 . -1) 223 (222 . 223) (t 25721 2822 799410 443000)) nil (25721 2917 401057 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 222 . 223) (#("
" 0 1 (fontified nil cider-locals nil)) . -241) (222 . 242)) nil (25721 2917 401042 936000) 0 nil])
([nil nil ((461 . 464) (#("e" 0 1 (face clojure-keyword-face cider-locals ("ref") help-echo cider--help-echo fontified t)) . -461) (undo-tree-id227 . -1) 462 (458 . 462) (#(" " 0 1 (cider-locals ("ref") help-echo cider--help-echo fontified t)) . -458) (undo-tree-id228 . -1) 459 (441 . 459) 440) nil (25721 2917 401035 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 406 . 407) (#("
" 0 1 (fontified nil cider-locals ("pars" "start-state" "pars" "automaton" "sm"))) . -492) (402 . 493)) nil (25721 2917 400995 808000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 403)) nil (25721 2917 400990 234000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 403)) nil (25721 2917 400986 271000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 403)) nil (25721 2917 400982 105000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 403)) nil (25721 2917 400977 827000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 441)) nil (25721 2917 400939 180000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 441)) nil (25721 2917 400935 143000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 441)) nil (25721 2917 400931 69000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 441)) nil (25721 2917 400926 198000) 0 nil])
([nil nil ((485 . 486)) nil (25721 2917 400921 847000) 0 nil])
([nil nil ((546 . 551)) nil (25721 2917 400909 180000) 0 nil])
([nil nil ((204 . 205) (t 25721 2917 417169 91000)) nil (25721 2934 730899 934000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 205) (#("
" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 205) (#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo rear-nonsticky t)) . 205)) nil (25721 2934 730890 397000) 0 nil])
([nil nil ((#("x" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . -204) (undo-tree-id234 . -1) (undo-tree-id235 . -1) 205) nil (25721 2934 730880 156000) 0 nil])
([nil nil ((#(")" 0 1 (cider-block-dynamic-font-lock t cider-locals nil fontified t help-echo cider--help-echo)) . 204) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#(")" 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204) (#(" " 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . 204)) nil (25721 2934 730850 953000) 0 nil])
([nil nil ((204 . 206)) nil (25721 3281 161086 674000) 0 nil])
([nil nil ((nil rear-nonsticky nil 475 . 476) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -495) (471 . 496) (t 25721 2934 756758 321000)) nil (25721 3346 915616 600000) 0 nil] [nil nil ((808 . 811) (t 25721 2934 756758 321000)) ((#("
  " 0 3 (cider-locals ("args") fontified t help-echo cider--help-echo)) . 808) (undo-tree-id236 . -2) (undo-tree-id237 . -1) (undo-tree-id238 . -2)) (25721 3281 159810 296000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 472)) nil (25721 3346 915609 878000) 0 nil])
nil
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 472)) nil (25721 3346 915605 489000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 472)) nil (25721 3346 915601 82000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals nil help-echo cider--help-echo rear-nonsticky t fontified t)) . 472)) nil (25721 3346 915596 971000) 0 nil])
([nil nil ((#("
" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 471) (undo-tree-id244 . -1)) nil (25721 3346 915591 879000) 0 nil])
([nil nil ((#("(Thread/sleep 1000)
" 0 1 (cider-locals nil help-echo cider--help-echo fontified t) 1 7 (face font-lock-type-face cider-locals nil help-echo cider--help-echo fontified t) 7 19 (cider-locals nil help-echo cider--help-echo fontified t) 19 20 (cider-locals nil fontified t help-echo cider--help-echo)) . 471) (undo-tree-id241 . -19) (undo-tree-id242 . -20) (undo-tree-id243 . -20)) nil (25721 3346 915582 860000) 0 nil])
([nil nil ((#("  " 0 2 (cider-locals ("args") help-echo cider--help-echo fontified t)) . -808) (undo-tree-id239 . -2) (undo-tree-id240 . -2) 810 (807 . 810) 806) nil (25721 3346 915567 157000) 0 nil])
([nil nil ((nil rear-nonsticky nil 808 . 809) (#("
" 0 1 (fontified nil cider-locals nil)) . -828) (808 . 829)) nil (25721 3346 915530 750000) 0 nil])
([nil nil ((809 . 811)) nil (25721 3346 915516 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 812 . 813) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton" "port" "sm"))) . -846) (808 . 847) (t 25721 3346 926993 53000)) nil (25721 3388 362779 558000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 810)) nil (25721 3388 362768 540000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 810)) nil (25721 3388 362751 967000) 0 nil])
([nil nil ((#("  (sr/send-command port sr/b-reset)
" 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t) 1 2 (cider-locals ("args") help-echo cider--help-echo rear-nonsticky t fontified t) 2 3 (cider-locals ("args") help-echo cider--help-echo fontified t) 3 5 (face font-lock-type-face cider-locals ("args") help-echo cider--help-echo fontified t) 5 24 (cider-locals ("args") help-echo cider--help-echo fontified t) 24 26 (face font-lock-type-face cider-locals ("args") help-echo cider--help-echo fontified t) 26 35 (cider-locals ("args") help-echo cider--help-echo fontified t) 35 36 (cider-locals ("args") help-echo cider--help-echo rear-nonsticky t fontified t)) . 809) (undo-tree-id245 . -1) (undo-tree-id246 . -35) (undo-tree-id247 . 1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -36) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) 810 (t 25721 3388 386010 730000)) nil (25721 3449 195093 662000) 0 nil])
([nil nil ((#("port" 0 4 (cider-locals ("ref") fontified t help-echo cider--help-echo)) . 532) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (t 25721 3449 204569 697000)) nil (25721 3600 868451 435000) 0 nil])
([nil nil ((532 . 535)) nil (25721 3600 868407 677000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-comment-face cider-locals nil fontified t help-echo cider--help-echo)) . -400) (undo-tree-id258 . -1) 401 (400 . 401) (389 . 390) (t 25721 3600 880975 842000)) nil (25721 3832 660416 751000) 0 nil])
([nil nil ((428 . 429) (#("," 0 1 (cider-locals nil fontified t help-echo cider--help-echo)) . -428) (undo-tree-id257 . -1) 429 (428 . 429)) nil (25721 3832 660397 233000) 0 nil])
([nil nil ((nil rear-nonsticky nil 813 . 814) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . -814) (809 . 815) (t 25721 3832 675463 385000)) nil (25721 4876 806338 706000) 0 nil])
([nil nil ((nil rear-nonsticky nil 818 . 819) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . -819) (814 . 820) 813) nil (25721 4876 806330 650000) 0 nil])
([nil nil ((nil rear-nonsticky nil 811 . 812) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton"))) . -895) (809 . 896)) nil (25721 4876 806313 743000) 0 nil])
([nil nil ((nil rear-nonsticky nil 904 . 905) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . -938) (900 . 939) 898 (t 25721 4876 834887 560000)) nil (25721 4917 639343 369000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 902)) nil (25721 4917 639336 351000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 902)) nil (25721 4917 639332 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 946 . 947) (#("
" 0 1 (fontified nil cider-locals ("start-state" "pars" "automaton" "sm"))) . -959) (941 . 960) 938) nil (25721 4917 639326 999000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 943)) nil (25721 4917 639320 481000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 943)) nil (25721 4917 639315 721000) 0 nil])
([nil nil ((#(" " 0 1 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 943)) nil (25721 4917 639300 295000) 0 nil])
([nil nil ((#("d" 0 1 (cider-locals ("args") fontified t help-echo cider--help-echo)) . -898) (undo-tree-id2 . -1) 899 (897 . 899) (#(";" 0 1 (face font-lock-comment-delimiter-face cider-locals ("args") help-echo cider--help-echo fontified t)) . -943) (undo-tree-id3 . -1) 944 (942 . 944) (t 25721 4917 664581 323000)) nil (25721 5019 204495 771000) 0 nil])
([nil nil ((#(" d   
" 0 4 (cider-locals ("args") fontified t help-echo cider--help-echo) 4 5 (cider-locals ("args") fontified t help-echo cider--help-echo rear-nonsticky t) 5 6 (cider-locals ("args") help-echo cider--help-echo fontified t)) . 896) (undo-tree-id0 . -1) (undo-tree-id1 . 4) 897) nil (25721 5019 204479 308000) 0 nil])
([nil nil ((934 . 944)) nil (25721 5019 204424 623000) 0 nil])
([nil nil ((944 . 945)) nil (25721 5019 204420 438000) 0 nil])
([nil nil ((945 . 966)) nil (25721 5019 204415 827000) 0 nil])
([nil nil ((966 . 971)) nil (25721 5019 204403 346000) 0 nil])
([nil nil ((898 . 899) (t 25721 5019 233993 861000)) nil (25721 5174 447237 862000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-comment-face cider-locals ("args") help-echo cider--help-echo fontified t)) . -899) (undo-tree-id10 . -1) 900 (899 . 900) (#("v" 0 1 (face font-lock-comment-face cider-locals ("args") help-echo cider--help-echo fontified t)) . 899) (899 . 900) (t 25721 5174 472963 966000)) nil (25721 7601 342069 637000) 0 nil])
([nil nil ((#("1" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 320)) nil (25721 7601 342049 6000) 0 nil])
([nil nil ((#("2" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . 320)) nil (25721 7601 342041 395000) 0 nil])
([nil nil ((308 . 311)) nil (25721 7601 342034 599000) 0 nil])
([nil nil ((309 . 314)) nil (25721 7601 342027 487000) 0 nil])
([nil nil ((#("2" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -313) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 314) nil (25721 7601 342018 154000) 0 nil])
([nil nil ((313 . 315)) nil (25721 7601 341997 468000) 0 nil])
([nil nil ((#("1" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -322) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 323) nil (25721 7601 341986 579000) 0 nil])
([nil nil ((322 . 323)) nil (25721 7601 341964 560000) 0 nil])
([nil nil ((#("4" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -322) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 323) nil (25721 7601 341953 337000) 0 nil])
([nil nil ((322 . 323)) nil (25721 7601 341907 707000) 0 nil])
([nil nil ((308 . 311)) nil (25721 7601 341899 3000) 0 nil])
([nil nil ((309 . 316)) nil (25721 7601 341879 965000) 0 nil])
([nil nil ((#("0" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -309) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("." 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -310) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("6" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -311) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 312 (t 25721 7601 366562 47000)) nil (25721 7994 615588 815000) 0 nil])
([nil nil ((309 . 310)) nil (25721 7994 615549 852000) 0 nil])
([nil nil ((#("0" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -317) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("." 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -318) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("4" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -319) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 320) nil (25721 7994 615538 1000) 0 nil])
([nil nil ((317 . 318)) nil (25721 7994 615466 390000) 0 nil])
([nil nil ((335 . 336) (t 25721 7994 637332 64000)) nil (25721 8221 285161 728000) 0 nil])
([nil nil ((#("i" 0 1 (cider-locals nil help-echo cider--help-echo fontified t)) . -335) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 336) nil (25721 8221 285154 229000) 0 nil])
([nil nil ((335 . 336)) nil (25721 8221 285113 637000) 0 nil])
([nil nil ((360 . 361) (t 25721 8221 323962 426000)) nil (25721 8757 829829 716000) 0 nil])
([nil nil ((361 . 363)) nil (25721 8757 829824 290000) 0 nil])
([nil nil ((361 . 364)) nil (25721 8757 829810 828000) 0 nil])
([nil nil ((308 . 311) (t 25721 8757 853404 261000)) nil (25721 8880 148202 19000) 0 nil])
([nil nil ((309 . 312)) nil (25721 8880 148189 594000) 0 nil])
([nil nil ((323 . 326) (t 25721 8880 170838 876000)) nil (25721 9270 9823 176000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 326)) nil (25721 9270 9814 694000) 0 nil])
([nil nil ((315 . 318)) nil (25721 9270 9807 491000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 318)) nil (25721 9270 9799 954000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -317) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 318) nil (25721 9270 9791 232000) 0 nil])
([nil nil ((317 . 318)) nil (25721 9270 9771 658000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -309) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 310) nil (25721 9270 9761 232000) 0 nil])
([nil nil ((309 . 312)) nil (25721 9399 145443 167000) 0 nil])
([nil nil ((#(";  (close port)
" 0 3 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-comment-delimiter-face) 3 16 (help-echo cider--help-echo fontified t cider-locals ("args") face font-lock-comment-face)) . 1007) (undo-tree-id13 . -14) (undo-tree-id14 . -14) 1021 (t 25721 9270 53653 298000)) nil (25721 9500 85610 716000) 0 nil] [nil nil ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -331) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -332) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 333 (331 . 333) (313 . 331) (#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals nil)) . 313) (312 . 313) (t 25721 9270 53653 298000)) ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . 312) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (313 . 314) (#("                  " 0 18 (fontified nil help-echo cider--help-echo cider-locals nil)) . 313) (undo-tree-id11 . -17) (undo-tree-id12 . -17) (#("uu" 0 1 (fontified nil help-echo cider--help-echo cider-locals nil) 1 2 (fontified nil help-echo cider--help-echo cider-locals nil)) . 331) (331 . 333)) (25721 9399 143789 306000) 0 nil])
([nil nil ((#(";(def port (open \"/dev/ttyUSB0\" 9600))
" 0 1 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 1 5 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 5 38 (face font-lock-comment-face cider-locals ("open") help-echo cider--help-echo fontified t) 38 39 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t)) . 421) (t 25722 11098 192163 998000)) nil (25722 11451 591838 548000) 0 nil])
nil
([nil nil ((#(";(on-byte port (fn [x] (sr/add-new-char x)))
" 0 1 (face font-lock-comment-delimiter-face cider-locals nil help-echo cider--help-echo fontified t) 1 18 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t) 18 41 (face font-lock-comment-face cider-locals ("x") help-echo cider--help-echo fontified t) 41 43 (face font-lock-comment-face cider-locals ("x") fontified t) 43 44 (face font-lock-comment-face cider-locals nil fontified t) 44 45 (face font-lock-comment-face cider-locals nil help-echo cider--help-echo fontified t)) . 421) (undo-tree-id0 . -45)) nil (25722 11451 591827 196000) 0 nil])
([nil nil ((1019 . 1020) (t 25722 11451 615010 236000)) nil (25722 11592 561259 664000) 0 nil])
([nil nil ((946 . 947)) nil (25722 11592 561244 845000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args") face font-lock-comment-face)) . -946) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 947 (t 25722 11592 591232 365000)) nil (25722 11807 695296 662000) 0 nil])
([nil nil ((#(")" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . -1019) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1020) nil (25722 11807 695264 457000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -309) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 310 (t 25722 11807 711690 372000)) nil (25722 11828 817349 619000) 0 nil])
([nil nil ((309 . 310)) nil (25722 11828 817337 896000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -317) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 318) nil (25722 11828 817332 266000) 0 nil])
([nil nil ((317 . 318)) nil (25722 11828 817320 803000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t help-echo cider--help-echo cider-locals nil)) . -329) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 330) nil (25722 11828 817314 137000) 0 nil])
([nil nil ((329 . 330)) nil (25722 11828 817270 821000) 0 nil])
([nil nil ((#("V" 0 1 (help-echo cider--help-echo fontified t cider-locals ("refV"))) . -440) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 441 (440 . 441) (t 25722 11828 832009 390000)) nil (25722 12293 222290 901000) 0 nil])
([nil nil ((#("(def demo-pars (ref 
                {
                :port nil 
                :mode \"pw-target\"
                :seq power-seq
                :t (System/currentTimeMillis)
                :t0 (System/currentTimeMillis)
                :power-target 0
                }))
" 0 1 (help-echo cider--help-echo fontified t cider-locals nil) 1 4 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-keyword-face) 4 5 (help-echo cider--help-echo fontified t cider-locals ("ref")) 5 14 (help-echo cider--help-echo fontified t cider-locals ("ref") face font-lock-variable-name-face) 14 21 (help-echo cider--help-echo fontified t cider-locals ("ref")) 21 55 (help-echo cider--help-echo fontified t cider-locals ("ref")) 55 56 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 56 60 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 60 61 (help-echo cider--help-echo fontified t cider-locals ("ref")) 61 64 (help-echo cider--help-echo fontified t cider-locals ("ref") face font-lock-constant-face) 64 80 (help-echo cider--help-echo fontified t cider-locals ("ref")) 80 82 (help-echo cider--help-echo fontified t cider-locals ("ref")) 82 83 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 83 87 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 87 88 (help-echo cider--help-echo fontified t cider-locals ("ref")) 88 99 (help-echo cider--help-echo fontified t cider-locals ("ref") face font-lock-string-face) 99 116 (help-echo cider--help-echo fontified t cider-locals ("ref")) 116 117 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 117 120 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 120 147 (help-echo cider--help-echo fontified t cider-locals ("ref")) 147 148 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 148 149 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 149 151 (help-echo cider--help-echo fontified t cider-locals ("ref")) 151 157 (help-echo cider--help-echo fontified t cider-locals ("ref") face font-lock-type-face) 157 193 (help-echo cider--help-echo fontified t cider-locals ("ref")) 193 194 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 194 196 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 196 198 (help-echo cider--help-echo fontified t cider-locals ("ref")) 198 204 (help-echo cider--help-echo fontified t cider-locals ("ref") face font-lock-type-face) 204 240 (help-echo cider--help-echo fontified t cider-locals ("ref")) 240 241 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 241 253 (help-echo cider--help-echo fontified t cider-locals ("ref") face clojure-keyword-face) 253 275 (help-echo cider--help-echo fontified t cider-locals ("ref")) 275 276 (help-echo cider--help-echo fontified t cider-locals nil)) . 421) (undo-tree-id17 . -274) (undo-tree-id18 . -274) (undo-tree-id19 . 257) (undo-tree-id20 . -18) (undo-tree-id21 . -274) (undo-tree-id22 . -276) (undo-tree-id23 . -18) (undo-tree-id24 . -274) (undo-tree-id25 . -256) (undo-tree-id26 . -274) 695) nil (25722 12293 222258 457000) 0 nil])
([nil nil ((nil rear-nonsticky nil 481 . 482) (#("
" 0 1 (cider-locals nil fontified nil)) . -757) (481 . 758)) nil (25722 12293 222182 569000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -790) (770 . 790) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -754) (734 . 754) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -703) (683 . 703) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -653) (633 . 653) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -618) (598 . 618) (#("                " 0 14 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref")) 14 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -580) (560 . 580) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -549) (529 . 549) (#("                " 0 16 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . -527) (507 . 527) (482 . 486) 738) nil (25722 12295 544013 777000) 0 nil])
([nil nil ((#("
" 0 1 (help-echo cider--help-echo fontified t cider-locals ("args"))) . -480) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("
" 0 1 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("args"))) . -481) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 482) nil (25722 12316 661271 683000) 0 nil] [nil nil ((482 . 483)) ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args"))) . 482) (undo-tree-id41 . -1) (undo-tree-id42 . -1)) (25722 12294 638013 951000) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . -483) (480 . 481)) nil (25722 12316 661192 184000) 0 nil])
([nil nil ((483 . 491) (#("    (def" 0 4 (fontified t help-echo cider--help-echo cider-locals ("args")) 4 5 (fontified t help-echo cider--help-echo cider-locals ("args")) 5 8 (fontified t help-echo cider--help-echo cider-locals ("args") face font-lock-keyword-face)) . 483)) ((483 . 491) (#("    (DEF" 0 4 (fontified t help-echo cider--help-echo cider-locals ("args")) 4 5 (fontified t help-echo cider--help-echo cider-locals ("args")) 5 8 (fontified t help-echo cider--help-echo cider-locals ("args"))) . 483) (undo-tree-id39 . -8) (undo-tree-id40 . -8)) (25722 12294 212008 780000) 0 nil])
([nil nil ((#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref"))) . -504) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(" " 0 1 (help-echo cider--help-echo fontified t cider-locals ("args" "ref"))) . -505) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 506) nil (25722 12316 661178 314000) 0 nil])
([nil nil ((491 . 492)) ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args"))) . 491) (undo-tree-id37 . -1) (undo-tree-id38 . -1)) (25722 12293 743567 550000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args" "ref"))) . -503) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 504) nil (25722 12316 661138 741000) 0 nil])
([nil nil ((492 . 493)) ((#("u" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args"))) . 492) (undo-tree-id35 . -1) (undo-tree-id36 . -1)) (25722 12293 222786 894000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil help-echo cider--help-echo cider-locals ("args" "ref"))) . 502) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (503 . 504)) nil (25722 12316 661105 815000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args"))) . -496) (undo-tree-id14 . -1) (495 . 497) (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args"))) . -495) (undo-tree-id15 . -1) (494 . 496) (#("j" 0 1 (fontified t help-echo cider--help-echo cider-locals ("args"))) . -494) (undo-tree-id16 . -1) (493 . 495)) ((#("uj" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("args")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 493) (undo-tree-id29 . -2) (undo-tree-id30 . -1) (494 . 495) (#("jj" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("args")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 494) (undo-tree-id31 . -2) (undo-tree-id32 . -1) (495 . 496) (#("jj" 0 1 (fontified nil help-echo cider--help-echo cider-locals ("args")) 1 2 (fontified nil help-echo cider--help-echo cider-locals ("args"))) . 495) (undo-tree-id33 . -2) (undo-tree-id34 . -1) (496 . 497)) (25722 12293 222074 404000) 0 nil])
([nil current ((787 . 789) (#(" " 0 1 (help-echo cider--help-echo fontified nil cider-locals ("args" "ref"))) . -783) (787 . 788)) nil (25722 12316 661040 94000) 0 nil])
nil
nil
